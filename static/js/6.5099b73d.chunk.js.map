{"version":3,"sources":["components/custom-fields/InputField/index.jsx","components/modals/ConfirmationModal/index.jsx","components/custom-fields/AsyncSelectField/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/user/lecturerSlice.js","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","app/api/group/mentorSlice.js","components/modals/EditFieldModal/index.jsx","pages/Mentor/components/MentorSearchCard/MentorAddModal.jsx","pages/Mentor/components/MentorSearchCard/index.jsx","pages/Mentor/components/MentorDetailCard/index.jsx","pages/Mentor/components/MentorListCard/index.jsx","pages/Mentor/index.jsx"],"names":["InputField","props","field","form","type","label","placeholder","disabled","errors","touched","name","showError","Group","className","Label","htmlFor","Control","id","isInvalid","render","msg","Feedback","ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","AsyncSelectField","loadOptions","onBlur","onChange","selectedOption","selectedValue","value","changeEvent","target","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","component","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchLecturers","mutation","query","queryStr","url","method","params","providesTags","result","map","lecturer","LECTURER","getLecturerInfo","lecturerId","userId","error","arg","getLecturerMentorGroups","mentorGroup","MENTORGROUP","groupId","concat","MENTORGROUP_LIST","getLecturerFaculty","FACULTY","getLecturerCourses","course","COURSE","COURSE_LIST","addNewLecturer","body","password","address","facultyId","invalidatesTags","LECTURER_LIST","removeLecturer","changeLecturerInfo","changeLecturerFaculty","currentGroupId","currentFacultyId","newGroupId","newFacultyId","useSearchLecturersMutation","useGetLecturerMentorGroupsQuery","useGetLecturerCoursesQuery","useGetLecturerFacultyQuery","useGetLecturerInfoQuery","useAddNewLecturerMutation","useRemoveLecturerMutation","useChangeLecturerInfoMutation","useChangeLecturerFacultyMutation","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","searchMentors","groupType","mentor","getMentorInfo","getMentorGroupStudents","student","STUDENT","STUDENT_LIST","addNewMentorGroup","mentorId","groupName","removeMentorGroup","changeGroupName","changeMentorId","currentMentorId","newMentorId","useSearchMentorsMutation","useGetMentorGroupStudentsQuery","useGetMentorInfoQuery","useAddNewMentorGroupMutation","useRemoveMentorGroupMutation","useChangeGroupNameMutation","useChangeMentorIdMutation","EditFieldModal","isNumber","singleField","MentorAddModal","triggerSearch","triggerAdd","dispatch","useDispatch","inputValue","unwrap","lecturers","setSelectedMentorId","Modal","Form","Button","Spinner","MentorSearchCard","trigger","data","isLoading","selectedMentorId","useSelector","selectedMentorIdSelector","addModal","setAddModal","setIsLoading","MentorDetailCard","mentorInfo","isFetching","triggerRemoveMentorGroup","triggerRename","triggerChangeMentor","triggerSearchLecturers","showRenameModal","setShowRenameModal","showChangeMentorModal","setShowChangeMentorModal","mentorName","newGroupName","MentorListCard","students","userName","MentorPage","Col","md"],"mappings":"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","file":"static/js/6.5099b73d.chunk.js","sourcesContent":["import Form from 'react-bootstrap/Form'\r\nimport { ErrorMessage } from 'formik'\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props\r\n  const { errors, touched } = form\r\n  const { name } = field\r\n  const showError = errors[name] && touched[name]\r\n\r\n  return (\r\n    <Form.Group className=\"mb-2\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <Form.Control\r\n        id={name}\r\n        {...field}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        disabled={disabled}\r\n        isInvalid={showError}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n","import { Modal, Button, Spinner } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nconst ConfirmationModal = ({\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleError,\r\n  title,\r\n  content,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n  const handleClick = async () => {\r\n    if (handleSubmit) {\r\n      setIsSubmitting(true)\r\n      try {\r\n        await handleSubmit()\r\n      } catch (e) {\r\n        if (handleError) {\r\n          handleError(e)\r\n        }\r\n      }\r\n    }\r\n    // handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClick}>\r\n          {isSubmitting && (\r\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\r\n          )}\r\n          OK\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal\r\n","import { ErrorMessage } from 'formik'\r\nimport { Form } from 'react-bootstrap'\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nfunction AsyncSelectField(props) {\r\n  const { field, form, label, placeholder, disabled, loadOptions } = props\r\n  const { name, onBlur } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    }\r\n    field.onChange(changeEvent)\r\n  }\r\n\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <AsyncSelect\r\n        id={name}\r\n        onChange={handleSelectedOptionChange}\r\n        onBlur={onBlur}\r\n        placeholder={placeholder}\r\n        loadOptions={loadOptions}\r\n        disabled={disabled}\r\n        className={showError ? 'is-invalid' : ''}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AsyncSelectField\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  itemId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  itemId: '',\r\n}\r\n\r\nconst SelectItemModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleSearchItems,\r\n}) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.itemId)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('itemId', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"itemId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={handleSearchItems}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SelectItemModal\r\n","import {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchLecturers: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/user',\r\n        method: 'GET',\r\n        params: { role: 'LECTURER', query: queryStr || '' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((lecturer) => ({ type: LECTURER, id: lecturer.id })),\r\n    }),\r\n\r\n    getLecturerInfo: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/info',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result, error, arg) => [{ type: LECTURER, id: arg }],\r\n    }),\r\n\r\n    getLecturerMentorGroups: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/mentor',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) =>\r\n        result\r\n          .map((mentorGroup) => ({\r\n            type: MENTORGROUP,\r\n            id: mentorGroup.groupId,\r\n          }))\r\n          .concat([{ type: MENTORGROUP_LIST, id: arg }]),\r\n    }),\r\n\r\n    getLecturerFaculty: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/faculty',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n        { type: LECTURER, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getLecturerCourses: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/course',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((course) => ({\r\n            type: COURSE,\r\n            id: course.groupId,\r\n          }))\r\n          .concat([{ type: COURSE_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewLecturer: builder.mutation({\r\n      query: ({ id, name, password, address, facultyId }) => ({\r\n        url: '/user',\r\n        method: 'POST',\r\n        body: { id, name, password, role: 'LECTURER', address, facultyId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER_LIST, id: arg.facultyId },\r\n      ],\r\n    }),\r\n\r\n    removeLecturer: builder.mutation({\r\n      query: ({ userId }) => ({\r\n        url: '/user',\r\n        method: 'DELETE',\r\n        params: { userId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: LECTURER, id: arg.userId },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerInfo: builder.mutation({\r\n      query: ({ id, name, address }) => ({\r\n        url: '/user',\r\n        method: 'PUT',\r\n        body: { id, name, address },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        {\r\n          type: LECTURER,\r\n          id: arg.id,\r\n        },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerFaculty: builder.mutation({\r\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentFacultyId,\r\n          newGroupId: newFacultyId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER, id: arg.id },\r\n        { type: LECTURER_LIST, id: arg.currentFacultyId },\r\n        { type: LECTURER_LIST, id: arg.newFacultyId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchLecturersMutation,\r\n  useGetLecturerMentorGroupsQuery,\r\n  useGetLecturerCoursesQuery,\r\n  useGetLecturerFacultyQuery,\r\n  useGetLecturerInfoQuery,\r\n  useAddNewLecturerMutation,\r\n  useRemoveLecturerMutation,\r\n  useChangeLecturerInfoMutation,\r\n  useChangeLecturerFacultyMutation,\r\n} = extendedApi\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\n\r\nconst SearchCard = ({\r\n  label,\r\n  items = [],\r\n  selectedItemKey,\r\n  keySelector,\r\n  nameSelector,\r\n  showKey,\r\n  onSearch,\r\n  onAdd,\r\n  onSelect,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!selectedItemKey) {\r\n      // On mount, if no item selected, get something\r\n      onSearch(selectedItemKey)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [query, setQuery] = useState('')\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          active={itemKey === selectedItemKey}\r\n          action\r\n          onClick={() => onSelect(item)}\r\n          className=\"user-select-none\"\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            {showKey ? <div>{itemKey}</div> : null}\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between\">\r\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n          <Form.Control\r\n            placeholder=\"placeholder\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n        </FloatingLabel>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          onClick={() => {\r\n            onSearch(query)\r\n            setQuery('')\r\n          }}\r\n        >\r\n          Find\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={onAdd}>\r\n          Add\r\n        </Button>\r\n      </Card.Header>\r\n      {listItems.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n      ) : null}\r\n      <Card.Footer className=\"text-muted text-center\">\r\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SearchCard\r\n","import {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  NavLink,\r\n  ListGroup,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from 'react-bootstrap'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst DetailCard = (props) => {\r\n  const {\r\n    label,\r\n    buttons = [],\r\n    fields = [],\r\n    links = [],\r\n    listItems = [],\r\n    listItemLabel,\r\n    keySelector,\r\n    nameSelector,\r\n    linkSelector,\r\n  } = props\r\n  const navigate = useNavigate()\r\n  const itemList = listItems.map((item) => (\r\n    <ListGroup.Item key={keySelector(item)}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\r\n        <Link\r\n          to={linkSelector(item)}\r\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\r\n      </div>\r\n    </ListGroup.Item>\r\n  ))\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\r\n        <DropdownButton variant=\"secondary\" title=\"Options\">\r\n          {buttons.map(({ label, onClick }) => (\r\n            <Dropdown.Item key={label} onClick={onClick}>\r\n              {label}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {fields.map(({ label, content }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                className={content ? '' : 'text-muted'}\r\n                value={content ?? '[not available]'}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n        {links.map(({ label, content, destination }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              {content ? (\r\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\r\n                  {content}\r\n                </NavLink>\r\n              ) : (\r\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\r\n              )}\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n      </Card.Body>\r\n      {itemList.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DetailCard\r\n","import { Fragment, useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../modals/ConfirmationModal'\r\nimport SelectItemModal from '../modals/SelectItemModal'\r\n\r\nconst ListCard = ({\r\n  label,\r\n  items,\r\n  keySelector,\r\n  nameSelector,\r\n  linkSelector,\r\n  showButtons,\r\n  handleRemove,\r\n  handleAdd,\r\n  handleSearchItems,\r\n}) => {\r\n  const [query, setQuery] = useState('')\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showAddModal, setShowAddModal] = useState()\r\n  const itemKeys = items.map((item) => keySelector(item))\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      const isActive = itemKey === keySelector(selectedItem)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          action\r\n          className=\"user-select-none\"\r\n          onClick={() => setSelectedItem(item)}\r\n          active={isActive}\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            <Link\r\n              style={\r\n                isActive\r\n                  ? {\r\n                      color: '#fff',\r\n                    }\r\n                  : {}\r\n              }\r\n              to={linkSelector(item)}\r\n            >{`Go to ${label.toLowerCase()}`}</Link>\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card border=\"secondary\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n            <Form.Control\r\n              placeholder=\"placeholder\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n          </FloatingLabel>\r\n          {showButtons ? (\r\n            <>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"mx-1\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  if (keySelector(selectedItem)) {\r\n                    setShowRemoveWarning(true)\r\n                  } else {\r\n                    setShowSelectWarning(true)\r\n                  }\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </Card.Header>\r\n        {listItems.length !== 0 ? (\r\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n        ) : null}\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n        </Card.Footer>\r\n      </Card>\r\n      <ConfirmationModal\r\n        title=\"Warning\"\r\n        content={`Please select one ${label.toLowerCase()} from the list.`}\r\n        show={showSelectWarning}\r\n        handleClose={() => setShowSelectWarning(false)}\r\n      />\r\n      <ConfirmationModal\r\n        title={`Remove ${label.toLowerCase()}?`}\r\n        content=\"This action cannot be undone. List will be updated.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          await handleRemove(selectedItem)\r\n        }}\r\n      />\r\n      <SelectItemModal\r\n        title={`Add new ${label.toLowerCase()}`}\r\n        show={showAddModal}\r\n        handleClose={() => setShowAddModal(false)}\r\n        handleSubmit={handleAdd}\r\n        handleSearchItems={async (query) => {\r\n          const itemList = await handleSearchItems(query)\r\n          return itemList.filter((item) => !itemKeys.includes(item.value))\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListCard\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef()\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value]) // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current\r\n}\r\n\r\nexport default usePrevious\r\n","import { useEffect } from 'react'\r\nimport { useMatch, useNavigate } from 'react-router'\r\nimport usePrevious from './usePrevious'\r\n\r\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\r\n  const navigate = useNavigate()\r\n  const match = useMatch('/:resource/:itemId') // Can be customized\r\n  const itemIdParam = match?.params?.itemId\r\n  const resourceParam = match?.params?.resource\r\n  const prevSelectedId = usePrevious(selectedItemId)\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      if (itemIdParam) {\r\n        if (itemIdParam !== selectedItemId) {\r\n          if (prevSelectedId) {\r\n            if (itemIdParam === prevSelectedId) {\r\n              // Update url based on selected item\r\n              navigate(selectedItemId.toString())\r\n            } else {\r\n              // Weird?\r\n              console.log('Weird?', {\r\n                itemIdParam,\r\n                prevSelectedId,\r\n                selectedItemId,\r\n              })\r\n            }\r\n          } else {\r\n            // Link from another resource\r\n            setSelectedItemId(itemIdParam)\r\n          }\r\n        } else {\r\n          // In sync, nothing changes, good!\r\n        }\r\n      } else {\r\n        // First select\r\n        navigate(selectedItemId.toString())\r\n      }\r\n    } else {\r\n      if (prevSelectedId) {\r\n        if (prevSelectedId === itemIdParam) {\r\n          // Current item deleted, selected ID is null\r\n          navigate(`/${resourceParam}`) // Clear param\r\n        } else {\r\n          // Weird?\r\n          console.log('Weird?', {\r\n            itemIdParam,\r\n            prevSelectedId,\r\n            selectedItemId,\r\n          })\r\n        }\r\n      } else {\r\n        if (itemIdParam) {\r\n          // Fresh load selected item from entered url\r\n          setSelectedItemId(itemIdParam)\r\n        } else {\r\n          // Fresh load with no param\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedItemId, itemIdParam])\r\n}\r\n\r\nexport default useItemParam\r\n","import {\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchMentors: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/group',\r\n        method: 'GET',\r\n        params: { query: queryStr || '', groupType: 'MENTORGROUP' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((mentor) => ({ type: MENTORGROUP, id: mentor.groupId })),\r\n    }),\r\n\r\n    getMentorInfo: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/mentor/info',\r\n        method: 'GET',\r\n        params: { groupId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: MENTORGROUP, id: result.groupId },\r\n      ],\r\n    }),\r\n\r\n    getMentorGroupStudents: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/group/user',\r\n        method: 'GET',\r\n        params: { groupId, role: 'STUDENT' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((student) => ({ type: STUDENT, id: student.userId }))\r\n          .concat([{ type: STUDENT_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewMentorGroup: builder.mutation({\r\n      query: ({ mentorId, groupName }) => ({\r\n        url: '/mentor',\r\n        method: 'POST',\r\n        body: { mentorId, groupName },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: MENTORGROUP_LIST, id: arg.mentorId },\r\n      ],\r\n    }),\r\n\r\n    removeMentorGroup: builder.mutation({\r\n      query: ({ groupId }) => ({\r\n        url: '/group',\r\n        method: 'DELETE',\r\n        params: { groupId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: MENTORGROUP, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeGroupName: builder.mutation({\r\n      query: ({ groupId, groupName }) => ({\r\n        url: '/group',\r\n        method: 'PUT',\r\n        body: { groupId, groupName },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: MENTORGROUP, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeMentorId: builder.mutation({\r\n      query: ({ groupId, currentMentorId, newMentorId }) => ({\r\n        url: '/mentor',\r\n        method: 'PUT',\r\n        body: { groupId, mentorId: newMentorId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: MENTORGROUP, id: arg.groupId },\r\n        { type: MENTORGROUP_LIST, id: arg.currentMentorId },\r\n        { type: MENTORGROUP_LIST, id: arg.newMentorId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchMentorsMutation,\r\n  useGetMentorGroupStudentsQuery,\r\n  useGetMentorInfoQuery,\r\n  useAddNewMentorGroupMutation,\r\n  useRemoveMentorGroupMutation,\r\n  useChangeGroupNameMutation,\r\n  useChangeMentorIdMutation,\r\n} = extendedApi\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../custom-fields/InputField'\r\n\r\nconst EditFieldModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  initialValues = '',\r\n  isNumber = false,\r\n}) => {\r\n  const validationSchema = Yup.object().shape({\r\n    singleField: isNumber\r\n      ? Yup.number().required('This field is required.')\r\n      : Yup.string().required('This field is required.'),\r\n  })\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.singleField)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('singleField', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          singleField: initialValues,\r\n        }}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"singleField\"\r\n                component={InputField}\r\n                type={isNumber ? 'number' : 'text'}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditFieldModal\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../../../components/custom-fields/InputField'\r\nimport AsyncSelectField from '../../../../components/custom-fields/AsyncSelectField'\r\nimport { useAddNewMentorGroupMutation } from '../../../../app/api/group/mentorSlice'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport { setSelectedMentorId } from '../../../../app/pageSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string().required('This field is required.'),\r\n  mentorId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  mentorId: '',\r\n}\r\n\r\nconst MentorAddModal = (props) => {\r\n  const { show, handleClose } = props\r\n  const [triggerSearch] = useSearchLecturersMutation()\r\n  const [triggerAdd] = useAddNewMentorGroupMutation()\r\n  const dispatch = useDispatch()\r\n\r\n  const searchLecturers = async (inputValue) => {\r\n    const lecturers = await triggerSearch(inputValue).unwrap()\r\n    return lecturers.map((lecturer) => ({\r\n      value: lecturer.id,\r\n      label: lecturer.name,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (values, actions) => {\r\n    try {\r\n      const { groupId } = await triggerAdd(values).unwrap()\r\n      handleClose()\r\n      dispatch(setSelectedMentorId(groupId))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new mentor group</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"groupName\"\r\n                component={InputField}\r\n                label=\"New group name\"\r\n                placeholder=\"ITCS K18...\"\r\n              />\r\n              <FastField\r\n                name=\"mentorId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={searchLecturers}\r\n                label=\"Select mentor\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MentorAddModal\r\n","import SearchCard from '../../../../components/SearchCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  selectedMentorIdSelector,\r\n  setIsLoading,\r\n  setSelectedMentorId,\r\n} from '../../../../app/pageSlice'\r\nimport { useSearchMentorsMutation } from '../../../../app/api/group/mentorSlice'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport MentorAddModal from './MentorAddModal'\r\n\r\nconst MentorSearchCard = () => {\r\n  const dispatch = useDispatch()\r\n  const [trigger, query] = useSearchMentorsMutation()\r\n  const { data, isLoading } = query\r\n  const selectedMentorId = useSelector(selectedMentorIdSelector)\r\n  const [addModal, setAddModal] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(isLoading))\r\n  }, [isLoading, dispatch])\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchCard\r\n        label=\"Mentor\"\r\n        items={data}\r\n        selectedItemKey={selectedMentorId}\r\n        keySelector={(mentor) => mentor.groupId}\r\n        nameSelector={(mentor) => mentor.groupName}\r\n        showKey={false}\r\n        onSearch={(query) => trigger(query)}\r\n        onAdd={() => setAddModal(true)}\r\n        onSelect={(mentor) => dispatch(setSelectedMentorId(mentor.groupId))}\r\n      />\r\n      <MentorAddModal show={addModal} handleClose={() => setAddModal(false)} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MentorSearchCard\r\n","import { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  useChangeGroupNameMutation,\r\n  useChangeMentorIdMutation,\r\n  useGetMentorInfoQuery,\r\n  useRemoveMentorGroupMutation,\r\n} from '../../../../app/api/group/mentorSlice'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport DetailCard from '../../../../components/DetailCard'\r\nimport { setIsLoading, setSelectedMentorId } from '../../../../app/pageSlice'\r\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\r\nimport SelectItemModal from '../../../../components/modals/SelectItemModal'\r\nimport EditFieldModal from '../../../../components/modals/EditFieldModal'\r\n\r\nconst MentorDetailCard = ({ selectedMentorId }) => {\r\n  const { data: mentorInfo, isFetching } =\r\n    useGetMentorInfoQuery(selectedMentorId)\r\n\r\n  const [triggerRemoveMentorGroup] = useRemoveMentorGroupMutation()\r\n  const [triggerRename] = useChangeGroupNameMutation()\r\n  const [triggerChangeMentor] = useChangeMentorIdMutation()\r\n  const [triggerSearchLecturers] = useSearchLecturersMutation()\r\n\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showRenameModal, setShowRenameModal] = useState(false)\r\n  const [showChangeMentorModal, setShowChangeMentorModal] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (isFetching) {\r\n      dispatch(setIsLoading(true))\r\n    } else {\r\n      dispatch(setIsLoading(false))\r\n    }\r\n  }, [isFetching, dispatch])\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DetailCard\r\n        label=\"Group\"\r\n        fields={[\r\n          { label: 'Group name', content: mentorInfo.groupName },\r\n          { label: 'Group ID', content: mentorInfo.groupId },\r\n        ]}\r\n        links={[\r\n          {\r\n            label: 'Mentor',\r\n            content: mentorInfo.mentorName,\r\n            destination: `/lecturer/${mentorInfo.mentorId}`,\r\n          },\r\n        ]}\r\n        buttons={[\r\n          {\r\n            label: 'Rename group',\r\n            onClick: () => {\r\n              setShowRenameModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change mentor',\r\n            onClick: () => {\r\n              setShowChangeMentorModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Remove group',\r\n            onClick: () => {\r\n              setShowRemoveWarning(true)\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change group name\"\r\n        show={showRenameModal}\r\n        handleClose={() => {\r\n          setShowRenameModal(false)\r\n        }}\r\n        handleSubmit={async (newGroupName) => {\r\n          await triggerRename({\r\n            groupId: mentorInfo.groupId,\r\n            groupName: newGroupName,\r\n          })\r\n        }}\r\n        initialValues={mentorInfo.groupName}\r\n      />\r\n      <SelectItemModal\r\n        title=\"Change mentor\"\r\n        show={showChangeMentorModal}\r\n        handleClose={() => {\r\n          setShowChangeMentorModal(false)\r\n        }}\r\n        handleSubmit={async (newMentorId) => {\r\n          await triggerChangeMentor({\r\n            groupId: mentorInfo.groupId,\r\n            currentMentorId: mentorInfo.mentorId,\r\n            newMentorId,\r\n          })\r\n        }}\r\n        handleSearchItems={async (query) => {\r\n          const lecturers = await triggerSearchLecturers(query).unwrap()\r\n          return lecturers.map((lecturer) => ({\r\n            value: lecturer.id,\r\n            label: lecturer.name,\r\n          }))\r\n        }}\r\n      />\r\n      <ConfirmationModal\r\n        title=\"Remove mentor group?\"\r\n        content=\"All students and lecturers will be removed from this mentor group too.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          dispatch(setSelectedMentorId(null))\r\n          await triggerRemoveMentorGroup({\r\n            groupId: mentorInfo.groupId,\r\n          }).unwrap()\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MentorDetailCard\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useGetMentorGroupStudentsQuery } from '../../../../app/api/group/mentorSlice'\r\nimport { setIsLoading } from '../../../../app/pageSlice'\r\nimport ListCard from '../../../../components/ListCard'\r\n\r\nconst MentorListCard = ({ selectedMentorId }) => {\r\n  const { data: students, isFetching } =\r\n    useGetMentorGroupStudentsQuery(selectedMentorId)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (isFetching) {\r\n      dispatch(setIsLoading(true))\r\n    } else {\r\n      dispatch(setIsLoading(false))\r\n    }\r\n  }, [isFetching, dispatch])\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <ListCard\r\n      label=\"Student\"\r\n      items={students}\r\n      keySelector={(student) => student.userId}\r\n      nameSelector={(student) => student.userName}\r\n      linkSelector={(student) => `/student/${student.userId}`}\r\n      showButtons={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MentorListCard\r\n","import useItemParam from '../../hooks/useItemParam'\r\nimport {\r\n  selectedMentorIdSelector,\r\n  setSelectedMentorId,\r\n} from '../../app/pageSlice'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport MentorSearchCard from './components/MentorSearchCard'\r\nimport MentorDetailCard from './components/MentorDetailCard'\r\nimport MentorListCard from './components/MentorListCard'\r\nimport { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst MentorPage = () => {\r\n  const dispatch = useDispatch()\r\n  const selectedMentorId = useSelector(selectedMentorIdSelector)\r\n\r\n  useItemParam({\r\n    selectedItemId: selectedMentorId,\r\n    setSelectedItemId: (mentorId) => {\r\n      dispatch(setSelectedMentorId(mentorId))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center my-3\">\r\n      <Col md=\"3\">\r\n        <MentorSearchCard />\r\n      </Col>\r\n      {selectedMentorId ? (\r\n        <>\r\n          <Col md=\"4\">\r\n            <MentorDetailCard selectedMentorId={selectedMentorId} />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <MentorListCard selectedMentorId={selectedMentorId} />\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Col md=\"4\"></Col>\r\n          <Col md=\"4\"></Col>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default MentorPage\r\n"],"sourceRoot":""}