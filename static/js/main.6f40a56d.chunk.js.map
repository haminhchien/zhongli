{"version":3,"sources":["components/NavigationBar/index.jsx","pages/Login/index.jsx","App.js","app/store.js","index.js","app/authSlice.js","app/api/tagConstants.js","app/pageSlice.js","config.js","app/api/index.js","components/custom-fields/InputField/index.jsx"],"names":["NavigationBar","dispatch","useDispatch","Navbar","bg","variant","Container","className","Brand","href","target","rel","Nav","Link","as","NavLink","to","Button","onClick","logout","validationSchema","Yup","shape","userId","required","password","Login","navigate","useNavigate","location","useLocation","handleLogin","values","actions","a","adminLogin","unwrap","res","message","setFieldError","returnUrl","state","from","pathname","replace","console","log","Card","border","style","width","Header","Body","initialValues","onSubmit","formikProps","Form","noValidate","handleSubmit","onReset","handleReset","name","label","component","InputField","type","isSubmitting","Spinner","animation","role","size","StudentPage","React","lazy","LecturerPage","MentorPage","CoursePage","FacultyPage","NotFoundPage","RequireAuth","children","isAuthenticated","useSelector","selectJWT","App","isLoading","selectLoadingCount","ProgressBar","animated","now","path","element","combinedReducer","combineReducers","apiSlice","reducerPath","reducer","authSlice","pageSlice","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","action","toString","undefined","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","setupListeners","config","checkEnvVariables","Router","isProduction","HashRouter","BrowserRouter","ReactDOM","render","StrictMode","loading","fallback","document","getElementById","createAsyncThunk","thunkAPI","fetch","apiUrl","method","headers","body","JSON","stringify","response","ok","rejectWithValue","json","createSlice","initialState","user","id","psid","displayId","jwt","reducers","extraReducers","builder","addCase","fulfilled","payload","accessToken","COURSE","FACULTY","MENTORGROUP","LECTURER","STUDENT","MENTORGROUP_LIST","STUDENT_LIST","LECTURER_LIST","COURSE_LIST","selectedStudentId","selectedLecturerId","selectedMentorId","selectedCourseId","selectedFacultyId","loadingCount","loadingStarted","loadingDone","setSelectedStudentId","setSelectedLecturerId","setSelectedMentorId","setSelectedCourseId","setSelectedFacultyId","selectedStudentIdSelector","selectedLecturerIdSelector","selectedMentorIdSelector","selectedCourseIdSelector","selectedFacultyIdSelector","dotenv","ENV_VARS","process","forEach","warn","authorizedBaseQuery","fetchBaseQuery","baseUrl","prepareHeaders","getState","token","set","baseQueryWithReauth","args","api","extraOptions","result","error","status","createApi","baseQuery","refetchOnReconnect","tagTypes","endpoints","props","field","form","placeholder","disabled","errors","touched","showError","Group","Label","htmlFor","Control","isInvalid","msg","Feedback"],"mappings":"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","file":"static/js/main.6f40a56d.chunk.js","sourcesContent":["import { Navbar, Container, Nav, Button } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../app/authSlice'\r\n\r\nconst NavigationBar = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container className=\"d-flex justify-content-between\">\r\n        <div className=\"d-flex\">\r\n          <Navbar.Brand\r\n            href=\"https://github.com/haminhchien/zhongli\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n          >\r\n            ADMIN WEB\r\n          </Navbar.Brand>\r\n          <Nav variant=\"pills\" className=\"me-auto\">\r\n            <Nav.Link as={NavLink} to=\"/student\">\r\n              Student\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/lecturer\">\r\n              Lecturer\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/mentor\">\r\n              Mentor\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/course\">\r\n              Course\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/faculty\">\r\n              Faculty\r\n            </Nav.Link>\r\n          </Nav>\r\n        </div>\r\n        <Button variant=\"outline-light\" onClick={handleLogout}>\r\n          Logout\r\n        </Button>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar\r\n","import { FastField, Formik } from 'formik'\r\nimport { Button, Card, Form, Spinner } from 'react-bootstrap'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport InputField from '../../components/custom-fields/InputField'\r\nimport * as Yup from 'yup'\r\nimport { adminLogin } from '../../app/authSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userId: Yup.string().required('This field is required.'),\r\n  password: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  const handleLogin = async (values, actions) => {\r\n    try {\r\n      const res = await dispatch(adminLogin(values)).unwrap()\r\n      if (res?.message) {\r\n        actions.setFieldError('password', res.message)\r\n      } else {\r\n        const returnUrl = location.state?.from?.pathname || '/'\r\n        navigate(returnUrl, { replace: true })\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      border=\"secondary\"\r\n      className=\"my-5 mx-auto\"\r\n      style={{ width: '350px' }}\r\n    >\r\n      <Card.Header className=\"text-center text-white bg-primary\">\r\n        <h3>Login</h3>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Formik\r\n          initialValues={{\r\n            userId: '',\r\n            password: '',\r\n          }}\r\n          onSubmit={handleLogin}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(formikProps) => (\r\n            <Form\r\n              noValidate\r\n              onSubmit={formikProps.handleSubmit}\r\n              onReset={formikProps.handleReset}\r\n            >\r\n              <FastField\r\n                name=\"userId\"\r\n                label=\"User ID:\"\r\n                component={InputField}\r\n              />\r\n              <FastField\r\n                name=\"password\"\r\n                label=\"Password:\"\r\n                type=\"password\"\r\n                component={InputField}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectJWT } from './app/authSlice'\r\nimport { Routes, Route, Navigate, useLocation } from 'react-router-dom'\r\n\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { ProgressBar } from 'react-bootstrap'\r\nimport { selectLoadingCount } from './app/pageSlice'\r\n\r\nimport './App.css'\r\nimport Login from './pages/Login'\r\n\r\nconst StudentPage = React.lazy(() => import('./pages/Student'))\r\nconst LecturerPage = React.lazy(() => import('./pages/Lecturer'))\r\nconst MentorPage = React.lazy(() => import('./pages/Mentor'))\r\nconst CoursePage = React.lazy(() => import('./pages/Course'))\r\nconst FacultyPage = React.lazy(() => import('./pages/Faculty'))\r\nconst NotFoundPage = React.lazy(() => import('./pages/NotFound'))\r\n\r\nfunction RequireAuth({ children }) {\r\n  const isAuthenticated = !!useSelector(selectJWT)\r\n  let location = useLocation()\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} />\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nfunction App() {\r\n  const isLoading = useSelector(selectLoadingCount) > 0\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavigationBar />\r\n      <ProgressBar variant=\"secondary\" animated now={isLoading ? 100 : 0} />\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <RequireAuth>\r\n              <Navigate replace to=\"/student\" />\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"student/*\"\r\n          element={\r\n            <RequireAuth>\r\n              <StudentPage />\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"lecturer/*\"\r\n          element={\r\n            <RequireAuth>\r\n              <LecturerPage />\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"mentor/*\"\r\n          element={\r\n            <RequireAuth>\r\n              <MentorPage />\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"course/*\"\r\n          element={\r\n            <RequireAuth>\r\n              <CoursePage />\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"faculty/*\"\r\n          element={\r\n            <RequireAuth>\r\n              <FacultyPage />\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route path=\"login\" element={<Login />} />\r\n        <Route path=\"*\" element={<NotFoundPage />} />\r\n      </Routes>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport { apiSlice } from './api'\r\nimport { authSlice, logout } from './authSlice'\r\nimport { pageSlice } from './pageSlice'\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\r\n\r\nconst combinedReducer = combineReducers({\r\n  [apiSlice.reducerPath]: apiSlice.reducer,\r\n  [authSlice.name]: authSlice.reducer,\r\n  [pageSlice.name]: pageSlice.reducer,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === logout.toString()) {\r\n    // check for action type\r\n    state = undefined\r\n  }\r\n  return combinedReducer(state, action)\r\n}\r\n\r\n// Configure redux-persist\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: [apiSlice.reducerPath, pageSlice.name],\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(apiSlice.middleware),\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n\r\n// enable listener behavior for the store\r\nsetupListeners(store.dispatch)\r\n","import React, { Suspense } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { persistor, store } from './app/store'\r\nimport { Provider as ReduxProvider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport config from './config'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n// Check if all environment variables are set\r\nconfig.checkEnvVariables()\r\n\r\nconst Router = config.isProduction ? HashRouter : BrowserRouter\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ReduxProvider store={store}>\r\n      <PersistGate\r\n        loading={<div>Loading redux state...</div>}\r\n        persistor={persistor}\r\n      >\r\n        <Router>\r\n          <Suspense fallback={<div>Loading route...</div>}>\r\n            <App />\r\n          </Suspense>\r\n        </Router>\r\n      </PersistGate>\r\n    </ReduxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport config from '../config'\r\n\r\nconst initialState = {\r\n  user: {\r\n    id: null,\r\n    psid: null,\r\n    name: null,\r\n    role: null,\r\n    displayId: null,\r\n  },\r\n  jwt: null,\r\n}\r\n\r\nexport const adminLogin = createAsyncThunk(\r\n  'auth/adminLogin',\r\n  async ({ userId, password }, thunkAPI) => {\r\n    const response = await fetch(`${config.apiUrl}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ userId, password }),\r\n    })\r\n    if (!response.ok) {\r\n      thunkAPI.rejectWithValue(response)\r\n    }\r\n    return response.json()\r\n  },\r\n)\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout(state, action) {}, // state will be reset in root reducer\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(adminLogin.fulfilled, (state, { payload }) => {\r\n      state.jwt = payload.accessToken\r\n      state.user = {\r\n        id: payload.id,\r\n        psid: payload.psid,\r\n        name: payload.name,\r\n        role: payload.role,\r\n        displayId: payload.displayId,\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\nexport const selectJWT = (state) => state[authSlice.name].jwt\r\n\r\nexport const { logout } = authSlice.actions\r\n","export const COURSE = 'COURSE'\r\nexport const FACULTY = 'FACULTY'\r\nexport const MENTORGROUP = 'MENTORGROUP'\r\nexport const LECTURER = 'LECTURER'\r\nexport const STUDENT = 'STUDENT'\r\n\r\nexport const MENTORGROUP_LIST = 'MENTORGROUP_LIST'\r\nexport const STUDENT_LIST = 'STUDENT_LIST'\r\nexport const LECTURER_LIST = 'LECTURER_LIST'\r\nexport const COURSE_LIST = 'COURSE_LIST'\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  selectedStudentId: undefined,\r\n  selectedLecturerId: undefined,\r\n  selectedMentorId: undefined,\r\n  selectedCourseId: undefined,\r\n  selectedFacultyId: undefined,\r\n  loadingCount: 0,\r\n}\r\n\r\nexport const pageSlice = createSlice({\r\n  name: 'page',\r\n  initialState,\r\n  reducers: {\r\n    loadingStarted: (state, action) => {\r\n      state.loadingCount++\r\n    },\r\n    loadingDone: (state, action) => {\r\n      state.loadingCount--\r\n    },\r\n    setSelectedStudentId: (state, action) => {\r\n      state.selectedStudentId = action.payload\r\n    },\r\n    setSelectedLecturerId: (state, action) => {\r\n      state.selectedLecturerId = action.payload\r\n    },\r\n    setSelectedMentorId: (state, action) => {\r\n      state.selectedMentorId = action.payload\r\n    },\r\n    setSelectedCourseId: (state, action) => {\r\n      state.selectedCourseId = action.payload\r\n    },\r\n    setSelectedFacultyId: (state, action) => {\r\n      state.selectedFacultyId = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectLoadingCount = (state) => state[pageSlice.name].loadingCount\r\n\r\nexport const selectedStudentIdSelector = (state) =>\r\n  state[pageSlice.name].selectedStudentId\r\n\r\nexport const selectedLecturerIdSelector = (state) =>\r\n  state[pageSlice.name].selectedLecturerId\r\n\r\nexport const selectedMentorIdSelector = (state) =>\r\n  state[pageSlice.name].selectedMentorId\r\n\r\nexport const selectedCourseIdSelector = (state) =>\r\n  state[pageSlice.name].selectedCourseId\r\n\r\nexport const selectedFacultyIdSelector = (state) =>\r\n  state[pageSlice.name].selectedFacultyId\r\n\r\nexport const {\r\n  loadingStarted,\r\n  loadingDone,\r\n  setSelectedStudentId,\r\n  setSelectedLecturerId,\r\n  setSelectedMentorId,\r\n  setSelectedCourseId,\r\n  setSelectedFacultyId,\r\n} = pageSlice.actions\r\n","import dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\n// Required environment variables\r\nconst ENV_VARS = ['REACT_APP_API_URL', 'NODE_ENV']\r\n\r\nconst config = {\r\n  apiUrl: process.env.REACT_APP_API_URL,\r\n  isProduction: process.env.NODE_ENV === 'production',\r\n\r\n  checkEnvVariables: function () {\r\n    ENV_VARS.forEach(function (key) {\r\n      if (!process.env[key]) {\r\n        console.warn('WARNING: Missing the environment variable ' + key)\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport default config\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport config from '../../config'\r\nimport { logout, selectJWT } from '../authSlice'\r\nimport {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from './tagConstants'\r\nimport { loadingStarted, loadingDone } from '../pageSlice'\r\n\r\nconst authorizedBaseQuery = fetchBaseQuery({\r\n  baseUrl: `${config.apiUrl}/api`,\r\n\r\n  prepareHeaders: (headers, { getState }) => {\r\n    // By default, if we have a token in the store, let's use that for authenticated requests\r\n    const token = selectJWT(getState())\r\n    if (token) {\r\n      headers.set('authorization', `Bearer ${token}`)\r\n    }\r\n    return headers\r\n  },\r\n})\r\n\r\n// https://redux-toolkit.js.org/rtk-query/usage/customizing-queries#axios-basequery\r\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\r\n  api.dispatch(loadingStarted())\r\n  let result = await authorizedBaseQuery(args, api, extraOptions)\r\n  api.dispatch(loadingDone())\r\n\r\n  if (result.error && result.error.status === 401) {\r\n    // // login again\r\n    // await api.dispatch(adminLogin())\r\n    // // retry the initial query\r\n    // result = await authorizedBaseQuery(args, api, extraOptions)\r\n    api.dispatch(logout()) // TODO: logout with messages: Logout successfully/ Token timeout\r\n  }\r\n  return result\r\n}\r\n\r\n// Define our single API slice object\r\nexport const apiSlice = createApi({\r\n  baseQuery: baseQueryWithReauth,\r\n  refetchOnReconnect: true,\r\n  tagTypes: [\r\n    COURSE,\r\n    FACULTY,\r\n    MENTORGROUP,\r\n    LECTURER,\r\n    STUDENT,\r\n    MENTORGROUP_LIST,\r\n    STUDENT_LIST,\r\n    LECTURER_LIST,\r\n    COURSE_LIST,\r\n  ],\r\n  endpoints: () => ({}),\r\n})\r\n","import Form from 'react-bootstrap/Form'\r\nimport { ErrorMessage } from 'formik'\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props\r\n  const { errors, touched } = form\r\n  const { name } = field\r\n  const showError = errors[name] && touched[name]\r\n\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <Form.Control\r\n        id={name}\r\n        {...field}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        disabled={disabled}\r\n        isInvalid={showError}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n"],"sourceRoot":""}