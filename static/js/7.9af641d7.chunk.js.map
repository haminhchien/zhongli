{"version":3,"sources":["components/modals/ConfirmationModal/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/user/lecturerSlice.js","components/custom-fields/AsyncSelectField/index.jsx","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","app/api/group/mentorSlice.js","components/modals/EditFieldModal/index.jsx","pages/Mentor/components/MentorSearchCard/MentorAddModal.jsx","pages/Mentor/components/MentorSearchCard/index.jsx","pages/Mentor/components/MentorDetailCard/index.jsx","pages/Mentor/components/MentorListCard/index.jsx","pages/Mentor/index.jsx"],"names":["ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","name","component","AsyncSelectField","loadOptions","type","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchLecturers","mutation","query","queryStr","url","method","params","providesTags","result","map","lecturer","LECTURER","id","getLecturerInfo","lecturerId","userId","error","arg","getLecturerMentorGroups","mentorGroup","MENTORGROUP","groupId","concat","MENTORGROUP_LIST","getLecturerFaculty","FACULTY","getLecturerCourses","course","COURSE","COURSE_LIST","addNewLecturer","body","password","address","facultyId","displayId","invalidatesTags","LECTURER_LIST","removeLecturer","changeLecturerInfo","changeLecturerFaculty","currentGroupId","currentFacultyId","newGroupId","newFacultyId","useSearchLecturersMutation","useGetLecturerMentorGroupsQuery","useGetLecturerCoursesQuery","useGetLecturerFacultyQuery","useGetLecturerInfoQuery","useAddNewLecturerMutation","useRemoveLecturerMutation","useChangeLecturerInfoMutation","useChangeLecturerFacultyMutation","props","field","form","label","placeholder","disabled","onBlur","errors","touched","showError","Group","className","Label","htmlFor","onChange","selectedOption","selectedValue","value","changeEvent","target","render","msg","Control","Feedback","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","searchMentors","groupType","mentor","getMentorInfo","getMentorGroupStudents","student","STUDENT","STUDENT_LIST","addNewMentorGroup","mentorId","groupName","removeMentorGroup","changeGroupName","changeGroupDisplayId","changeMentorId","currentMentorId","newMentorId","useSearchMentorsMutation","useGetMentorGroupStudentsQuery","useGetMentorInfoQuery","useAddNewMentorGroupMutation","useRemoveMentorGroupMutation","useChangeGroupNameMutation","useChangeMentorIdMutation","useChangeGroupDisplayIdMutation","EditFieldModal","isNumber","singleField","InputField","MentorAddModal","triggerSearch","triggerAdd","dispatch","useDispatch","inputValue","unwrap","lecturers","setSelectedMentorId","Modal","Form","Button","Spinner","MentorSearchCard","trigger","data","selectedMentorId","useSelector","selectedMentorIdSelector","addModal","setAddModal","MentorDetailCard","mentorInfo","isFetching","triggerRemoveMentorGroup","triggerRename","triggerChangeMentor","triggerSearchLecturers","triggerChangeId","showRenameModal","setShowRenameModal","showChangeIdModal","setShowChangeIdModal","showChangeMentorModal","setShowChangeMentorModal","mentorName","newGroupName","MentorListCard","students","userName","MentorPage","Col","md"],"mappings":"4LAgDeA,IA7CW,SAAC,GAOpB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QACI,EACoCC,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGEC,EAAW,uCAAG,sBAAAC,EAAA,0DACdR,EADc,wBAEhBM,GAAgB,GAFA,kBAIRN,IAJQ,uDAMVC,GACFA,EAAY,EAAD,IAPC,yDAAH,qDAcjB,OACE,eAAC,IAAD,CAAOH,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAMW,KAAP,UAAaV,IACb,eAAC,IAAMW,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUC,QAAST,EAAnC,UACGF,GACC,cAAC,IAAD,CAASY,UAAU,SAASC,GAAG,OAAOC,KAAK,SAASC,KAAK,OAF7D,gB,iIChCFC,EAAmBC,MAAaC,MAAM,CAC1CC,OAAQF,MAAaG,SAAS,6BAG1BC,EAAgB,CACpBF,OAAQ,IAmEKG,IAhES,SAAC,GAMlB,IALLzB,EAKI,EALJA,MACAJ,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACA4B,EACI,EADJA,kBAEMC,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAvB,EAAA,+EAEPR,EAAa8B,EAAON,QAFb,OAGbzB,IAHa,+CAKbiC,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOnC,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEwB,cAAeA,EACfG,SAAUA,EACVR,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAYlC,aACtBoC,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMxB,KAAP,UACE,cAAC,IAAD,CACEyB,KAAK,SACLC,UAAWC,IACXC,YAAab,MAIjB,eAAC,IAAMd,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAU2B,KAAK,SAA/B,UACGR,EAAY7B,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,iCC1Dd,8TAWMuB,EAXN,MAWoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvBC,gBAAiBD,EAAQE,SAAS,CAChCC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,QACLC,OAAQ,MACRC,OAAQ,CAAEnC,KAAM,WAAY+B,MAAOC,GAAY,MAEjDI,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAACC,GAAD,MAAe,CAAEhB,KAAMiB,IAAUC,GAAIF,EAASE,UAG7DC,gBAAiBd,EAAQG,MAAM,CAC7BA,MAAO,SAACY,GAAD,MAAiB,CACtBV,IAAK,aACLC,OAAQ,MACRC,OAAQ,CAAES,OAAQD,KAEpBP,aAAc,SAACC,EAAQQ,EAAOC,GAAhB,MAAwB,CAAC,CAAEvB,KAAMiB,IAAUC,GAAIK,OAG/DC,wBAAyBnB,EAAQG,MAAM,CACrCA,MAAO,SAACY,GAAD,MAAiB,CACtBV,IAAK,mBACLC,OAAQ,MACRC,OAAQ,CAAEQ,gBAEZP,aAAc,eAACC,EAAD,uDAAU,GAAWS,EAArB,8CACZT,EACGC,KAAI,SAACU,GAAD,MAAkB,CACrBzB,KAAM0B,IACNR,GAAIO,EAAYE,YAEjBC,OAAO,CAAC,CAAE5B,KAAM6B,IAAkBX,GAAIK,QAG7CO,mBAAoBzB,EAAQG,MAAM,CAChCA,MAAO,SAACY,GAAD,MAAiB,CACtBV,IAAK,gBACLC,OAAQ,MACRC,OAAQ,CAAES,OAAQD,KAEpBP,aAAc,eAACC,EAAD,uDAAU,GAAWS,EAArB,6CAA6B,CACzC,CAAEvB,KAAM+B,IAASb,GAAIJ,EAAOa,SAC5B,CAAE3B,KAAMiB,IAAUC,GAAIK,OAI1BS,mBAAoB3B,EAAQG,MAAM,CAChCA,MAAO,SAACY,GAAD,MAAiB,CACtBV,IAAK,mBACLC,OAAQ,MACRC,OAAQ,CAAEQ,gBAEZP,aAAc,eAACC,EAAD,uDAAU,GAAWS,EAArB,8CACZT,EACGC,KAAI,SAACkB,GAAD,MAAa,CAChBjC,KAAMkC,IACNhB,GAAIe,EAAON,YAEZC,OAAO,CAAC,CAAE5B,KAAMmC,IAAajB,GAAIK,QAGxCa,eAAgB/B,EAAQE,SAAS,CAC/BC,MAAO,kBAAwD,CAC7DE,IAAK,QACLC,OAAQ,OACR0B,KAAM,CACJzC,KAJG,EAAGA,KAKN0C,SALG,EAASA,SAMZ7D,KAAM,WACN8D,QAPG,EAAmBA,QAQtBC,UARG,EAA4BA,UAS/BC,UATG,EAAuCA,aAY9CC,gBAAiB,SAAC5B,EAAQQ,EAAOC,GAAhB,MAAwB,CACvC,CAAEvB,KAAM2C,IAAezB,GAAIK,EAAIiB,eAInCI,eAAgBvC,EAAQE,SAAS,CAC/BC,MAAO,kBAAiB,CACtBE,IAAK,QACLC,OAAQ,SACRC,OAAQ,CAAES,OAHL,EAAGA,UAKVqB,gBAAiB,eAAqBnB,EAArB,6CAA6B,CAC5C,CAAEvB,KAAMiB,IAAUC,GAAIK,EAAIF,YAI9BwB,mBAAoBxC,EAAQE,SAAS,CACnCC,MAAO,kBAAuC,CAC5CE,IAAK,QACLC,OAAQ,MACR0B,KAAM,CAAEnB,GAHH,EAAGA,GAGItB,KAHP,EAAOA,KAGM2C,QAHb,EAAaA,QAGSE,UAHtB,EAAsBA,aAK7BC,gBAAiB,SAAC5B,EAAQQ,EAAOC,GAAhB,MAAwB,CACvC,CACEvB,KAAMiB,IACNC,GAAIK,EAAIL,QAKd4B,sBAAuBzC,EAAQE,SAAS,CACtCC,MAAO,kBAA6C,CAClDE,IAAK,cACLC,OAAQ,MACR0B,KAAM,CACJhB,OAJG,EAAGH,GAKN6B,eALG,EAAOC,iBAMVC,WANG,EAAyBC,gBAShCR,gBAAiB,SAAC5B,EAAQQ,EAAOC,GAAhB,MAAwB,CACvC,CAAEvB,KAAMiB,IAAUC,GAAIK,EAAIL,IAC1B,CAAElB,KAAM2C,IAAezB,GAAIK,EAAIyB,kBAC/B,CAAEhD,KAAM2C,IAAezB,GAAIK,EAAI2B,sBAOrCC,EASElD,EATFkD,2BACAC,EAQEnD,EARFmD,gCACAC,EAOEpD,EAPFoD,2BACAC,EAMErD,EANFqD,2BACAC,EAKEtD,EALFsD,wBACAC,EAIEvD,EAJFuD,0BACAC,EAGExD,EAHFwD,0BACAC,EAEEzD,EAFFyD,8BACAC,EACE1D,EADF0D,kC,iCCjJF,oCA2Ce7D,IAvCf,SAA0B8D,GAAQ,IACxBC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,KAAMC,EAA8CH,EAA9CG,MAAOC,EAAuCJ,EAAvCI,YAAaC,EAA0BL,EAA1BK,SAAUlE,EAAgB6D,EAAhB7D,YAC3CH,EAAiBiE,EAAjBjE,KAAMsE,EAAWL,EAAXK,OACNC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACVC,EAAYF,EAAOvE,IAASwE,EAAQxE,GAa1C,OACE,eAAC,IAAK0E,MAAN,CAAYC,UAAU,OAAtB,UACGR,GAAS,cAAC,IAAKS,MAAN,CAAYC,QAAS7E,EAArB,SAA4BmE,IACtC,cAAC,IAAD,CACE7C,GAAItB,EACJ8E,SAhB6B,SAACC,GAClC,IAAMC,EAAgBD,EAAiBA,EAAeE,MAAQF,EACxDG,EAAc,CAClBC,OAAQ,CACNnF,KAAMA,EACNiF,MAAOD,IAGXf,EAAMa,SAASI,IASXZ,OAAQA,EACRF,YAAaA,EACbjE,YAAaA,EACbkE,SAAUA,EACVM,UAAWF,EAAY,aAAe,KAExC,cAAC,IAAD,CACEzE,KAAMA,EACNoF,OAAQ,SAACC,GAAD,OACN,cAAC,IAAKC,QAAQC,SAAd,CAAuBnF,KAAK,UAA5B,SAAuCiF,Y,uGCgDlCG,IAhFI,SAAC,GAUb,IATLrB,EASI,EATJA,MASI,IARJsB,aAQI,MARI,GAQJ,EAPJC,EAOI,EAPJA,gBACAC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEAC,qBAAU,WACHP,GAEHI,EAASJ,KAGV,IAPC,MASsB5H,mBAAS,IAT/B,mBASG8C,EATH,KASUsF,EATV,KAWEC,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAAS3F,EAAM0F,gBAC/CV,EAAaS,GAAMC,cAAcC,SAAS3F,EAAM0F,kBAEnDnF,KAAI,SAACkF,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GAC9B,OACE,cAAC,IAAUK,KAAX,CAEEC,OAAQH,IAAYd,EACpBkB,QAAM,EACNlI,QAAS,kBAAMsH,EAASK,IACxB1B,UAAU,mBALZ,SAOE,sBAAKA,UAAU,iCAAf,UACG8B,EACAZ,EAAU,8BAAMW,IAAiB,SAR/BA,MAcb,OACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAKzI,OAAN,CAAauG,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcR,MAAOA,EAA9C,SACE,cAAC,IAAKmB,QAAN,CACElB,YAAY,cACZa,MAAOrE,EACPkE,SAAU,SAACgC,GAAD,OAAOZ,EAASY,EAAE3B,OAAOF,YAGvC,cAAC,IAAD,CACExG,QAAQ,YACRkG,UAAU,OACVjG,QAAS,WACPoH,EAASlF,GACTsF,EAAS,KALb,kBAUA,cAAC,IAAD,CAAQzH,QAAQ,YAAYC,QAASqH,EAArC,oBAIoB,IAArBI,EAAUY,OACT,cAAC,IAAD,CAAWtI,QAAQ,QAAnB,SAA4B0H,IAC1B,KACJ,cAAC,IAAK3H,OAAN,CAAamG,UAAU,yBAAvB,yBACYwB,EAAUY,OADtB,YACgC5C,EAAM6C,sB,iCC9E5C,iGAwFeC,IA5EI,SAACjD,GAAW,IAE3BG,EASEH,EATFG,MAF0B,EAWxBH,EARFkD,eAH0B,MAGhB,GAHgB,IAWxBlD,EAPFmD,cAJ0B,MAIjB,GAJiB,IAWxBnD,EANFoD,aAL0B,MAKlB,GALkB,IAWxBpD,EALFmC,iBAN0B,MAMd,GANc,EAO1BkB,EAIErD,EAJFqD,cACA1B,EAGE3B,EAHF2B,YACAC,EAEE5B,EAFF4B,aACA0B,EACEtD,EADFsD,aAEIC,EAAWC,cACXC,EAAWtB,EAAUhF,KAAI,SAACkF,GAAD,aAC7B,cAAC,IAAUK,KAAX,UACE,sBAAK/B,UAAU,iCAAf,oBACGiB,EAAaS,UADhB,2BACqCgB,EAAcL,cADnD,KAEE,cAAC,IAAD,CACEU,GAAIJ,EAAajB,GADnB,yBAEWgB,EAAcL,qBALRrB,EAAYU,OAUnC,OACE,eAAC,IAAD,CAAMQ,OAAO,YAAb,UACE,eAAC,IAAKzI,OAAN,CAAauG,UAAU,oDAAvB,UACE,qBAAIA,UAAU,wBAAd,UAAuCR,EAAvC,cACA,cAAC,IAAD,CAAgB1F,QAAQ,YAAYb,MAAM,UAA1C,SACGsJ,EAAQ/F,KAAI,gBAAGgD,EAAH,EAAGA,MAAOzF,EAAV,EAAUA,QAAV,OACX,cAAC,IAASgI,KAAV,CAA2BhI,QAASA,EAApC,SACGyF,GADiBA,WAM1B,eAAC,IAAK5F,KAAN,WACG4I,EAAOhG,KAAI,gBAAGgD,EAAH,EAAGA,MAAOtG,EAAV,EAAUA,QAAV,OACV,eAAC,IAAK6G,MAAN,CAAwB9F,GAAI+I,IAAKhD,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAYgD,QAAM,EAACC,GAAG,IAAtB,UACG1D,EADH,OAGA,cAAC,IAAD,CAAK0D,GAAG,IAAR,SACE,cAAC,IAAKvC,QAAN,CACEwC,WAAS,EACTC,UAAQ,EACRpD,UAAW9G,EAAU,GAAK,aAC1BoH,MAAK,OAAEpH,QAAF,IAAEA,IAAW,wBATPsG,MAclBiD,EAAMjG,KAAI,gBAAGgD,EAAH,EAAGA,MAAOtG,EAAV,EAAUA,QAASmK,EAAnB,EAAmBA,YAAnB,OACT,eAAC,IAAKtD,MAAN,CAAwB9F,GAAI+I,IAAKhD,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAYgD,QAAM,EAACC,GAAG,IAAtB,UACG1D,EADH,OAGA,cAAC,IAAD,CAAK0D,GAAG,IAAR,SACGhK,EACC,cAAC,IAAD,CAAS8G,UAAU,OAAOjG,QAAS,kBAAM6I,EAASS,IAAlD,SACGnK,IAGH,cAAC,IAAD,CAAS8G,UAAU,kBAAnB,iCAVWR,SAgBA,IAApBsD,EAASV,OACR,cAAC,IAAD,CAAWtI,QAAQ,QAAnB,SAA4BgJ,IAC1B,U,0JC+CKQ,IA5HE,SAAC,GAUX,IATL9D,EASI,EATJA,MACAsB,EAQI,EARJA,MACAE,EAOI,EAPJA,YACAC,EAMI,EANJA,aACA0B,EAKI,EALJA,aACAY,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACA9I,EACI,EADJA,kBACI,EACsBxB,mBAAS,IAD/B,mBACG8C,EADH,KACUsF,EADV,OAEoCpI,mBAAS,IAF7C,mBAEGuK,EAFH,KAEiBC,EAFjB,OAG8CxK,oBAAS,GAHvD,mBAGGyK,EAHH,KAGsBC,EAHtB,OAI8C1K,oBAAS,GAJvD,mBAIG2K,EAJH,KAIsBC,EAJtB,OAKoC5K,qBALpC,mBAKG6K,EALH,KAKiBC,EALjB,KAMEC,EAAWpD,EAAMtE,KAAI,SAACkF,GAAD,OAAUV,EAAYU,MAE3CF,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAAS3F,EAAM0F,gBAC/CV,EAAaS,GAAMC,cAAcC,SAAS3F,EAAM0F,kBAEnDnF,KAAI,SAACkF,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GACxByC,EAAWtC,IAAYb,EAAY0C,GACzC,OACE,cAAC,IAAU3B,KAAX,CAEEE,QAAM,EACNjC,UAAU,mBACVjG,QAAS,kBAAM4J,EAAgBjC,IAC/BM,OAAQmC,EALV,SAOE,sBAAKnE,UAAU,iCAAf,UACG8B,EACD,cAAC,IAAD,CACEsC,MACED,EACI,CACEE,MAAO,QAET,GAENtB,GAAIJ,EAAajB,GARnB,yBASWlC,EAAM6C,qBAjBdR,MAuBb,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAKzI,OAAN,CAAauG,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcR,MAAOA,EAA9C,SACE,cAAC,IAAKmB,QAAN,CACElB,YAAY,cACZa,MAAOrE,EACPkE,SAAU,SAACgC,GAAD,OAAOZ,EAASY,EAAE3B,OAAOF,YAGtCiD,EACC,qCACE,cAAC,IAAD,CACEzJ,QAAQ,YACRkG,UAAU,OACVjG,QAAS,kBAAMkK,GAAgB,IAHjC,iBAOA,cAAC,IAAD,CACEnK,QAAQ,YACRC,QAAS,WACHiH,EAAY0C,GACdK,GAAqB,GAErBF,GAAqB,IAN3B,uBAaA,QAEgB,IAArBrC,EAAUY,OACT,cAAC,IAAD,CAAWtI,QAAQ,QAAnB,SAA4B0H,IAC1B,KACJ,cAAC,IAAK3H,OAAN,CAAamG,UAAU,yBAAvB,yBACYwB,EAAUY,OADtB,YACgC5C,EAAM6C,oBAGxC,cAAC,IAAD,CACEpJ,MAAM,UACNC,QAAO,4BAAuBsG,EAAM6C,cAA7B,mBACPxJ,KAAM+K,EACN9K,YAAa,kBAAM+K,GAAqB,MAE1C,cAAC,IAAD,CACE5K,MAAK,iBAAYuG,EAAM6C,cAAlB,KACLnJ,QAAQ,sDACRL,KAAMiL,EACNhL,YAAa,kBAAMiL,GAAqB,IACxChL,aAAY,sBAAE,sBAAAQ,EAAA,sEACNiK,EAAaE,GADP,6CAIhB,cAAC,IAAD,CACEzK,MAAK,kBAAauG,EAAM6C,eACxBxJ,KAAMmL,EACNlL,YAAa,kBAAMmL,GAAgB,IACnClL,aAAc0K,EACd9I,kBAAiB,uCAAE,WAAOsB,GAAP,eAAA1C,EAAA,sEACMoB,EAAkBsB,GADxB,cACX6G,EADW,yBAEVA,EAASrB,QAAO,SAACC,GAAD,OAAWwC,EAAStC,SAASF,EAAKpB,WAFxC,2CAAF,6D,mDC3GVgE,MAZf,SAAqBhE,GAGnB,IAAMiE,EAAMC,mBAMZ,OAJAlD,qBAAU,WACRiD,EAAIE,QAAUnE,IACb,CAACA,IAEGiE,EAAIE,SCqDEC,IA5DM,SAAC,GAA2C,IAAD,IAAxCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAChChC,EAAWC,cACXgC,EAAQC,YAAS,sBACjBC,EAAW,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAOxI,cAAV,aAAG,EAAe9B,OAC7ByK,EAAa,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAOxI,cAAV,aAAG,EAAe4I,SAC/BC,EAAiBZ,EAAYK,GAEnCrD,qBAAU,WACJqD,EACEI,EACEA,IAAgBJ,IACdO,EACEH,IAAgBG,EAElBtC,EAAS+B,EAAeQ,YAGxBpK,QAAQC,IAAI,SAAU,CACpB+J,cACAG,iBACAP,mBAKJC,EAAkBG,IAOtBnC,EAAS+B,EAAeQ,YAGtBD,EACEA,IAAmBH,EAErBnC,EAAS,IAAD,OAAKoC,IAGbjK,QAAQC,IAAI,SAAU,CACpB+J,cACAG,iBACAP,mBAIAI,GAEFH,EAAkBG,KAOvB,CAACJ,EAAgBI,M,iCC7DtB,4RAQMrJ,EARN,MAQoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvBsJ,cAAetJ,EAAQE,SAAS,CAC9BC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,SACLC,OAAQ,MACRC,OAAQ,CAAEJ,MAAOC,GAAY,GAAImJ,UAAW,iBAE9C/I,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAAC8I,GAAD,MAAa,CAAE7J,KAAM0B,IAAaR,GAAI2I,EAAOlI,eAG5DmI,cAAezJ,EAAQG,MAAM,CAC3BA,MAAO,SAACmB,GAAD,MAAc,CACnBjB,IAAK,eACLC,OAAQ,MACRC,OAAQ,CAAEe,aAEZd,aAAc,eAACC,EAAD,uDAAU,GAAV,MAA6B,CACzC,CAAEd,KAAM0B,IAAaR,GAAIJ,EAAOa,aAIpCoI,uBAAwB1J,EAAQG,MAAM,CACpCA,MAAO,SAACmB,GAAD,MAAc,CACnBjB,IAAK,cACLC,OAAQ,MACRC,OAAQ,CAAEe,UAASlD,KAAM,aAE3BoC,aAAc,eAACC,EAAD,uDAAU,GAAWS,EAArB,8CACZT,EACGC,KAAI,SAACiJ,GAAD,MAAc,CAAEhK,KAAMiK,IAAS/I,GAAI8I,EAAQ3I,WAC/CO,OAAO,CAAC,CAAE5B,KAAMkK,IAAchJ,GAAIK,QAGzC4I,kBAAmB9J,EAAQE,SAAS,CAClCC,MAAO,kBAAyC,CAC9CE,IAAK,UACLC,OAAQ,OACR0B,KAAM,CAAE+H,SAHH,EAAGA,SAGUC,UAHb,EAAaA,UAGW5H,UAHxB,EAAwBA,aAK/BC,gBAAiB,eAAqBnB,EAArB,6CAA6B,CAC5C,CAAEvB,KAAM6B,IAAkBX,GAAIK,EAAI6I,cAItCE,kBAAmBjK,EAAQE,SAAS,CAClCC,MAAO,kBAAkB,CACvBE,IAAK,SACLC,OAAQ,SACRC,OAAQ,CAAEe,QAHL,EAAGA,WAKVe,gBAAiB,eAAqBnB,EAArB,6CAA6B,CAC5C,CAAEvB,KAAM0B,IAAaR,GAAIK,EAAII,aAIjC4I,gBAAiBlK,EAAQE,SAAS,CAChCC,MAAO,kBAA6B,CAClCE,IAAK,cACLC,OAAQ,MACR0B,KAAM,CAAEV,QAHH,EAAGA,QAGS0I,UAHZ,EAAYA,aAKnB3H,gBAAiB,SAAC5B,EAAQQ,EAAOC,GAAhB,MAAwB,CACvC,CAAEvB,KAAM0B,IAAaR,GAAIK,EAAII,aAIjC6I,qBAAsBnK,EAAQE,SAAS,CACrCC,MAAO,kBAA6B,CAClCE,IAAK,mBACLC,OAAQ,MACR0B,KAAM,CAAEV,QAHH,EAAGA,QAGSc,UAHZ,EAAYA,aAKnBC,gBAAiB,SAAC5B,EAAQQ,EAAOC,GAAhB,MAAwB,CACvC,CAAEvB,KAAM0B,IAAaR,GAAIK,EAAII,aAIjC8I,eAAgBpK,EAAQE,SAAS,CAC/BC,MAAO,gBAAGmB,EAAH,EAAGA,QAAH,EAAY+I,gBAAZ,MAAgD,CACrDhK,IAAK,UACLC,OAAQ,MACR0B,KAAM,CAAEV,UAASyI,SAHZ,EAA6BO,eAKpCjI,gBAAiB,SAAC5B,EAAQQ,EAAOC,GAAhB,MAAwB,CACvC,CAAEvB,KAAM0B,IAAaR,GAAIK,EAAII,SAC7B,CAAE3B,KAAM6B,IAAkBX,GAAIK,EAAImJ,iBAClC,CAAE1K,KAAM6B,IAAkBX,GAAIK,EAAIoJ,qBAOxCC,EAQE3K,EARF2K,yBACAC,EAOE5K,EAPF4K,+BACAC,EAME7K,EANF6K,sBACAC,EAKE9K,EALF8K,6BACAC,EAIE/K,EAJF+K,6BACAC,EAGEhL,EAHFgL,2BACAC,EAEEjL,EAFFiL,0BACAC,EACElL,EADFkL,iC,gIChCaC,IAzEQ,SAAC,GAOjB,IANL5N,EAMI,EANJA,MACAJ,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aAGI,IAFJ0B,qBAEI,MAFY,GAEZ,MADJqM,gBACI,SACE1M,EAAmBC,MAAaC,MAAM,CAC1CyM,YAAaD,EACTzM,MAAaG,SAAS,2BACtBH,MAAaG,SAAS,6BAGtBI,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAvB,EAAA,+EAEPR,EAAa8B,EAAOkM,aAFb,OAGbjO,IAHa,+CAKbiC,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOnC,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEwB,cAAe,CACbsM,YAAatM,GAEfG,SAAUA,EACVR,iBAAkBA,EALpB,SAOG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAYlC,aACtBoC,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMxB,KAAP,UACE,cAAC,IAAD,CACEyB,KAAK,cACLC,UAAW0L,IACXvL,KAAMqL,EAAW,SAAW,WAIhC,eAAC,IAAMjN,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAU2B,KAAK,SAA/B,UACGR,EAAY7B,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,qOCjDRC,EAAmBC,MAAaC,MAAM,CAC1C4D,UAAW7D,MAAaG,SAAS,2BACjCsL,UAAWzL,MAAaG,SAAS,2BACjCqL,SAAUxL,MAAaG,SAAS,6BAG5BC,EAAgB,CACpByD,UAAW,GACX4H,UAAW,GACXD,SAAU,IAuFGoB,EApFQ,SAAC5H,GAAW,IACzBxG,EAAsBwG,EAAtBxG,KAAMC,EAAgBuG,EAAhBvG,YADkB,EAER8F,cAAjBsI,EAFyB,sBAGXV,cAAdW,EAHyB,oBAI1BC,EAAWC,cAEXtL,EAAe,uCAAG,WAAOuL,GAAP,eAAA/N,EAAA,sEACE2N,EAAcI,GAAYC,SAD5B,cAChBC,EADgB,yBAEfA,EAAUhL,KAAI,SAACC,GAAD,MAAe,CAClC6D,MAAO7D,EAASE,GAChB6C,MAAO/C,EAASpB,UAJI,2CAAH,sDAQftC,EAAY,uCAAG,WAAO8B,EAAQC,GAAf,iBAAAvB,EAAA,+EAES4N,EAAWtM,GAAQ0M,SAF5B,gBAETnK,EAFS,EAETA,QACRtE,IACAsO,EAASK,YAAoBrK,IAJZ,gDAMjBrC,QAAQC,IAAR,MANiB,yDAAH,wDAUlB,OACE,eAAC0M,EAAA,EAAD,CAAO7O,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC4O,EAAA,EAAMjO,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACgO,EAAA,EAAM/N,MAAP,qCAEF,cAAC,IAAD,CACEc,cAAeA,EACfG,SAAU7B,EACVqB,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC0M,EAAA,EAAD,CACEzM,YAAU,EACVN,SAAUK,EAAYlC,aACtBoC,QAASF,EAAYG,YAHvB,UAKE,eAACsM,EAAA,EAAM9N,KAAP,WACE,cAAC,IAAD,CACEyB,KAAK,YACLC,UAAW0L,IACXxH,MAAM,iBACNC,YAAY,gBAEd,cAAC,IAAD,CACEpE,KAAK,YACLC,UAAW0L,IACXxH,MAAM,eACNC,YAAY,eAEd,cAAC,IAAD,CACEpE,KAAK,WACLC,UAAWC,IACXC,YAAaO,EACbyD,MAAM,qBAIV,eAACkI,EAAA,EAAM7N,OAAP,WACE,cAAC+N,EAAA,EAAD,CAAQ9N,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC8O,EAAA,EAAD,CAAQ9N,QAAQ,UAAU2B,KAAK,SAA/B,UACGR,EAAY7B,cACX,cAACyO,EAAA,EAAD,CACE7N,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,yBCpDC2N,EAzBU,WACvB,IAAMV,EAAWC,cADY,EAEJhB,cAFI,mBAEtB0B,EAFsB,KAGrBC,EAHqB,KAGrBA,KACFC,EAAmBC,YAAYC,KAJR,EAKGhP,oBAAS,GALZ,mBAKtBiP,EALsB,KAKZC,EALY,KAO7B,OACE,eAAC,WAAD,WACE,cAACxH,EAAA,EAAD,CACErB,MAAM,SACNsB,MAAOkH,EACPjH,gBAAiBkH,EACjBjH,YAAa,SAACsE,GAAD,OAAYA,EAAOlI,SAChC6D,aAAc,SAACqE,GAAD,OAAYA,EAAOQ,WACjC5E,SAAS,EACTC,SAAU,SAAClF,GAAD,OAAW8L,EAAQ9L,IAC7BmF,MAAO,kBAAMiH,GAAY,IACzBhH,SAAU,SAACiE,GAAD,OAAY8B,EAASK,YAAoBnC,EAAOlI,aAE5D,cAAC,EAAD,CAAgBvE,KAAMuP,EAAUtP,YAAa,kBAAMuP,GAAY,U,oCCkHtDC,EAhIU,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,iBAAuB,EAE/C1B,YAAsB0B,GADVM,EADmC,EACzCP,KAAkBQ,EADuB,EACvBA,WADuB,EAId/B,cAA5BgC,EAJ0C,sBAKzB/B,cAAjBgC,EAL0C,sBAMnB/B,cAAvBgC,EAN0C,sBAOhB/J,cAA1BgK,EAP0C,sBAQvBhC,cAAnBiC,EAR0C,sBAUC1P,oBAAS,GAVV,mBAU1C2K,EAV0C,KAUvBC,EAVuB,OAWH5K,oBAAS,GAXN,mBAW1C2P,EAX0C,KAWzBC,EAXyB,OAYC5P,oBAAS,GAZV,mBAY1C6P,EAZ0C,KAYvBC,EAZuB,OAaS9P,oBAAS,GAblB,mBAa1C+P,EAb0C,KAanBC,EAbmB,KAe3C/B,EAAWC,cAEjB,OAAImB,EACK,6BAIP,eAAC,WAAD,WACE,cAAClG,EAAA,EAAD,CACE9C,MAAM,QACNgD,OAAQ,CACN,CAAEhD,MAAO,aAActG,QAASqP,EAAWzC,WAC3C,CAAEtG,MAAO,WAAYtG,QAASqP,EAAWrK,YAE3CuE,MAAO,CACL,CACEjD,MAAO,SACPtG,QAASqP,EAAWa,WACpB/F,YAAY,aAAD,OAAekF,EAAW1C,UAAY,MAGrDtD,QAAS,CACP,CACE/C,MAAO,eACPzF,QAAS,WACPgP,GAAmB,KAGvB,CACEvJ,MAAO,kBACPzF,QAAS,WACPkP,GAAqB,KAGzB,CACEzJ,MAAO,gBACPzF,QAAS,WACPoP,GAAyB,KAG7B,CACE3J,MAAO,eACPzF,QAAS,WACPgK,GAAqB,QAK7B,cAAC8C,EAAA,EAAD,CACE5N,MAAM,oBACNJ,KAAMiQ,EACNhQ,YAAa,WACXiQ,GAAmB,IAErBhQ,aAAY,uCAAE,WAAOsQ,GAAP,SAAA9P,EAAA,sEACNmP,EAAc,CAClBtL,QAASmL,EAAWnL,QACpB0I,UAAWuD,IAHD,2CAAF,sDAMZ5O,cAAe8N,EAAWzC,YAE5B,cAACe,EAAA,EAAD,CACE5N,MAAM,kBACNJ,KAAMmQ,EACNlQ,YAAa,WACXmQ,GAAqB,IAEvBlQ,aAAY,uCAAE,WAAO2F,GAAP,SAAAnF,EAAA,sEACNsP,EAAgB,CACpBzL,QAASmL,EAAWnL,QACpBc,UAAWQ,IAHD,2CAAF,sDAMZjE,cAAe8N,EAAWrK,YAE5B,cAACxD,EAAA,EAAD,CACEzB,MAAM,gBACNJ,KAAMqQ,EACNpQ,YAAa,WACXqQ,GAAyB,IAE3BpQ,aAAY,uCAAE,WAAOqN,GAAP,SAAA7M,EAAA,sEACNoP,EAAoB,CACxBvL,QAASmL,EAAWnL,QACpB+I,gBAAiBoC,EAAW1C,SAC5BO,gBAJU,2CAAF,sDAOZzL,kBAAiB,uCAAE,WAAOsB,GAAP,eAAA1C,EAAA,sEACOqP,EAAuB3M,GAAOsL,SADrC,cACXC,EADW,yBAEVA,EAAUhL,KAAI,SAACC,GAAD,MAAe,CAClC6D,MAAO7D,EAASE,GAChB6C,MAAO/C,EAASpB,UAJD,2CAAF,wDAQnB,cAACzC,EAAA,EAAD,CACEK,MAAM,uBACNC,QAAQ,yEACRL,KAAMiL,EACNhL,YAAa,kBAAMiL,GAAqB,IACxChL,aAAY,sBAAE,sBAAAQ,EAAA,6DACZ6N,EAASK,YAAoB,OADjB,SAENgB,EAAyB,CAC7BrL,QAASmL,EAAWnL,UACnBmK,SAJS,iD,SC9GP+B,EApBQ,SAAC,GAA0B,IAAxBrB,EAAuB,EAAvBA,iBAAuB,EAE7C3B,YAA+B2B,GADnBsB,EADiC,EACvCvB,KAGR,OAJ+C,EACvBQ,WAIf,6BAIP,cAAClF,EAAA,EAAD,CACE9D,MAAM,UACNsB,MAAOyI,EACPvI,YAAa,SAACyE,GAAD,OAAaA,EAAQ3I,QAClCmE,aAAc,SAACwE,GAAD,OAAaA,EAAQ+D,UACnC7G,aAAc,SAAC8C,GAAD,yBAAyBA,EAAQ3I,SAC/CyG,aAAa,KC6BJkG,UAnCI,WACjB,IAAMrC,EAAWC,cACXY,EAAmBC,YAAYC,KASrC,OAPAzD,YAAa,CACXC,eAAgBsD,EAChBrD,kBAAmB,SAACiB,GAClBuB,EAASK,YAAoB5B,OAK/B,eAAC7C,EAAA,EAAD,CAAKhD,UAAU,iCAAf,UACE,cAAC0J,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,MAED1B,EACC,qCACE,cAACyB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,CAAkB1B,iBAAkBA,MAEtC,cAACyB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,CAAgB1B,iBAAkBA,SAItC,qCACE,cAACyB,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKC,GAAG","file":"static/js/7.9af641d7.chunk.js","sourcesContent":["import { Modal, Button, Spinner } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst ConfirmationModal = ({\n  show,\n  handleClose,\n  handleSubmit,\n  handleError,\n  title,\n  content,\n}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleClick = async () => {\n    if (handleSubmit) {\n      setIsSubmitting(true)\n      try {\n        await handleSubmit()\n      } catch (e) {\n        if (handleError) {\n          handleError(e)\n        }\n      }\n    }\n    // handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{content}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleClick}>\n          {isSubmitting && (\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\n          )}\n          OK\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmationModal\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\n\nconst validationSchema = Yup.object().shape({\n  itemId: Yup.string().required('This field is required.'),\n})\n\nconst initialValues = {\n  itemId: '',\n}\n\nconst SelectItemModal = ({\n  title,\n  show,\n  handleClose,\n  handleSubmit,\n  handleSearchItems,\n}) => {\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values.itemId)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('itemId', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"itemId\"\n                component={AsyncSelectField}\n                loadOptions={handleSearchItems}\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default SelectItemModal\n","import {\n  COURSE,\n  COURSE_LIST,\n  FACULTY,\n  LECTURER,\n  LECTURER_LIST,\n  MENTORGROUP,\n  MENTORGROUP_LIST,\n} from '../tagConstants'\nimport { apiSlice } from '../index'\n\nconst extendedApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    searchLecturers: builder.mutation({\n      query: (queryStr) => ({\n        url: '/user',\n        method: 'GET',\n        params: { role: 'LECTURER', query: queryStr || '' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result.map((lecturer) => ({ type: LECTURER, id: lecturer.id })),\n    }),\n\n    getLecturerInfo: builder.query({\n      query: (lecturerId) => ({\n        url: '/user/info',\n        method: 'GET',\n        params: { userId: lecturerId },\n      }),\n      providesTags: (result, error, arg) => [{ type: LECTURER, id: arg }],\n    }),\n\n    getLecturerMentorGroups: builder.query({\n      query: (lecturerId) => ({\n        url: '/lecturer/mentor',\n        method: 'GET',\n        params: { lecturerId },\n      }),\n      providesTags: (result = {}, error, arg) =>\n        result\n          .map((mentorGroup) => ({\n            type: MENTORGROUP,\n            id: mentorGroup.groupId,\n          }))\n          .concat([{ type: MENTORGROUP_LIST, id: arg }]),\n    }),\n\n    getLecturerFaculty: builder.query({\n      query: (lecturerId) => ({\n        url: '/user/faculty',\n        method: 'GET',\n        params: { userId: lecturerId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: FACULTY, id: result.groupId },\n        { type: LECTURER, id: arg },\n      ],\n    }),\n\n    getLecturerCourses: builder.query({\n      query: (lecturerId) => ({\n        url: '/lecturer/course',\n        method: 'GET',\n        params: { lecturerId },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result\n          .map((course) => ({\n            type: COURSE,\n            id: course.groupId,\n          }))\n          .concat([{ type: COURSE_LIST, id: arg }]),\n    }),\n\n    addNewLecturer: builder.mutation({\n      query: ({ name, password, address, facultyId, displayId }) => ({\n        url: '/user',\n        method: 'POST',\n        body: {\n          name,\n          password,\n          role: 'LECTURER',\n          address,\n          facultyId,\n          displayId,\n        },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: LECTURER_LIST, id: arg.facultyId },\n      ],\n    }),\n\n    removeLecturer: builder.mutation({\n      query: ({ userId }) => ({\n        url: '/user',\n        method: 'DELETE',\n        params: { userId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: LECTURER, id: arg.userId },\n      ],\n    }),\n\n    changeLecturerInfo: builder.mutation({\n      query: ({ id, name, address, displayId }) => ({\n        url: '/user',\n        method: 'PUT',\n        body: { id, name, address, displayId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        {\n          type: LECTURER,\n          id: arg.id,\n        },\n      ],\n    }),\n\n    changeLecturerFaculty: builder.mutation({\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\n        url: '/user/group',\n        method: 'PUT',\n        body: {\n          userId: id,\n          currentGroupId: currentFacultyId,\n          newGroupId: newFacultyId,\n        },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: LECTURER, id: arg.id },\n        { type: LECTURER_LIST, id: arg.currentFacultyId },\n        { type: LECTURER_LIST, id: arg.newFacultyId },\n      ],\n    }),\n  }),\n})\n\nexport const {\n  useSearchLecturersMutation,\n  useGetLecturerMentorGroupsQuery,\n  useGetLecturerCoursesQuery,\n  useGetLecturerFacultyQuery,\n  useGetLecturerInfoQuery,\n  useAddNewLecturerMutation,\n  useRemoveLecturerMutation,\n  useChangeLecturerInfoMutation,\n  useChangeLecturerFacultyMutation,\n} = extendedApi\n","import { ErrorMessage } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport AsyncSelect from 'react-select/async'\n\nfunction AsyncSelectField(props) {\n  const { field, form, label, placeholder, disabled, loadOptions } = props\n  const { name, onBlur } = field\n  const { errors, touched } = form\n  const showError = errors[name] && touched[name]\n\n  const handleSelectedOptionChange = (selectedOption) => {\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\n    const changeEvent = {\n      target: {\n        name: name,\n        value: selectedValue,\n      },\n    }\n    field.onChange(changeEvent)\n  }\n\n  return (\n    <Form.Group className=\"mb-3\">\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\n      <AsyncSelect\n        id={name}\n        onChange={handleSelectedOptionChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        loadOptions={loadOptions}\n        disabled={disabled}\n        className={showError ? 'is-invalid' : ''}\n      />\n      <ErrorMessage\n        name={name}\n        render={(msg) => (\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\n        )}\n      />\n    </Form.Group>\n  )\n}\n\nexport default AsyncSelectField\n","import { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\n\nconst SearchCard = ({\n  label,\n  items = [],\n  selectedItemKey,\n  keySelector,\n  nameSelector,\n  showKey,\n  onSearch,\n  onAdd,\n  onSelect,\n}) => {\n  useEffect(() => {\n    if (!selectedItemKey) {\n      // On mount, if no item selected, get something\n      onSearch(selectedItemKey)\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  const [query, setQuery] = useState('')\n\n  const listItems = items\n    .filter(\n      (item) =>\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\n    )\n    .map((item) => {\n      const itemKey = keySelector(item)\n      const itemName = nameSelector(item)\n      return (\n        <ListGroup.Item\n          key={itemKey}\n          active={itemKey === selectedItemKey}\n          action\n          onClick={() => onSelect(item)}\n          className=\"user-select-none\"\n        >\n          <div className=\"d-flex justify-content-between\">\n            {itemName}\n            {showKey ? <div>{itemKey}</div> : null}\n          </div>\n        </ListGroup.Item>\n      )\n    })\n\n  return (\n    <Card border=\"secondary\">\n      <Card.Header className=\"d-flex justify-content-between\">\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\n          <Form.Control\n            placeholder=\"placeholder\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n          />\n        </FloatingLabel>\n        <Button\n          variant=\"secondary\"\n          className=\"mx-1\"\n          onClick={() => {\n            onSearch(query)\n            setQuery('')\n          }}\n        >\n          Find\n        </Button>\n        <Button variant=\"secondary\" onClick={onAdd}>\n          Add\n        </Button>\n      </Card.Header>\n      {listItems.length !== 0 ? (\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\n      ) : null}\n      <Card.Footer className=\"text-muted text-center\">\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default SearchCard\n","import {\n  Card,\n  Form,\n  Col,\n  Row,\n  NavLink,\n  ListGroup,\n  DropdownButton,\n  Dropdown,\n} from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst DetailCard = (props) => {\n  const {\n    label,\n    buttons = [],\n    fields = [],\n    links = [],\n    listItems = [],\n    listItemLabel,\n    keySelector,\n    nameSelector,\n    linkSelector,\n  } = props\n  const navigate = useNavigate()\n  const itemList = listItems.map((item) => (\n    <ListGroup.Item key={keySelector(item)}>\n      <div className=\"d-flex justify-content-between\">\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\n        <Link\n          to={linkSelector(item)}\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\n      </div>\n    </ListGroup.Item>\n  ))\n\n  return (\n    <Card border=\"secondary\">\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\n        <DropdownButton variant=\"secondary\" title=\"Options\">\n          {buttons.map(({ label, onClick }) => (\n            <Dropdown.Item key={label} onClick={onClick}>\n              {label}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      </Card.Header>\n      <Card.Body>\n        {fields.map(({ label, content }) => (\n          <Form.Group key={label} as={Row} className=\"mb-1\">\n            <Form.Label column sm=\"3\">\n              {label}:\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control\n                plaintext\n                readOnly\n                className={content ? '' : 'text-muted'}\n                value={content ?? '[not available]'}\n              />\n            </Col>\n          </Form.Group>\n        ))}\n        {links.map(({ label, content, destination }) => (\n          <Form.Group key={label} as={Row} className=\"mb-1\">\n            <Form.Label column sm=\"3\">\n              {label}:\n            </Form.Label>\n            <Col sm=\"9\">\n              {content ? (\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\n                  {content}\n                </NavLink>\n              ) : (\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\n              )}\n            </Col>\n          </Form.Group>\n        ))}\n      </Card.Body>\n      {itemList.length !== 0 ? (\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\n      ) : null}\n    </Card>\n  )\n}\n\nexport default DetailCard\n","import { Fragment, useState } from 'react'\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport ConfirmationModal from '../modals/ConfirmationModal'\nimport SelectItemModal from '../modals/SelectItemModal'\n\nconst ListCard = ({\n  label,\n  items,\n  keySelector,\n  nameSelector,\n  linkSelector,\n  showButtons,\n  handleRemove,\n  handleAdd,\n  handleSearchItems,\n}) => {\n  const [query, setQuery] = useState('')\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\n  const [showAddModal, setShowAddModal] = useState()\n  const itemKeys = items.map((item) => keySelector(item))\n\n  const listItems = items\n    .filter(\n      (item) =>\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\n    )\n    .map((item) => {\n      const itemKey = keySelector(item)\n      const itemName = nameSelector(item)\n      const isActive = itemKey === keySelector(selectedItem)\n      return (\n        <ListGroup.Item\n          key={itemKey}\n          action\n          className=\"user-select-none\"\n          onClick={() => setSelectedItem(item)}\n          active={isActive}\n        >\n          <div className=\"d-flex justify-content-between\">\n            {itemName}\n            <Link\n              style={\n                isActive\n                  ? {\n                      color: '#fff',\n                    }\n                  : {}\n              }\n              to={linkSelector(item)}\n            >{`Go to ${label.toLowerCase()}`}</Link>\n          </div>\n        </ListGroup.Item>\n      )\n    })\n\n  return (\n    <Fragment>\n      <Card border=\"secondary\">\n        <Card.Header className=\"d-flex justify-content-between\">\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\n            <Form.Control\n              placeholder=\"placeholder\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </FloatingLabel>\n          {showButtons ? (\n            <>\n              <Button\n                variant=\"secondary\"\n                className=\"mx-1\"\n                onClick={() => setShowAddModal(true)}\n              >\n                Add\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  if (keySelector(selectedItem)) {\n                    setShowRemoveWarning(true)\n                  } else {\n                    setShowSelectWarning(true)\n                  }\n                }}\n              >\n                Remove\n              </Button>\n            </>\n          ) : null}\n        </Card.Header>\n        {listItems.length !== 0 ? (\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\n        ) : null}\n        <Card.Footer className=\"text-muted text-center\">\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\n        </Card.Footer>\n      </Card>\n      <ConfirmationModal\n        title=\"Warning\"\n        content={`Please select one ${label.toLowerCase()} from the list.`}\n        show={showSelectWarning}\n        handleClose={() => setShowSelectWarning(false)}\n      />\n      <ConfirmationModal\n        title={`Remove ${label.toLowerCase()}?`}\n        content=\"This action cannot be undone. List will be updated.\"\n        show={showRemoveWarning}\n        handleClose={() => setShowRemoveWarning(false)}\n        handleSubmit={async () => {\n          await handleRemove(selectedItem)\n        }}\n      />\n      <SelectItemModal\n        title={`Add new ${label.toLowerCase()}`}\n        show={showAddModal}\n        handleClose={() => setShowAddModal(false)}\n        handleSubmit={handleAdd}\n        handleSearchItems={async (query) => {\n          const itemList = await handleSearchItems(query)\n          return itemList.filter((item) => !itemKeys.includes(item.value))\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default ListCard\n","import { useEffect, useRef } from 'react'\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n\nexport default usePrevious\n","import { useEffect } from 'react'\nimport { useMatch, useNavigate } from 'react-router'\nimport usePrevious from './usePrevious'\n\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\n  const navigate = useNavigate()\n  const match = useMatch('/:resource/:itemId') // Can be customized\n  const itemIdParam = match?.params?.itemId\n  const resourceParam = match?.params?.resource\n  const prevSelectedId = usePrevious(selectedItemId)\n\n  useEffect(() => {\n    if (selectedItemId) {\n      if (itemIdParam) {\n        if (itemIdParam !== selectedItemId) {\n          if (prevSelectedId) {\n            if (itemIdParam === prevSelectedId) {\n              // Update url based on selected item\n              navigate(selectedItemId.toString())\n            } else {\n              // Weird?\n              console.log('Weird?', {\n                itemIdParam,\n                prevSelectedId,\n                selectedItemId,\n              })\n            }\n          } else {\n            // Link from another resource\n            setSelectedItemId(itemIdParam)\n          }\n        } else {\n          // In sync, nothing changes, good!\n        }\n      } else {\n        // First select\n        navigate(selectedItemId.toString())\n      }\n    } else {\n      if (prevSelectedId) {\n        if (prevSelectedId === itemIdParam) {\n          // Current item deleted, selected ID is null\n          navigate(`/${resourceParam}`) // Clear param\n        } else {\n          // Weird?\n          console.log('Weird?', {\n            itemIdParam,\n            prevSelectedId,\n            selectedItemId,\n          })\n        }\n      } else {\n        if (itemIdParam) {\n          // Fresh load selected item from entered url\n          setSelectedItemId(itemIdParam)\n        } else {\n          // Fresh load with no param\n        }\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedItemId, itemIdParam])\n}\n\nexport default useItemParam\n","import {\n  MENTORGROUP,\n  MENTORGROUP_LIST,\n  STUDENT,\n  STUDENT_LIST,\n} from '../tagConstants'\nimport { apiSlice } from '../index'\n\nconst extendedApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    searchMentors: builder.mutation({\n      query: (queryStr) => ({\n        url: '/group',\n        method: 'GET',\n        params: { query: queryStr || '', groupType: 'MENTORGROUP' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result.map((mentor) => ({ type: MENTORGROUP, id: mentor.groupId })),\n    }),\n\n    getMentorInfo: builder.query({\n      query: (groupId) => ({\n        url: '/mentor/info',\n        method: 'GET',\n        params: { groupId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: MENTORGROUP, id: result.groupId },\n      ],\n    }),\n\n    getMentorGroupStudents: builder.query({\n      query: (groupId) => ({\n        url: '/group/user',\n        method: 'GET',\n        params: { groupId, role: 'STUDENT' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result\n          .map((student) => ({ type: STUDENT, id: student.userId }))\n          .concat([{ type: STUDENT_LIST, id: arg }]),\n    }),\n\n    addNewMentorGroup: builder.mutation({\n      query: ({ mentorId, groupName, displayId }) => ({\n        url: '/mentor',\n        method: 'POST',\n        body: { mentorId, groupName, displayId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: MENTORGROUP_LIST, id: arg.mentorId },\n      ],\n    }),\n\n    removeMentorGroup: builder.mutation({\n      query: ({ groupId }) => ({\n        url: '/group',\n        method: 'DELETE',\n        params: { groupId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: MENTORGROUP, id: arg.groupId },\n      ],\n    }),\n\n    changeGroupName: builder.mutation({\n      query: ({ groupId, groupName }) => ({\n        url: '/group/name',\n        method: 'PUT',\n        body: { groupId, groupName },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: MENTORGROUP, id: arg.groupId },\n      ],\n    }),\n\n    changeGroupDisplayId: builder.mutation({\n      query: ({ groupId, displayId }) => ({\n        url: '/group/displayId',\n        method: 'PUT',\n        body: { groupId, displayId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: MENTORGROUP, id: arg.groupId },\n      ],\n    }),\n\n    changeMentorId: builder.mutation({\n      query: ({ groupId, currentMentorId, newMentorId }) => ({\n        url: '/mentor',\n        method: 'PUT',\n        body: { groupId, mentorId: newMentorId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: MENTORGROUP, id: arg.groupId },\n        { type: MENTORGROUP_LIST, id: arg.currentMentorId },\n        { type: MENTORGROUP_LIST, id: arg.newMentorId },\n      ],\n    }),\n  }),\n})\n\nexport const {\n  useSearchMentorsMutation,\n  useGetMentorGroupStudentsQuery,\n  useGetMentorInfoQuery,\n  useAddNewMentorGroupMutation,\n  useRemoveMentorGroupMutation,\n  useChangeGroupNameMutation,\n  useChangeMentorIdMutation,\n  useChangeGroupDisplayIdMutation,\n} = extendedApi\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport InputField from '../../custom-fields/InputField'\n\nconst EditFieldModal = ({\n  title,\n  show,\n  handleClose,\n  handleSubmit,\n  initialValues = '',\n  isNumber = false,\n}) => {\n  const validationSchema = Yup.object().shape({\n    singleField: isNumber\n      ? Yup.number().required('This field is required.')\n      : Yup.string().required('This field is required.'),\n  })\n\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values.singleField)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('singleField', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={{\n          singleField: initialValues,\n        }}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"singleField\"\n                component={InputField}\n                type={isNumber ? 'number' : 'text'}\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default EditFieldModal\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport InputField from '../../../../components/custom-fields/InputField'\nimport AsyncSelectField from '../../../../components/custom-fields/AsyncSelectField'\nimport { useAddNewMentorGroupMutation } from '../../../../app/api/group/mentorSlice'\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\nimport { setSelectedMentorId } from '../../../../app/pageSlice'\nimport { useDispatch } from 'react-redux'\n\nconst validationSchema = Yup.object().shape({\n  displayId: Yup.string().required('This field is required.'),\n  groupName: Yup.string().required('This field is required.'),\n  mentorId: Yup.string().required('This field is required.'),\n})\n\nconst initialValues = {\n  displayId: '',\n  groupName: '',\n  mentorId: '',\n}\n\nconst MentorAddModal = (props) => {\n  const { show, handleClose } = props\n  const [triggerSearch] = useSearchLecturersMutation()\n  const [triggerAdd] = useAddNewMentorGroupMutation()\n  const dispatch = useDispatch()\n\n  const searchLecturers = async (inputValue) => {\n    const lecturers = await triggerSearch(inputValue).unwrap()\n    return lecturers.map((lecturer) => ({\n      value: lecturer.id,\n      label: lecturer.name,\n    }))\n  }\n\n  const handleSubmit = async (values, actions) => {\n    try {\n      const { groupId } = await triggerAdd(values).unwrap()\n      handleClose()\n      dispatch(setSelectedMentorId(groupId))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add new mentor group</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"groupName\"\n                component={InputField}\n                label=\"New group name\"\n                placeholder=\"ITCS K18...\"\n              />\n              <FastField\n                name=\"displayId\"\n                component={InputField}\n                label=\"New group ID\"\n                placeholder=\"ITCSK18...\"\n              />\n              <FastField\n                name=\"mentorId\"\n                component={AsyncSelectField}\n                loadOptions={searchLecturers}\n                label=\"Select mentor\"\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default MentorAddModal\n","import { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchMentorsMutation } from '../../../../app/api/group/mentorSlice'\nimport {\n  selectedMentorIdSelector,\n  setSelectedMentorId,\n} from '../../../../app/pageSlice'\nimport SearchCard from '../../../../components/SearchCard'\nimport MentorAddModal from './MentorAddModal'\n\nconst MentorSearchCard = () => {\n  const dispatch = useDispatch()\n  const [trigger, query] = useSearchMentorsMutation()\n  const { data } = query\n  const selectedMentorId = useSelector(selectedMentorIdSelector)\n  const [addModal, setAddModal] = useState(false)\n\n  return (\n    <Fragment>\n      <SearchCard\n        label=\"Mentor\"\n        items={data}\n        selectedItemKey={selectedMentorId}\n        keySelector={(mentor) => mentor.groupId}\n        nameSelector={(mentor) => mentor.groupName}\n        showKey={false}\n        onSearch={(query) => trigger(query)}\n        onAdd={() => setAddModal(true)}\n        onSelect={(mentor) => dispatch(setSelectedMentorId(mentor.groupId))}\n      />\n      <MentorAddModal show={addModal} handleClose={() => setAddModal(false)} />\n    </Fragment>\n  )\n}\n\nexport default MentorSearchCard\n","import { Fragment, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useChangeGroupDisplayIdMutation,\n  useChangeGroupNameMutation,\n  useChangeMentorIdMutation,\n  useGetMentorInfoQuery,\n  useRemoveMentorGroupMutation,\n} from '../../../../app/api/group/mentorSlice'\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\nimport { setSelectedMentorId } from '../../../../app/pageSlice'\nimport DetailCard from '../../../../components/DetailCard'\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\nimport EditFieldModal from '../../../../components/modals/EditFieldModal'\nimport SelectItemModal from '../../../../components/modals/SelectItemModal'\n\nconst MentorDetailCard = ({ selectedMentorId }) => {\n  const { data: mentorInfo, isFetching } =\n    useGetMentorInfoQuery(selectedMentorId)\n\n  const [triggerRemoveMentorGroup] = useRemoveMentorGroupMutation()\n  const [triggerRename] = useChangeGroupNameMutation()\n  const [triggerChangeMentor] = useChangeMentorIdMutation()\n  const [triggerSearchLecturers] = useSearchLecturersMutation()\n  const [triggerChangeId] = useChangeGroupDisplayIdMutation()\n\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\n  const [showRenameModal, setShowRenameModal] = useState(false)\n  const [showChangeIdModal, setShowChangeIdModal] = useState(false)\n  const [showChangeMentorModal, setShowChangeMentorModal] = useState(false)\n\n  const dispatch = useDispatch()\n\n  if (isFetching) {\n    return <></>\n  }\n\n  return (\n    <Fragment>\n      <DetailCard\n        label=\"Group\"\n        fields={[\n          { label: 'Group name', content: mentorInfo.groupName },\n          { label: 'Group ID', content: mentorInfo.displayId },\n        ]}\n        links={[\n          {\n            label: 'Mentor',\n            content: mentorInfo.mentorName,\n            destination: `/lecturer/${mentorInfo.mentorId || ''}`,\n          },\n        ]}\n        buttons={[\n          {\n            label: 'Rename group',\n            onClick: () => {\n              setShowRenameModal(true)\n            },\n          },\n          {\n            label: 'Change group ID',\n            onClick: () => {\n              setShowChangeIdModal(true)\n            },\n          },\n          {\n            label: 'Change mentor',\n            onClick: () => {\n              setShowChangeMentorModal(true)\n            },\n          },\n          {\n            label: 'Remove group',\n            onClick: () => {\n              setShowRemoveWarning(true)\n            },\n          },\n        ]}\n      />\n      <EditFieldModal\n        title=\"Change group name\"\n        show={showRenameModal}\n        handleClose={() => {\n          setShowRenameModal(false)\n        }}\n        handleSubmit={async (newGroupName) => {\n          await triggerRename({\n            groupId: mentorInfo.groupId,\n            groupName: newGroupName,\n          })\n        }}\n        initialValues={mentorInfo.groupName}\n      />\n      <EditFieldModal\n        title=\"Change group ID\"\n        show={showChangeIdModal}\n        handleClose={() => {\n          setShowChangeIdModal(false)\n        }}\n        handleSubmit={async (newGroupId) => {\n          await triggerChangeId({\n            groupId: mentorInfo.groupId,\n            displayId: newGroupId,\n          })\n        }}\n        initialValues={mentorInfo.displayId}\n      />\n      <SelectItemModal\n        title=\"Change mentor\"\n        show={showChangeMentorModal}\n        handleClose={() => {\n          setShowChangeMentorModal(false)\n        }}\n        handleSubmit={async (newMentorId) => {\n          await triggerChangeMentor({\n            groupId: mentorInfo.groupId,\n            currentMentorId: mentorInfo.mentorId,\n            newMentorId,\n          })\n        }}\n        handleSearchItems={async (query) => {\n          const lecturers = await triggerSearchLecturers(query).unwrap()\n          return lecturers.map((lecturer) => ({\n            value: lecturer.id,\n            label: lecturer.name,\n          }))\n        }}\n      />\n      <ConfirmationModal\n        title=\"Remove mentor group?\"\n        content=\"All students and lecturers will be removed from this mentor group too.\"\n        show={showRemoveWarning}\n        handleClose={() => setShowRemoveWarning(false)}\n        handleSubmit={async () => {\n          dispatch(setSelectedMentorId(null))\n          await triggerRemoveMentorGroup({\n            groupId: mentorInfo.groupId,\n          }).unwrap()\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default MentorDetailCard\n","import { useGetMentorGroupStudentsQuery } from '../../../../app/api/group/mentorSlice'\nimport ListCard from '../../../../components/ListCard'\n\nconst MentorListCard = ({ selectedMentorId }) => {\n  const { data: students, isFetching } =\n    useGetMentorGroupStudentsQuery(selectedMentorId)\n\n  if (isFetching) {\n    return <></>\n  }\n\n  return (\n    <ListCard\n      label=\"Student\"\n      items={students}\n      keySelector={(student) => student.userId}\n      nameSelector={(student) => student.userName}\n      linkSelector={(student) => `/student/${student.userId}`}\n      showButtons={false}\n    />\n  )\n}\n\nexport default MentorListCard\n","import useItemParam from '../../hooks/useItemParam'\nimport {\n  selectedMentorIdSelector,\n  setSelectedMentorId,\n} from '../../app/pageSlice'\nimport { Row, Col } from 'react-bootstrap'\nimport MentorSearchCard from './components/MentorSearchCard'\nimport MentorDetailCard from './components/MentorDetailCard'\nimport MentorListCard from './components/MentorListCard'\nimport { Fragment } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst MentorPage = () => {\n  const dispatch = useDispatch()\n  const selectedMentorId = useSelector(selectedMentorIdSelector)\n\n  useItemParam({\n    selectedItemId: selectedMentorId,\n    setSelectedItemId: (mentorId) => {\n      dispatch(setSelectedMentorId(mentorId))\n    },\n  })\n\n  return (\n    <Row className=\"justify-content-md-center my-3\">\n      <Col md=\"3\">\n        <MentorSearchCard />\n      </Col>\n      {selectedMentorId ? (\n        <>\n          <Col md=\"4\">\n            <MentorDetailCard selectedMentorId={selectedMentorId} />\n          </Col>\n          <Col md=\"4\">\n            <MentorListCard selectedMentorId={selectedMentorId} />\n          </Col>\n        </>\n      ) : (\n        <>\n          <Col md=\"4\"></Col>\n          <Col md=\"4\"></Col>\n        </>\n      )}\n    </Row>\n  )\n}\n\nexport default MentorPage\n"],"sourceRoot":""}