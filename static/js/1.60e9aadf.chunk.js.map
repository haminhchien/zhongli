{"version":3,"sources":["components/modals/ConfirmationModal/index.jsx","components/custom-fields/AsyncSelectField/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/group/facultySlice.js","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","app/api/user/studentSlice.js","components/modals/ChangePasswordModal/index.jsx","components/modals/EditUserInfoModal/index.jsx"],"names":["ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","AsyncSelectField","props","field","form","label","placeholder","disabled","loadOptions","name","onBlur","errors","touched","showError","Group","className","Label","htmlFor","id","onChange","selectedOption","selectedValue","value","changeEvent","target","render","msg","Control","Feedback","type","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","component","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchFaculties","mutation","query","queryStr","url","method","params","groupType","providesTags","result","map","faculty","FACULTY","groupId","getFacultyInfo","getFacultyLecturers","arg","lecturer","LECTURER","userId","concat","LECTURER_LIST","addNewFaculty","body","facultyName","facultyDescription","removeFaculty","invalidatesTags","changeFacultyName","groupName","error","changeFacultyDescription","useSearchFacultiesMutation","useGetFacultyInfoQuery","useGetFacultyLecturersQuery","useAddNewFacultyMutation","useRemoveFacultyMutation","useChangeFacultyDescriptionMutation","useChangeFacultyNameMutation","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","searchStudents","student","STUDENT","getStudentInfo","studentId","getStudentMentorGroup","MENTORGROUP","getStudentFaculty","getStudentCourses","course","COURSE","COURSE_LIST","addNewStudent","password","address","facultyId","removeStudent","addStudentCourse","STUDENT_LIST","removeStudentCourse","changeUserPassword","changeStudentInfo","changeStudentMentor","currentGroupId","currentMentorGroupId","newGroupId","newMentorGroupId","changeStudentFaculty","currentFacultyId","newFacultyId","useSearchStudentsMutation","useGetStudentMentorGroupQuery","useGetStudentCoursesQuery","useGetStudentFacultyQuery","useGetStudentInfoQuery","useAddNewStudentMutation","useRemoveStudentMutation","useAddStudentCourseMutation","useRemoveStudentCourseMutation","useChangeUserPasswordMutation","useChangeStudentInfoMutation","useChangeStudentMentorMutation","useChangeStudentFacultyMutation","passwordConfirmation","test","this","parent","ChangePasswordModal","InputField","EditUserInfoModal"],"mappings":"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","file":"static/js/1.60e9aadf.chunk.js","sourcesContent":["import { Modal, Button, Spinner } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nconst ConfirmationModal = ({\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleError,\r\n  title,\r\n  content,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n  const handleClick = async () => {\r\n    if (handleSubmit) {\r\n      setIsSubmitting(true)\r\n      try {\r\n        await handleSubmit()\r\n      } catch (e) {\r\n        if (handleError) {\r\n          handleError(e)\r\n        }\r\n      }\r\n    }\r\n    // handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClick}>\r\n          {isSubmitting && (\r\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\r\n          )}\r\n          OK\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal\r\n","import { ErrorMessage } from 'formik'\r\nimport { Form } from 'react-bootstrap'\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nfunction AsyncSelectField(props) {\r\n  const { field, form, label, placeholder, disabled, loadOptions } = props\r\n  const { name, onBlur } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    }\r\n    field.onChange(changeEvent)\r\n  }\r\n\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <AsyncSelect\r\n        id={name}\r\n        onChange={handleSelectedOptionChange}\r\n        onBlur={onBlur}\r\n        placeholder={placeholder}\r\n        loadOptions={loadOptions}\r\n        disabled={disabled}\r\n        className={showError ? 'is-invalid' : ''}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AsyncSelectField\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  itemId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  itemId: '',\r\n}\r\n\r\nconst SelectItemModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleSearchItems,\r\n}) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.itemId)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('itemId', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"itemId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={handleSearchItems}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SelectItemModal\r\n","import { FACULTY, LECTURER, LECTURER_LIST } from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchFaculties: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/group',\r\n        method: 'GET',\r\n        params: { query: queryStr || '', groupType: 'FACULTY' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((faculty) => ({ type: FACULTY, id: faculty.groupId })),\r\n    }),\r\n\r\n    getFacultyInfo: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/faculty/info',\r\n        method: 'GET',\r\n        params: { groupId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n      ],\r\n    }),\r\n\r\n    getFacultyLecturers: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/group/user',\r\n        method: 'GET',\r\n        params: { groupId, role: 'LECTURER' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((lecturer) => ({ type: LECTURER, id: lecturer.userId }))\r\n          .concat([{ type: LECTURER_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewFaculty: builder.mutation({\r\n      query: ({ facultyName, facultyDescription }) => ({\r\n        url: '/faculty',\r\n        method: 'POST',\r\n        body: { facultyName, facultyDescription },\r\n      }),\r\n    }),\r\n\r\n    removeFaculty: builder.mutation({\r\n      query: ({ groupId }) => ({\r\n        url: '/group',\r\n        method: 'DELETE',\r\n        params: { groupId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: FACULTY, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeFacultyName: builder.mutation({\r\n      query: ({ groupId, groupName }) => ({\r\n        url: '/group',\r\n        method: 'PUT',\r\n        body: { groupId, groupName },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: FACULTY, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeFacultyDescription: builder.mutation({\r\n      query: ({ groupId, facultyDescription }) => ({\r\n        url: '/faculty',\r\n        method: 'PUT',\r\n        body: { groupId, facultyDescription },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: FACULTY, id: arg.groupId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchFacultiesMutation,\r\n  useGetFacultyInfoQuery,\r\n  useGetFacultyLecturersQuery,\r\n  useAddNewFacultyMutation,\r\n  useRemoveFacultyMutation,\r\n  useChangeFacultyDescriptionMutation,\r\n  useChangeFacultyNameMutation,\r\n} = extendedApi\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\n\r\nconst SearchCard = ({\r\n  label,\r\n  items = [],\r\n  selectedItemKey,\r\n  keySelector,\r\n  nameSelector,\r\n  showKey,\r\n  onSearch,\r\n  onAdd,\r\n  onSelect,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!selectedItemKey) {\r\n      // On mount, if no item selected, get something\r\n      onSearch(selectedItemKey)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [query, setQuery] = useState('')\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          active={itemKey === selectedItemKey}\r\n          action\r\n          onClick={() => onSelect(item)}\r\n          className=\"user-select-none\"\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            {showKey ? <div>{itemKey}</div> : null}\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between\">\r\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n          <Form.Control\r\n            placeholder=\"placeholder\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n        </FloatingLabel>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          onClick={() => {\r\n            onSearch(query)\r\n            setQuery('')\r\n          }}\r\n        >\r\n          Find\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={onAdd}>\r\n          Add\r\n        </Button>\r\n      </Card.Header>\r\n      {listItems.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n      ) : null}\r\n      <Card.Footer className=\"text-muted text-center\">\r\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SearchCard\r\n","import {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  NavLink,\r\n  ListGroup,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from 'react-bootstrap'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst DetailCard = (props) => {\r\n  const {\r\n    label,\r\n    buttons = [],\r\n    fields = [],\r\n    links = [],\r\n    listItems = [],\r\n    listItemLabel,\r\n    keySelector,\r\n    nameSelector,\r\n    linkSelector,\r\n  } = props\r\n  const navigate = useNavigate()\r\n  const itemList = listItems.map((item) => (\r\n    <ListGroup.Item key={keySelector(item)}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\r\n        <Link\r\n          to={linkSelector(item)}\r\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\r\n      </div>\r\n    </ListGroup.Item>\r\n  ))\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\r\n        <DropdownButton variant=\"secondary\" title=\"Options\">\r\n          {buttons.map(({ label, onClick }) => (\r\n            <Dropdown.Item key={label} onClick={onClick}>\r\n              {label}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {fields.map(({ label, content }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                className={content ? '' : 'text-muted'}\r\n                value={content ?? '[not available]'}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n        {links.map(({ label, content, destination }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              {content ? (\r\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\r\n                  {content}\r\n                </NavLink>\r\n              ) : (\r\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\r\n              )}\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n      </Card.Body>\r\n      {itemList.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DetailCard\r\n","import { Fragment, useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../modals/ConfirmationModal'\r\nimport SelectItemModal from '../modals/SelectItemModal'\r\n\r\nconst ListCard = ({\r\n  label,\r\n  items,\r\n  keySelector,\r\n  nameSelector,\r\n  linkSelector,\r\n  showButtons,\r\n  handleRemove,\r\n  handleAdd,\r\n  handleSearchItems,\r\n}) => {\r\n  const [query, setQuery] = useState('')\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showAddModal, setShowAddModal] = useState()\r\n  const itemKeys = items.map((item) => keySelector(item))\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      const isActive = itemKey === keySelector(selectedItem)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          action\r\n          className=\"user-select-none\"\r\n          onClick={() => setSelectedItem(item)}\r\n          active={isActive}\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            <Link\r\n              style={\r\n                isActive\r\n                  ? {\r\n                      color: '#fff',\r\n                    }\r\n                  : {}\r\n              }\r\n              to={linkSelector(item)}\r\n            >{`Go to ${label.toLowerCase()}`}</Link>\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card border=\"secondary\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n            <Form.Control\r\n              placeholder=\"placeholder\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n          </FloatingLabel>\r\n          {showButtons ? (\r\n            <>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"mx-1\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  if (keySelector(selectedItem)) {\r\n                    setShowRemoveWarning(true)\r\n                  } else {\r\n                    setShowSelectWarning(true)\r\n                  }\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </Card.Header>\r\n        {listItems.length !== 0 ? (\r\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n        ) : null}\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n        </Card.Footer>\r\n      </Card>\r\n      <ConfirmationModal\r\n        title=\"Warning\"\r\n        content={`Please select one ${label.toLowerCase()} from the list.`}\r\n        show={showSelectWarning}\r\n        handleClose={() => setShowSelectWarning(false)}\r\n      />\r\n      <ConfirmationModal\r\n        title={`Remove ${label.toLowerCase()}?`}\r\n        content=\"This action cannot be undone. List will be updated.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          await handleRemove(selectedItem)\r\n        }}\r\n      />\r\n      <SelectItemModal\r\n        title={`Add new ${label.toLowerCase()}`}\r\n        show={showAddModal}\r\n        handleClose={() => setShowAddModal(false)}\r\n        handleSubmit={handleAdd}\r\n        handleSearchItems={async (query) => {\r\n          const itemList = await handleSearchItems(query)\r\n          return itemList.filter((item) => !itemKeys.includes(item.value))\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListCard\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef()\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value]) // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current\r\n}\r\n\r\nexport default usePrevious\r\n","import { useEffect } from 'react'\r\nimport { useMatch, useNavigate } from 'react-router'\r\nimport usePrevious from './usePrevious'\r\n\r\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\r\n  const navigate = useNavigate()\r\n  const match = useMatch('/:resource/:itemId') // Can be customized\r\n  const itemIdParam = match?.params?.itemId\r\n  const resourceParam = match?.params?.resource\r\n  const prevSelectedId = usePrevious(selectedItemId)\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      if (itemIdParam) {\r\n        if (itemIdParam !== selectedItemId) {\r\n          if (prevSelectedId) {\r\n            if (itemIdParam === prevSelectedId) {\r\n              // Update url based on selected item\r\n              navigate(selectedItemId.toString())\r\n            } else {\r\n              // Weird?\r\n              console.log('Weird?', {\r\n                itemIdParam,\r\n                prevSelectedId,\r\n                selectedItemId,\r\n              })\r\n            }\r\n          } else {\r\n            // Link from another resource\r\n            setSelectedItemId(itemIdParam)\r\n          }\r\n        } else {\r\n          // In sync, nothing changes, good!\r\n        }\r\n      } else {\r\n        // First select\r\n        navigate(selectedItemId.toString())\r\n      }\r\n    } else {\r\n      if (prevSelectedId) {\r\n        if (prevSelectedId === itemIdParam) {\r\n          // Current item deleted, selected ID is null\r\n          navigate(`/${resourceParam}`) // Clear param\r\n        } else {\r\n          // Weird?\r\n          console.log('Weird?', {\r\n            itemIdParam,\r\n            prevSelectedId,\r\n            selectedItemId,\r\n          })\r\n        }\r\n      } else {\r\n        if (itemIdParam) {\r\n          // Fresh load selected item from entered url\r\n          setSelectedItemId(itemIdParam)\r\n        } else {\r\n          // Fresh load with no param\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedItemId, itemIdParam])\r\n}\r\n\r\nexport default useItemParam\r\n","import {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  MENTORGROUP,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchStudents: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/user',\r\n        method: 'GET',\r\n        params: { role: 'STUDENT', query: queryStr || '' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((student) => ({ type: STUDENT, id: student.id })),\r\n    }),\r\n\r\n    getStudentInfo: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/user/info',\r\n        method: 'GET',\r\n        params: { userId: studentId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: STUDENT, id: result.id },\r\n      ],\r\n    }),\r\n\r\n    getStudentMentorGroup: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/student/mentor',\r\n        method: 'GET',\r\n        params: { studentId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: MENTORGROUP, id: result.groupId },\r\n        { type: STUDENT, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getStudentFaculty: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/user/faculty',\r\n        method: 'GET',\r\n        params: { userId: studentId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n        { type: STUDENT, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getStudentCourses: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/student/course',\r\n        method: 'GET',\r\n        params: { studentId },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((course) => ({\r\n            type: COURSE,\r\n            id: course.groupId,\r\n          }))\r\n          .concat([{ type: COURSE_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewStudent: builder.mutation({\r\n      query: ({ id, name, password, address, facultyId }) => ({\r\n        url: '/user',\r\n        method: 'POST',\r\n        body: { id, name, password, role: 'STUDENT', address, facultyId },\r\n      }),\r\n    }),\r\n\r\n    removeStudent: builder.mutation({\r\n      query: ({ userId }) => ({\r\n        url: '/user',\r\n        method: 'DELETE',\r\n        params: { userId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: STUDENT, id: arg.userId },\r\n      ],\r\n    }),\r\n\r\n    addStudentCourse: builder.mutation({\r\n      query: ({ userId, groupId }) => ({\r\n        url: '/group/user',\r\n        method: 'POST',\r\n        params: { userId, groupId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE_LIST, id: arg.userId },\r\n        { type: STUDENT_LIST, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    removeStudentCourse: builder.mutation({\r\n      query: ({ userId, groupId }) => ({\r\n        url: '/group/user',\r\n        method: 'DELETE',\r\n        params: { userId, groupId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE_LIST, id: arg.userId },\r\n        { type: STUDENT_LIST, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeUserPassword: builder.mutation({\r\n      query: ({ userId, password }) => ({\r\n        url: '/user/password',\r\n        method: 'PUT',\r\n        body: { userId, password },\r\n      }),\r\n    }),\r\n\r\n    changeStudentInfo: builder.mutation({\r\n      query: ({ id, name, address }) => ({\r\n        url: '/user',\r\n        method: 'PUT',\r\n        body: { id, name, address },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        {\r\n          type: STUDENT,\r\n          id: arg.id,\r\n        },\r\n      ],\r\n    }),\r\n\r\n    changeStudentMentor: builder.mutation({\r\n      query: ({ id, currentMentorGroupId, newMentorGroupId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentMentorGroupId,\r\n          newGroupId: newMentorGroupId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: STUDENT, id: arg.id },\r\n        { type: STUDENT_LIST, id: arg.currentMentorGroupId },\r\n        { type: STUDENT_LIST, id: arg.newMentorGroupId },\r\n      ],\r\n    }),\r\n\r\n    changeStudentFaculty: builder.mutation({\r\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentFacultyId,\r\n          newGroupId: newFacultyId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [{ type: STUDENT, id: arg.id }],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchStudentsMutation,\r\n  useGetStudentMentorGroupQuery,\r\n  useGetStudentCoursesQuery,\r\n  useGetStudentFacultyQuery,\r\n  useGetStudentInfoQuery,\r\n  useAddNewStudentMutation,\r\n  useRemoveStudentMutation,\r\n  useAddStudentCourseMutation,\r\n  useRemoveStudentCourseMutation,\r\n  useChangeUserPasswordMutation,\r\n  useChangeStudentInfoMutation,\r\n  useChangeStudentMentorMutation,\r\n  useChangeStudentFacultyMutation,\r\n} = extendedApi\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../custom-fields/InputField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string().required('This field is required.'),\r\n  passwordConfirmation: Yup.string().test(\r\n    'passwords-match',\r\n    'Passwords must match',\r\n    function (value) {\r\n      return this.parent.password === value\r\n    },\r\n  ),\r\n})\r\n\r\nconst initialValues = {\r\n  password: '',\r\n  passwordConfirmation: '',\r\n}\r\n\r\nconst ChangePasswordModal = ({ title, show, handleClose, handleSubmit }) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.password)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('password', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"password\"\r\n                component={InputField}\r\n                placeholder=\"New password...\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n              />\r\n              <FastField\r\n                name=\"passwordConfirmation\"\r\n                component={InputField}\r\n                placeholder=\"Type password again...\"\r\n                type=\"password\"\r\n                label=\"Password confirmation\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ChangePasswordModal\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../../components/custom-fields/InputField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('This field is required.'),\r\n  address: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst EditUserInfoModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  initialValues,\r\n}) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('id', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"name\"\r\n                component={InputField}\r\n                label=\"Fullname\"\r\n                placeholder=\"Le Van A...\"\r\n              />\r\n              <FastField\r\n                name=\"address\"\r\n                component={InputField}\r\n                label=\"Address\"\r\n                placeholder=\"District 5, Ho Chi Minh City...\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditUserInfoModal\r\n"],"sourceRoot":""}