{"version":3,"sources":["components/custom-fields/InputField/index.jsx","components/modals/ConfirmationModal/index.jsx","components/custom-fields/AsyncSelectField/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/group/facultySlice.js","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","components/modals/EditFieldModal/index.jsx","pages/Faculty/components/FacultySearchCard/FacultyAddModal.jsx","pages/Faculty/components/FacultySearchCard/index.jsx","pages/Faculty/components/FacultyDetailCard/index.jsx","pages/Faculty/components/FacultyListCard/index.jsx","pages/Faculty/index.jsx"],"names":["InputField","props","field","form","type","label","placeholder","disabled","errors","touched","name","showError","Group","className","Label","htmlFor","Control","id","isInvalid","render","msg","Feedback","ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","AsyncSelectField","loadOptions","onBlur","onChange","selectedOption","selectedValue","value","changeEvent","target","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","component","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchFaculties","mutation","query","queryStr","url","method","params","groupType","providesTags","result","map","faculty","FACULTY","groupId","getFacultyInfo","getFacultyLecturers","arg","lecturer","LECTURER","userId","concat","LECTURER_LIST","addNewFaculty","body","facultyName","facultyDescription","removeFaculty","invalidatesTags","changeFacultyName","groupName","error","changeFacultyDescription","useSearchFacultiesMutation","useGetFacultyInfoQuery","useGetFacultyLecturersQuery","useAddNewFacultyMutation","useRemoveFacultyMutation","useChangeFacultyDescriptionMutation","useChangeFacultyNameMutation","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","EditFieldModal","isNumber","singleField","FacultyAddModal","triggerAdd","dispatch","useDispatch","unwrap","setSelectedFacultyId","Modal","Form","Button","Spinner","FacultySearchCard","trigger","data","isLoading","selectedFacultyId","useSelector","selectedFacultyIdSelector","addModal","setAddModal","setIsLoading","FacultyDetailCard","facultyInfo","isFetching","triggerRemoveFaculty","triggerRename","triggerChangeDescription","showRenameModal","setShowRenameModal","showChangeDescriptionModal","setShowChangeDescriptionModal","newGroupName","newDescription","FacultyListCard","lecturers","userName","FacultyPage","facultyId","Col","md"],"mappings":"kJA8BeA,IA3Bf,SAAoBC,GAAQ,IAClBC,EAAoDD,EAApDC,MAAOC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,MAAOC,EAA0BL,EAA1BK,YAAaC,EAAaN,EAAbM,SACvCC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACRC,EAASR,EAATQ,KACFC,EAAYH,EAAOE,IAASD,EAAQC,GAE1C,OACE,eAAC,IAAKE,MAAN,CAAYC,UAAU,OAAtB,UACGR,GAAS,cAAC,IAAKS,MAAN,CAAYC,QAASL,EAArB,SAA4BL,IACtC,cAAC,IAAKW,QAAN,yBACEC,GAAIP,GACAR,GAFN,IAGEI,YAAaA,EACbF,KAAMA,EACNG,SAAUA,EACVW,UAAWP,KAEb,cAAC,IAAD,CACED,KAAMA,EACNS,OAAQ,SAACC,GAAD,OACN,cAAC,IAAKJ,QAAQK,SAAd,CAAuBjB,KAAK,UAA5B,SAAuCgB,Y,+GCyBlCE,IA7CW,SAAC,GAOpB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QACI,EACoCC,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGEC,EAAW,uCAAG,sBAAAC,EAAA,0DACdR,EADc,wBAEhBM,GAAgB,GAFA,kBAIRN,IAJQ,uDAMVC,GACFA,EAAY,EAAD,IAPC,yDAAH,qDAcjB,OACE,eAAC,IAAD,CAAOH,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAMW,KAAP,UAAaV,IACb,eAAC,IAAMW,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUC,QAAST,EAAnC,UACGF,GACC,cAAC,IAAD,CAASY,UAAU,SAASC,GAAG,OAAOC,KAAK,SAASC,KAAK,OAF7D,gB,iCCrCR,sCA2CeC,IAvCf,SAA0B7C,GAAQ,IACxBC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,KAAME,EAA8CJ,EAA9CI,MAAOC,EAAuCL,EAAvCK,YAAaC,EAA0BN,EAA1BM,SAAUwC,EAAgB9C,EAAhB8C,YAC3CrC,EAAiBR,EAAjBQ,KAAMsC,EAAW9C,EAAX8C,OACNxC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACVE,EAAYH,EAAOE,IAASD,EAAQC,GAa1C,OACE,eAAC,IAAKE,MAAN,CAAYC,UAAU,OAAtB,UACGR,GAAS,cAAC,IAAKS,MAAN,CAAYC,QAASL,EAArB,SAA4BL,IACtC,cAAC,IAAD,CACEY,GAAIP,EACJuC,SAhB6B,SAACC,GAClC,IAAMC,EAAgBD,EAAiBA,EAAeE,MAAQF,EACxDG,EAAc,CAClBC,OAAQ,CACN5C,KAAMA,EACN0C,MAAOD,IAGXjD,EAAM+C,SAASI,IASXL,OAAQA,EACR1C,YAAaA,EACbyC,YAAaA,EACbxC,SAAUA,EACVM,UAAWF,EAAY,aAAe,KAExC,cAAC,IAAD,CACED,KAAMA,EACNS,OAAQ,SAACC,GAAD,OACN,cAAC,IAAKJ,QAAQK,SAAd,CAAuBjB,KAAK,UAA5B,SAAuCgB,Y,oIC/B3CmC,EAAmBC,MAAaC,MAAM,CAC1CC,OAAQF,MAAaG,SAAS,6BAG1BC,EAAgB,CACpBF,OAAQ,IAmEKG,IAhES,SAAC,GAMlB,IALLlC,EAKI,EALJA,MACAJ,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAqC,EACI,EADJA,kBAEMC,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAhC,EAAA,+EAEPR,EAAauC,EAAON,QAFb,OAGblC,IAHa,+CAKb0C,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAO5C,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEiC,cAAeA,EACfG,SAAUA,EACVR,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAY3C,aACtB6C,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMjC,KAAP,UACE,cAAC,IAAD,CACE5B,KAAK,SACL8D,UAAW1B,IACXC,YAAae,MAIjB,eAAC,IAAMvB,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUpC,KAAK,SAA/B,UACGgE,EAAYtC,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,iCC1Dd,0PAGM4B,EAHN,MAGoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvBC,gBAAiBD,EAAQE,SAAS,CAChCC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,SACLC,OAAQ,MACRC,OAAQ,CAAEJ,MAAOC,GAAY,GAAII,UAAW,aAE9CC,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAACC,GAAD,MAAc,CAAErF,KAAMsF,IAASzE,GAAIwE,EAAQE,eAG1DC,eAAgBf,EAAQG,MAAM,CAC5BA,MAAO,SAACW,GAAD,MAAc,CACnBT,IAAK,gBACLC,OAAQ,MACRC,OAAQ,CAAEO,aAEZL,aAAc,eAACC,EAAD,uDAAU,GAAV,MAA6B,CACzC,CAAEnF,KAAMsF,IAASzE,GAAIsE,EAAOI,aAIhCE,oBAAqBhB,EAAQG,MAAM,CACjCA,MAAO,SAACW,GAAD,MAAc,CACnBT,IAAK,cACLC,OAAQ,MACRC,OAAQ,CAAEO,UAAS/C,KAAM,cAE3B0C,aAAc,eAACC,EAAD,uDAAU,GAAWO,EAArB,8CACZP,EACGC,KAAI,SAACO,GAAD,MAAe,CAAE3F,KAAM4F,IAAU/E,GAAI8E,EAASE,WAClDC,OAAO,CAAC,CAAE9F,KAAM+F,IAAelF,GAAI6E,QAG1CM,cAAevB,EAAQE,SAAS,CAC9BC,MAAO,kBAA0C,CAC/CE,IAAK,WACLC,OAAQ,OACRkB,KAAM,CAAEC,YAHH,EAAGA,YAGaC,mBAHhB,EAAgBA,wBAOzBC,cAAe3B,EAAQE,SAAS,CAC9BC,MAAO,kBAAkB,CACvBE,IAAK,SACLC,OAAQ,SACRC,OAAQ,CAAEO,QAHL,EAAGA,WAKVc,gBAAiB,eAAqBX,EAArB,6CAA6B,CAC5C,CAAE1F,KAAMsF,IAASzE,GAAI6E,EAAIH,aAI7Be,kBAAmB7B,EAAQE,SAAS,CAClCC,MAAO,kBAA6B,CAClCE,IAAK,SACLC,OAAQ,MACRkB,KAAM,CAAEV,QAHH,EAAGA,QAGSgB,UAHZ,EAAYA,aAKnBF,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE1F,KAAMsF,IAASzE,GAAI6E,EAAIH,aAI7BkB,yBAA0BhC,EAAQE,SAAS,CACzCC,MAAO,kBAAsC,CAC3CE,IAAK,WACLC,OAAQ,MACRkB,KAAM,CAAEV,QAHH,EAAGA,QAGSY,mBAHZ,EAAYA,sBAKnBE,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE1F,KAAMsF,IAASzE,GAAI6E,EAAIH,iBAO/BmB,EAOErC,EAPFqC,2BACAC,EAMEtC,EANFsC,uBACAC,EAKEvC,EALFuC,4BACAC,EAIExC,EAJFwC,yBACAC,EAGEzC,EAHFyC,yBACAC,EAEE1C,EAFF0C,oCACAC,EACE3C,EADF2C,8B,wGCJaC,IAhFI,SAAC,GAUb,IATLhH,EASI,EATJA,MASI,IARJiH,aAQI,MARI,GAQJ,EAPJC,EAOI,EAPJA,gBACAC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEAC,qBAAU,WACHP,GAEHI,EAASJ,KAGV,IAPC,MASsB1F,mBAAS,IAT/B,mBASGmD,EATH,KASU+C,EATV,KAWEC,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAASpD,EAAMmD,gBAC/CV,EAAaS,GAAMC,cAAcC,SAASpD,EAAMmD,kBAEnD3C,KAAI,SAAC0C,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GAC9B,OACE,cAAC,IAAUK,KAAX,CAEEC,OAAQH,IAAYd,EACpBkB,QAAM,EACNhG,QAAS,kBAAMoF,EAASK,IACxBrH,UAAU,mBALZ,SAOE,sBAAKA,UAAU,iCAAf,UACGyH,EACAZ,EAAU,8BAAMW,IAAiB,SAR/BA,MAcb,OACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAKvG,OAAN,CAAatB,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcR,MAAOA,EAA9C,SACE,cAAC,IAAKW,QAAN,CACEV,YAAY,cACZ8C,MAAO4B,EACP/B,SAAU,SAAC0F,GAAD,OAAOZ,EAASY,EAAErF,OAAOF,YAGvC,cAAC,IAAD,CACEZ,QAAQ,YACR3B,UAAU,OACV4B,QAAS,WACPkF,EAAS3C,GACT+C,EAAS,KALb,kBAUA,cAAC,IAAD,CAAQvF,QAAQ,YAAYC,QAASmF,EAArC,oBAIoB,IAArBI,EAAUY,OACT,cAAC,IAAD,CAAWpG,QAAQ,QAAnB,SAA4BwF,IAC1B,KACJ,cAAC,IAAKzF,OAAN,CAAa1B,UAAU,yBAAvB,yBACYmH,EAAUY,OADtB,YACgCvI,EAAMwI,sB,iCC9E5C,iGAwFeC,IA5EI,SAAC7I,GAAW,IAE3BI,EASEJ,EATFI,MAF0B,EAWxBJ,EARF8I,eAH0B,MAGhB,GAHgB,IAWxB9I,EAPF+I,cAJ0B,MAIjB,GAJiB,IAWxB/I,EANFgJ,aAL0B,MAKlB,GALkB,IAWxBhJ,EALF+H,iBAN0B,MAMd,GANc,EAO1BkB,EAIEjJ,EAJFiJ,cACA1B,EAGEvH,EAHFuH,YACAC,EAEExH,EAFFwH,aACA0B,EACElJ,EADFkJ,aAEIC,EAAWC,cACXC,EAAWtB,EAAUxC,KAAI,SAAC0C,GAAD,aAC7B,cAAC,IAAUK,KAAX,UACE,sBAAK1H,UAAU,iCAAf,oBACG4G,EAAaS,UADhB,2BACqCgB,EAAcL,cADnD,KAEE,cAAC,IAAD,CACEU,GAAIJ,EAAajB,GADnB,yBAEWgB,EAAcL,qBALRrB,EAAYU,OAUnC,OACE,eAAC,IAAD,CAAMQ,OAAO,YAAb,UACE,eAAC,IAAKvG,OAAN,CAAatB,UAAU,oDAAvB,UACE,qBAAIA,UAAU,wBAAd,UAAuCR,EAAvC,cACA,cAAC,IAAD,CAAgBmC,QAAQ,YAAYb,MAAM,UAA1C,SACGoH,EAAQvD,KAAI,gBAAGnF,EAAH,EAAGA,MAAOoC,EAAV,EAAUA,QAAV,OACX,cAAC,IAAS8F,KAAV,CAA2B9F,QAASA,EAApC,SACGpC,GADiBA,WAM1B,eAAC,IAAKiC,KAAN,WACG0G,EAAOxD,KAAI,gBAAGnF,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,QAAV,OACV,eAAC,IAAKhB,MAAN,CAAwB+B,GAAI6G,IAAK3I,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAY2I,QAAM,EAACC,GAAG,IAAtB,UACGrJ,EADH,OAGA,cAAC,IAAD,CAAKqJ,GAAG,IAAR,SACE,cAAC,IAAK1I,QAAN,CACE2I,WAAS,EACTC,UAAQ,EACR/I,UAAWe,EAAU,GAAK,aAC1BwB,MAAK,OAAExB,QAAF,IAAEA,IAAW,wBATPvB,MAclB4I,EAAMzD,KAAI,gBAAGnF,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,QAASiI,EAAnB,EAAmBA,YAAnB,OACT,eAAC,IAAKjJ,MAAN,CAAwB+B,GAAI6G,IAAK3I,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAY2I,QAAM,EAACC,GAAG,IAAtB,UACGrJ,EADH,OAGA,cAAC,IAAD,CAAKqJ,GAAG,IAAR,SACG9H,EACC,cAAC,IAAD,CAASf,UAAU,OAAO4B,QAAS,kBAAM2G,EAASS,IAAlD,SACGjI,IAGH,cAAC,IAAD,CAASf,UAAU,kBAAnB,iCAVWR,SAgBA,IAApBiJ,EAASV,OACR,cAAC,IAAD,CAAWpG,QAAQ,QAAnB,SAA4B8G,IAC1B,U,2JC+CKQ,IA5HE,SAAC,GAUX,IATLzJ,EASI,EATJA,MACAiH,EAQI,EARJA,MACAE,EAOI,EAPJA,YACAC,EAMI,EANJA,aACA0B,EAKI,EALJA,aACAY,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAnG,EACI,EADJA,kBACI,EACsBjC,mBAAS,IAD/B,mBACGmD,EADH,KACU+C,EADV,OAEoClG,mBAAS,IAF7C,mBAEGqI,EAFH,KAEiBC,EAFjB,OAG8CtI,oBAAS,GAHvD,mBAGGuI,EAHH,KAGsBC,EAHtB,OAI8CxI,oBAAS,GAJvD,mBAIGyI,EAJH,KAIsBC,EAJtB,OAKoC1I,qBALpC,mBAKG2I,EALH,KAKiBC,EALjB,KAMEC,EAAWpD,EAAM9B,KAAI,SAAC0C,GAAD,OAAUV,EAAYU,MAE3CF,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAASpD,EAAMmD,gBAC/CV,EAAaS,GAAMC,cAAcC,SAASpD,EAAMmD,kBAEnD3C,KAAI,SAAC0C,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GACxByC,EAAWtC,IAAYb,EAAY0C,GACzC,OACE,cAAC,IAAU3B,KAAX,CAEEE,QAAM,EACN5H,UAAU,mBACV4B,QAAS,kBAAM0H,EAAgBjC,IAC/BM,OAAQmC,EALV,SAOE,sBAAK9J,UAAU,iCAAf,UACGyH,EACD,cAAC,IAAD,CACEsC,MACED,EACI,CACEE,MAAO,QAET,GAENtB,GAAIJ,EAAajB,GARnB,yBASW7H,EAAMwI,qBAjBdR,MAuBb,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAKvG,OAAN,CAAatB,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcR,MAAOA,EAA9C,SACE,cAAC,IAAKW,QAAN,CACEV,YAAY,cACZ8C,MAAO4B,EACP/B,SAAU,SAAC0F,GAAD,OAAOZ,EAASY,EAAErF,OAAOF,YAGtC2G,EACC,qCACE,cAAC,IAAD,CACEvH,QAAQ,YACR3B,UAAU,OACV4B,QAAS,kBAAMgI,GAAgB,IAHjC,iBAOA,cAAC,IAAD,CACEjI,QAAQ,YACRC,QAAS,WACH+E,EAAY0C,GACdK,GAAqB,GAErBF,GAAqB,IAN3B,uBAaA,QAEgB,IAArBrC,EAAUY,OACT,cAAC,IAAD,CAAWpG,QAAQ,QAAnB,SAA4BwF,IAC1B,KACJ,cAAC,IAAKzF,OAAN,CAAa1B,UAAU,yBAAvB,yBACYmH,EAAUY,OADtB,YACgCvI,EAAMwI,oBAGxC,cAAC,IAAD,CACElH,MAAM,UACNC,QAAO,4BAAuBvB,EAAMwI,cAA7B,mBACPtH,KAAM6I,EACN5I,YAAa,kBAAM6I,GAAqB,MAE1C,cAAC,IAAD,CACE1I,MAAK,iBAAYtB,EAAMwI,cAAlB,KACLjH,QAAQ,sDACRL,KAAM+I,EACN9I,YAAa,kBAAM+I,GAAqB,IACxC9I,aAAY,sBAAE,sBAAAQ,EAAA,sEACN+H,EAAaE,GADP,6CAIhB,cAAC,IAAD,CACEvI,MAAK,kBAAatB,EAAMwI,eACxBtH,KAAMiJ,EACNhJ,YAAa,kBAAMiJ,GAAgB,IACnChJ,aAAcwI,EACdnG,kBAAiB,uCAAE,WAAOkB,GAAP,eAAA/C,EAAA,sEACM6B,EAAkBkB,GADxB,cACXsE,EADW,yBAEVA,EAASrB,QAAO,SAACC,GAAD,OAAWwC,EAAStC,SAASF,EAAK9E,WAFxC,2CAAF,6D,mDC3GV0H,MAZf,SAAqB1H,GAGnB,IAAM2H,EAAMC,mBAMZ,OAJAlD,qBAAU,WACRiD,EAAIE,QAAU7H,IACb,CAACA,IAEG2H,EAAIE,SCqDEC,IA5DM,SAAC,GAA2C,IAAD,IAAxCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAChChC,EAAWC,cACXgC,EAAQC,YAAS,sBACjBC,EAAW,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAOjG,cAAV,aAAG,EAAe1B,OAC7B8H,EAAa,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAOjG,cAAV,aAAG,EAAeqG,SAC/BC,EAAiBZ,EAAYK,GAEnCrD,qBAAU,WACJqD,EACEI,EACEA,IAAgBJ,IACdO,EACEH,IAAgBG,EAElBtC,EAAS+B,EAAeQ,YAGxBzH,QAAQC,IAAI,SAAU,CACpBoH,cACAG,iBACAP,mBAKJC,EAAkBG,IAOtBnC,EAAS+B,EAAeQ,YAGtBD,EACEA,IAAmBH,EAErBnC,EAAS,IAAD,OAAKoC,IAGbtH,QAAQC,IAAI,SAAU,CACpBoH,cACAG,iBACAP,mBAIAI,GAEFH,EAAkBG,KAOvB,CAACJ,EAAgBI,M,oICiBPK,IAzEQ,SAAC,GAOjB,IANLjK,EAMI,EANJA,MACAJ,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aAGI,IAFJmC,qBAEI,MAFY,GAEZ,MADJiI,gBACI,SACEtI,EAAmBC,MAAaC,MAAM,CAC1CqI,YAAaD,EACTrI,MAAaG,SAAS,2BACtBH,MAAaG,SAAS,6BAGtBI,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAhC,EAAA,+EAEPR,EAAauC,EAAO8H,aAFb,OAGbtK,IAHa,+CAKb0C,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAO5C,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEiC,cAAe,CACbkI,YAAalI,GAEfG,SAAUA,EACVR,iBAAkBA,EALpB,SAOG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAY3C,aACtB6C,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMjC,KAAP,UACE,cAAC,IAAD,CACE5B,KAAK,cACL8D,UAAWxE,IACXI,KAAMyL,EAAW,SAAW,WAIhC,eAAC,IAAMtJ,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUpC,KAAK,SAA/B,UACGgE,EAAYtC,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,uNCnDRU,EAAmBC,MAAaC,MAAM,CAC1C6C,YAAa9C,MAAaG,SAAS,2BACnC4C,mBAAoB/C,MAAaG,SAAS,6BAGtCC,EAAgB,CACpB0C,YAAa,GACbC,mBAAoB,IAwEPwF,EArES,SAAC9L,GAAW,IAC1BsB,EAAsBtB,EAAtBsB,KAAMC,EAAgBvB,EAAhBuB,YADmB,EAEZyF,cAAd+E,EAF0B,oBAG3BC,EAAWC,cAEXzK,EAAY,uCAAG,WAAOuC,EAAQC,GAAf,iBAAAhC,EAAA,+EAES+J,EAAWhI,GAAQmI,SAF5B,gBAETxG,EAFS,EAETA,QACRnE,IACAyK,EAASG,YAAqBzG,IAJb,gDAMjBzB,QAAQC,IAAR,MANiB,yDAAH,wDAUlB,OACE,eAACkI,EAAA,EAAD,CAAO9K,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC6K,EAAA,EAAMlK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACiK,EAAA,EAAMhK,MAAP,+BAEF,cAAC,IAAD,CACEuB,cAAeA,EACfG,SAAUtC,EACV8B,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAACkI,EAAA,EAAD,CACEjI,YAAU,EACVN,SAAUK,EAAY3C,aACtB6C,QAASF,EAAYG,YAHvB,UAKE,eAAC8H,EAAA,EAAM/J,KAAP,WACE,cAAC,IAAD,CACE5B,KAAK,cACL8D,UAAWxE,IACXK,MAAM,mBACNC,YAAY,0BAEd,cAAC,IAAD,CACEI,KAAK,qBACL8D,UAAWxE,IACXK,MAAM,sBACNC,YAAY,sDAIhB,eAAC+L,EAAA,EAAM9J,OAAP,WACE,cAACgK,EAAA,EAAD,CAAQ/J,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC+K,EAAA,EAAD,CAAQ/J,QAAQ,UAAUpC,KAAK,SAA/B,UACGgE,EAAYtC,cACX,cAAC0K,EAAA,EAAD,CACE9J,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,yBC5BC4J,EA7BW,WACxB,IAAMR,EAAWC,cADa,EAELpF,cAFK,mBAEvB4F,EAFuB,KAEd1H,EAFc,KAGtB2H,EAAoB3H,EAApB2H,KAAMC,EAAc5H,EAAd4H,UACRC,EAAoBC,YAAYC,KAJR,EAKElL,oBAAS,GALX,mBAKvBmL,EALuB,KAKbC,EALa,KAW9B,OAJAnF,qBAAU,WACRmE,EAASiB,YAAaN,MACrB,CAACA,EAAWX,IAGb,eAAC,WAAD,WACE,cAAC5E,EAAA,EAAD,CACEhH,MAAM,UACNiH,MAAOqF,EACPpF,gBAAiBsF,EACjBrF,YAAa,SAAC/B,GAAD,OAAaA,EAAQE,SAClC8B,aAAc,SAAChC,GAAD,OAAaA,EAAQkB,WACnCe,SAAS,EACTC,SAAU,SAAC3C,GAAD,OAAW0H,EAAQ1H,IAC7B4C,MAAO,kBAAMqF,GAAY,IACzBpF,SAAU,SAACpC,GAAD,OAAawG,EAASG,YAAqB3G,EAAQE,aAE/D,cAAC,EAAD,CAAiBpE,KAAMyL,EAAUxL,YAAa,kBAAMyL,GAAY,U,2BC6EvDE,EAnGW,SAAC,GAA2B,IAAzBN,EAAwB,EAAxBA,kBAAwB,EAEjD9F,YAAuB8F,GADXO,EADqC,EAC3CT,KAAmBU,EADwB,EACxBA,WADwB,EAIpBnG,cAAxBoG,EAJ4C,sBAK3BlG,cAAjBmG,EAL4C,sBAMhBpG,cAA5BqG,EAN4C,sBAQD3L,oBAAS,GARR,mBAQ5CyI,EAR4C,KAQzBC,EARyB,OASL1I,oBAAS,GATJ,mBAS5C4L,EAT4C,KAS3BC,EAT2B,OAWjD7L,oBAAS,GAXwC,mBAU5C8L,EAV4C,KAUhBC,EAVgB,KAa7C3B,EAAWC,cAUjB,OARApE,qBAAU,WAENmE,EADEoB,EACOH,aAAa,GAEbA,aAAa,MAEvB,CAACG,EAAYpB,IAEZoB,EACK,6BAIP,eAAC,WAAD,WACE,cAACvE,EAAA,EAAD,CACEzI,MAAM,UACN2I,OAAQ,CACN,CAAE3I,MAAO,aAAcuB,QAASwL,EAAY9G,aAC5C,CAAEjG,MAAO,WAAYuB,QAASwL,EAAYzH,SAC1C,CAAEtF,MAAO,cAAeuB,QAASwL,EAAY7G,qBAE/CwC,QAAS,CACP,CACE1I,MAAO,iBACPoC,QAAS,WACPiL,GAAmB,KAGvB,CACErN,MAAO,qBACPoC,QAAS,WACPmL,GAA8B,KAGlC,CACEvN,MAAO,iBACPoC,QAAS,WACP8H,GAAqB,QAK7B,cAACqB,EAAA,EAAD,CACEjK,MAAM,sBACNJ,KAAMkM,EACNjM,YAAa,WACXkM,GAAmB,IAErBjM,aAAY,uCAAE,WAAOoM,GAAP,SAAA5L,EAAA,sEACNsL,EAAc,CAClB5H,QAASyH,EAAYzH,QACrBgB,UAAWkH,IAHD,2CAAF,sDAMZjK,cAAewJ,EAAY9G,cAE7B,cAACsF,EAAA,EAAD,CACEjK,MAAM,6BACNJ,KAAMoM,EACNnM,YAAa,WACXoM,GAA8B,IAEhCnM,aAAY,uCAAE,WAAOqM,GAAP,SAAA7L,EAAA,sEACNuL,EAAyB,CAC7B7H,QAASyH,EAAYzH,QACrBY,mBAAoBuH,IAHV,2CAAF,sDAMZlK,cAAewJ,EAAY7G,qBAE7B,cAACjF,EAAA,EAAD,CACEK,MAAM,kBACNC,QAAQ,oEACRL,KAAM+I,EACN9I,YAAa,kBAAM+I,GAAqB,IACxC9I,aAAY,sBAAE,sBAAAQ,EAAA,6DACZgK,EAASG,YAAqB,OADlB,SAENkB,EAAqB,CAAE3H,QAASyH,EAAYzH,UAAWwG,SAFjD,iD,SCpEP4B,EA7BS,SAAC,GAA2B,IAAzBlB,EAAwB,EAAxBA,kBAAwB,EAE/C7F,YAA4B6F,GADhBmB,EADmC,EACzCrB,KAAiBU,EADwB,EACxBA,WAEnBpB,EAAWC,cAUjB,OARApE,qBAAU,WAENmE,EADEoB,EACOH,aAAa,GAEbA,aAAa,MAEvB,CAACG,EAAYpB,IAEZoB,EACK,6BAIP,cAACvD,EAAA,EAAD,CACEzJ,MAAM,WACNiH,MAAO0G,EACPxG,YAAa,SAACzB,GAAD,OAAcA,EAASE,QACpCwB,aAAc,SAAC1B,GAAD,OAAcA,EAASkI,UACrC9E,aAAc,SAACpD,GAAD,0BAA2BA,EAASE,SAClD8D,aAAa,KCgBJmE,UAnCK,WAClB,IAAMjC,EAAWC,cACXW,EAAoBC,YAAYC,KAStC,OAPA7B,YAAa,CACXC,eAAgB0B,EAChBzB,kBAAmB,SAAC+C,GAClBlC,EAASG,YAAqB+B,OAKhC,eAAC3E,EAAA,EAAD,CAAK3I,UAAU,iCAAf,UACE,cAACuN,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,MAEDxB,EACC,qCACE,cAACuB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,CAAmBxB,kBAAmBA,MAExC,cAACuB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,CAAiBxB,kBAAmBA,SAIxC,qCACE,cAACuB,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKC,GAAG","file":"static/js/7.4c864b0c.chunk.js","sourcesContent":["import Form from 'react-bootstrap/Form'\r\nimport { ErrorMessage } from 'formik'\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props\r\n  const { errors, touched } = form\r\n  const { name } = field\r\n  const showError = errors[name] && touched[name]\r\n\r\n  return (\r\n    <Form.Group className=\"mb-2\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <Form.Control\r\n        id={name}\r\n        {...field}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        disabled={disabled}\r\n        isInvalid={showError}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n","import { Modal, Button, Spinner } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nconst ConfirmationModal = ({\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleError,\r\n  title,\r\n  content,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n  const handleClick = async () => {\r\n    if (handleSubmit) {\r\n      setIsSubmitting(true)\r\n      try {\r\n        await handleSubmit()\r\n      } catch (e) {\r\n        if (handleError) {\r\n          handleError(e)\r\n        }\r\n      }\r\n    }\r\n    // handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClick}>\r\n          {isSubmitting && (\r\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\r\n          )}\r\n          OK\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal\r\n","import { ErrorMessage } from 'formik'\r\nimport { Form } from 'react-bootstrap'\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nfunction AsyncSelectField(props) {\r\n  const { field, form, label, placeholder, disabled, loadOptions } = props\r\n  const { name, onBlur } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    }\r\n    field.onChange(changeEvent)\r\n  }\r\n\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <AsyncSelect\r\n        id={name}\r\n        onChange={handleSelectedOptionChange}\r\n        onBlur={onBlur}\r\n        placeholder={placeholder}\r\n        loadOptions={loadOptions}\r\n        disabled={disabled}\r\n        className={showError ? 'is-invalid' : ''}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AsyncSelectField\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  itemId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  itemId: '',\r\n}\r\n\r\nconst SelectItemModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleSearchItems,\r\n}) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.itemId)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('itemId', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"itemId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={handleSearchItems}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SelectItemModal\r\n","import { FACULTY, LECTURER, LECTURER_LIST } from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchFaculties: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/group',\r\n        method: 'GET',\r\n        params: { query: queryStr || '', groupType: 'FACULTY' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((faculty) => ({ type: FACULTY, id: faculty.groupId })),\r\n    }),\r\n\r\n    getFacultyInfo: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/faculty/info',\r\n        method: 'GET',\r\n        params: { groupId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n      ],\r\n    }),\r\n\r\n    getFacultyLecturers: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/group/user',\r\n        method: 'GET',\r\n        params: { groupId, role: 'LECTURER' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((lecturer) => ({ type: LECTURER, id: lecturer.userId }))\r\n          .concat([{ type: LECTURER_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewFaculty: builder.mutation({\r\n      query: ({ facultyName, facultyDescription }) => ({\r\n        url: '/faculty',\r\n        method: 'POST',\r\n        body: { facultyName, facultyDescription },\r\n      }),\r\n    }),\r\n\r\n    removeFaculty: builder.mutation({\r\n      query: ({ groupId }) => ({\r\n        url: '/group',\r\n        method: 'DELETE',\r\n        params: { groupId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: FACULTY, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeFacultyName: builder.mutation({\r\n      query: ({ groupId, groupName }) => ({\r\n        url: '/group',\r\n        method: 'PUT',\r\n        body: { groupId, groupName },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: FACULTY, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeFacultyDescription: builder.mutation({\r\n      query: ({ groupId, facultyDescription }) => ({\r\n        url: '/faculty',\r\n        method: 'PUT',\r\n        body: { groupId, facultyDescription },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: FACULTY, id: arg.groupId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchFacultiesMutation,\r\n  useGetFacultyInfoQuery,\r\n  useGetFacultyLecturersQuery,\r\n  useAddNewFacultyMutation,\r\n  useRemoveFacultyMutation,\r\n  useChangeFacultyDescriptionMutation,\r\n  useChangeFacultyNameMutation,\r\n} = extendedApi\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\n\r\nconst SearchCard = ({\r\n  label,\r\n  items = [],\r\n  selectedItemKey,\r\n  keySelector,\r\n  nameSelector,\r\n  showKey,\r\n  onSearch,\r\n  onAdd,\r\n  onSelect,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!selectedItemKey) {\r\n      // On mount, if no item selected, get something\r\n      onSearch(selectedItemKey)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [query, setQuery] = useState('')\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          active={itemKey === selectedItemKey}\r\n          action\r\n          onClick={() => onSelect(item)}\r\n          className=\"user-select-none\"\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            {showKey ? <div>{itemKey}</div> : null}\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between\">\r\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n          <Form.Control\r\n            placeholder=\"placeholder\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n        </FloatingLabel>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          onClick={() => {\r\n            onSearch(query)\r\n            setQuery('')\r\n          }}\r\n        >\r\n          Find\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={onAdd}>\r\n          Add\r\n        </Button>\r\n      </Card.Header>\r\n      {listItems.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n      ) : null}\r\n      <Card.Footer className=\"text-muted text-center\">\r\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SearchCard\r\n","import {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  NavLink,\r\n  ListGroup,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from 'react-bootstrap'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst DetailCard = (props) => {\r\n  const {\r\n    label,\r\n    buttons = [],\r\n    fields = [],\r\n    links = [],\r\n    listItems = [],\r\n    listItemLabel,\r\n    keySelector,\r\n    nameSelector,\r\n    linkSelector,\r\n  } = props\r\n  const navigate = useNavigate()\r\n  const itemList = listItems.map((item) => (\r\n    <ListGroup.Item key={keySelector(item)}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\r\n        <Link\r\n          to={linkSelector(item)}\r\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\r\n      </div>\r\n    </ListGroup.Item>\r\n  ))\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\r\n        <DropdownButton variant=\"secondary\" title=\"Options\">\r\n          {buttons.map(({ label, onClick }) => (\r\n            <Dropdown.Item key={label} onClick={onClick}>\r\n              {label}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {fields.map(({ label, content }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                className={content ? '' : 'text-muted'}\r\n                value={content ?? '[not available]'}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n        {links.map(({ label, content, destination }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              {content ? (\r\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\r\n                  {content}\r\n                </NavLink>\r\n              ) : (\r\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\r\n              )}\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n      </Card.Body>\r\n      {itemList.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DetailCard\r\n","import { Fragment, useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../modals/ConfirmationModal'\r\nimport SelectItemModal from '../modals/SelectItemModal'\r\n\r\nconst ListCard = ({\r\n  label,\r\n  items,\r\n  keySelector,\r\n  nameSelector,\r\n  linkSelector,\r\n  showButtons,\r\n  handleRemove,\r\n  handleAdd,\r\n  handleSearchItems,\r\n}) => {\r\n  const [query, setQuery] = useState('')\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showAddModal, setShowAddModal] = useState()\r\n  const itemKeys = items.map((item) => keySelector(item))\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      const isActive = itemKey === keySelector(selectedItem)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          action\r\n          className=\"user-select-none\"\r\n          onClick={() => setSelectedItem(item)}\r\n          active={isActive}\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            <Link\r\n              style={\r\n                isActive\r\n                  ? {\r\n                      color: '#fff',\r\n                    }\r\n                  : {}\r\n              }\r\n              to={linkSelector(item)}\r\n            >{`Go to ${label.toLowerCase()}`}</Link>\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card border=\"secondary\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n            <Form.Control\r\n              placeholder=\"placeholder\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n          </FloatingLabel>\r\n          {showButtons ? (\r\n            <>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"mx-1\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  if (keySelector(selectedItem)) {\r\n                    setShowRemoveWarning(true)\r\n                  } else {\r\n                    setShowSelectWarning(true)\r\n                  }\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </Card.Header>\r\n        {listItems.length !== 0 ? (\r\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n        ) : null}\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n        </Card.Footer>\r\n      </Card>\r\n      <ConfirmationModal\r\n        title=\"Warning\"\r\n        content={`Please select one ${label.toLowerCase()} from the list.`}\r\n        show={showSelectWarning}\r\n        handleClose={() => setShowSelectWarning(false)}\r\n      />\r\n      <ConfirmationModal\r\n        title={`Remove ${label.toLowerCase()}?`}\r\n        content=\"This action cannot be undone. List will be updated.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          await handleRemove(selectedItem)\r\n        }}\r\n      />\r\n      <SelectItemModal\r\n        title={`Add new ${label.toLowerCase()}`}\r\n        show={showAddModal}\r\n        handleClose={() => setShowAddModal(false)}\r\n        handleSubmit={handleAdd}\r\n        handleSearchItems={async (query) => {\r\n          const itemList = await handleSearchItems(query)\r\n          return itemList.filter((item) => !itemKeys.includes(item.value))\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListCard\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef()\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value]) // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current\r\n}\r\n\r\nexport default usePrevious\r\n","import { useEffect } from 'react'\r\nimport { useMatch, useNavigate } from 'react-router'\r\nimport usePrevious from './usePrevious'\r\n\r\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\r\n  const navigate = useNavigate()\r\n  const match = useMatch('/:resource/:itemId') // Can be customized\r\n  const itemIdParam = match?.params?.itemId\r\n  const resourceParam = match?.params?.resource\r\n  const prevSelectedId = usePrevious(selectedItemId)\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      if (itemIdParam) {\r\n        if (itemIdParam !== selectedItemId) {\r\n          if (prevSelectedId) {\r\n            if (itemIdParam === prevSelectedId) {\r\n              // Update url based on selected item\r\n              navigate(selectedItemId.toString())\r\n            } else {\r\n              // Weird?\r\n              console.log('Weird?', {\r\n                itemIdParam,\r\n                prevSelectedId,\r\n                selectedItemId,\r\n              })\r\n            }\r\n          } else {\r\n            // Link from another resource\r\n            setSelectedItemId(itemIdParam)\r\n          }\r\n        } else {\r\n          // In sync, nothing changes, good!\r\n        }\r\n      } else {\r\n        // First select\r\n        navigate(selectedItemId.toString())\r\n      }\r\n    } else {\r\n      if (prevSelectedId) {\r\n        if (prevSelectedId === itemIdParam) {\r\n          // Current item deleted, selected ID is null\r\n          navigate(`/${resourceParam}`) // Clear param\r\n        } else {\r\n          // Weird?\r\n          console.log('Weird?', {\r\n            itemIdParam,\r\n            prevSelectedId,\r\n            selectedItemId,\r\n          })\r\n        }\r\n      } else {\r\n        if (itemIdParam) {\r\n          // Fresh load selected item from entered url\r\n          setSelectedItemId(itemIdParam)\r\n        } else {\r\n          // Fresh load with no param\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedItemId, itemIdParam])\r\n}\r\n\r\nexport default useItemParam\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../custom-fields/InputField'\r\n\r\nconst EditFieldModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  initialValues = '',\r\n  isNumber = false,\r\n}) => {\r\n  const validationSchema = Yup.object().shape({\r\n    singleField: isNumber\r\n      ? Yup.number().required('This field is required.')\r\n      : Yup.string().required('This field is required.'),\r\n  })\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.singleField)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('singleField', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          singleField: initialValues,\r\n        }}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"singleField\"\r\n                component={InputField}\r\n                type={isNumber ? 'number' : 'text'}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditFieldModal\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../../../components/custom-fields/InputField'\r\nimport { useAddNewFacultyMutation } from '../../../../app/api/group/facultySlice'\r\nimport { setSelectedFacultyId } from '../../../../app/pageSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  facultyName: Yup.string().required('This field is required.'),\r\n  facultyDescription: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  facultyName: '',\r\n  facultyDescription: '',\r\n}\r\n\r\nconst FacultyAddModal = (props) => {\r\n  const { show, handleClose } = props\r\n  const [triggerAdd] = useAddNewFacultyMutation()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = async (values, actions) => {\r\n    try {\r\n      const { groupId } = await triggerAdd(values).unwrap()\r\n      handleClose()\r\n      dispatch(setSelectedFacultyId(groupId))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new course</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"facultyName\"\r\n                component={InputField}\r\n                label=\"New faculty name\"\r\n                placeholder=\"Intro to computing...\"\r\n              />\r\n              <FastField\r\n                name=\"facultyDescription\"\r\n                component={InputField}\r\n                label=\"Faculty description\"\r\n                placeholder=\"Located at room A1.111, established in 2007...\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default FacultyAddModal\r\n","import SearchCard from '../../../../components/SearchCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  selectedFacultyIdSelector,\r\n  setIsLoading,\r\n  setSelectedFacultyId,\r\n} from '../../../../app/pageSlice'\r\nimport { useSearchFacultiesMutation } from '../../../../app/api/group/facultySlice'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport FacultyAddModal from './FacultyAddModal'\r\n\r\nconst FacultySearchCard = () => {\r\n  const dispatch = useDispatch()\r\n  const [trigger, query] = useSearchFacultiesMutation()\r\n  const { data, isLoading } = query\r\n  const selectedFacultyId = useSelector(selectedFacultyIdSelector)\r\n  const [addModal, setAddModal] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(isLoading))\r\n  }, [isLoading, dispatch])\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchCard\r\n        label=\"Faculty\"\r\n        items={data}\r\n        selectedItemKey={selectedFacultyId}\r\n        keySelector={(faculty) => faculty.groupId}\r\n        nameSelector={(faculty) => faculty.groupName}\r\n        showKey={false}\r\n        onSearch={(query) => trigger(query)}\r\n        onAdd={() => setAddModal(true)}\r\n        onSelect={(faculty) => dispatch(setSelectedFacultyId(faculty.groupId))}\r\n      />\r\n      <FacultyAddModal show={addModal} handleClose={() => setAddModal(false)} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FacultySearchCard\r\n","import { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  useChangeFacultyDescriptionMutation,\r\n  useChangeFacultyNameMutation,\r\n  useGetFacultyInfoQuery,\r\n  useRemoveFacultyMutation,\r\n} from '../../../../app/api/group/facultySlice'\r\nimport DetailCard from '../../../../components/DetailCard'\r\nimport { setIsLoading, setSelectedFacultyId } from '../../../../app/pageSlice'\r\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\r\nimport EditFieldModal from '../../../../components/modals/EditFieldModal'\r\n\r\nconst FacultyDetailCard = ({ selectedFacultyId }) => {\r\n  const { data: facultyInfo, isFetching } =\r\n    useGetFacultyInfoQuery(selectedFacultyId)\r\n\r\n  const [triggerRemoveFaculty] = useRemoveFacultyMutation()\r\n  const [triggerRename] = useChangeFacultyNameMutation()\r\n  const [triggerChangeDescription] = useChangeFacultyDescriptionMutation()\r\n\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showRenameModal, setShowRenameModal] = useState(false)\r\n  const [showChangeDescriptionModal, setShowChangeDescriptionModal] =\r\n    useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (isFetching) {\r\n      dispatch(setIsLoading(true))\r\n    } else {\r\n      dispatch(setIsLoading(false))\r\n    }\r\n  }, [isFetching, dispatch])\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DetailCard\r\n        label=\"Faculty\"\r\n        fields={[\r\n          { label: 'Group name', content: facultyInfo.facultyName },\r\n          { label: 'Group ID', content: facultyInfo.groupId },\r\n          { label: 'Description', content: facultyInfo.facultyDescription },\r\n        ]}\r\n        buttons={[\r\n          {\r\n            label: 'Rename faculty',\r\n            onClick: () => {\r\n              setShowRenameModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change description',\r\n            onClick: () => {\r\n              setShowChangeDescriptionModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Remove faculty',\r\n            onClick: () => {\r\n              setShowRemoveWarning(true)\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change faculty name\"\r\n        show={showRenameModal}\r\n        handleClose={() => {\r\n          setShowRenameModal(false)\r\n        }}\r\n        handleSubmit={async (newGroupName) => {\r\n          await triggerRename({\r\n            groupId: facultyInfo.groupId,\r\n            groupName: newGroupName,\r\n          })\r\n        }}\r\n        initialValues={facultyInfo.facultyName}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change faculty description\"\r\n        show={showChangeDescriptionModal}\r\n        handleClose={() => {\r\n          setShowChangeDescriptionModal(false)\r\n        }}\r\n        handleSubmit={async (newDescription) => {\r\n          await triggerChangeDescription({\r\n            groupId: facultyInfo.groupId,\r\n            facultyDescription: newDescription,\r\n          })\r\n        }}\r\n        initialValues={facultyInfo.facultyDescription}\r\n      />\r\n      <ConfirmationModal\r\n        title=\"Remove faculty?\"\r\n        content=\"All students and lecturers will be removed from this faculty too.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          dispatch(setSelectedFacultyId(null))\r\n          await triggerRemoveFaculty({ groupId: facultyInfo.groupId }).unwrap()\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FacultyDetailCard\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useGetFacultyLecturersQuery } from '../../../../app/api/group/facultySlice'\r\nimport { setIsLoading } from '../../../../app/pageSlice'\r\nimport ListCard from '../../../../components/ListCard'\r\n\r\nconst FacultyListCard = ({ selectedFacultyId }) => {\r\n  const { data: lecturers, isFetching } =\r\n    useGetFacultyLecturersQuery(selectedFacultyId)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (isFetching) {\r\n      dispatch(setIsLoading(true))\r\n    } else {\r\n      dispatch(setIsLoading(false))\r\n    }\r\n  }, [isFetching, dispatch])\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <ListCard\r\n      label=\"Lecturer\"\r\n      items={lecturers}\r\n      keySelector={(lecturer) => lecturer.userId}\r\n      nameSelector={(lecturer) => lecturer.userName}\r\n      linkSelector={(lecturer) => `/lecturer/${lecturer.userId}`}\r\n      showButtons={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default FacultyListCard\r\n","import useItemParam from '../../hooks/useItemParam'\r\nimport {\r\n  selectedFacultyIdSelector,\r\n  setSelectedFacultyId,\r\n} from '../../app/pageSlice'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport FacultySearchCard from './components/FacultySearchCard'\r\nimport FacultyDetailCard from './components/FacultyDetailCard'\r\nimport FacultyListCard from './components/FacultyListCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst FacultyPage = () => {\r\n  const dispatch = useDispatch()\r\n  const selectedFacultyId = useSelector(selectedFacultyIdSelector)\r\n\r\n  useItemParam({\r\n    selectedItemId: selectedFacultyId,\r\n    setSelectedItemId: (facultyId) => {\r\n      dispatch(setSelectedFacultyId(facultyId))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center my-3\">\r\n      <Col md=\"3\">\r\n        <FacultySearchCard />\r\n      </Col>\r\n      {selectedFacultyId ? (\r\n        <>\r\n          <Col md=\"4\">\r\n            <FacultyDetailCard selectedFacultyId={selectedFacultyId} />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FacultyListCard selectedFacultyId={selectedFacultyId} />\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Col md=\"4\"></Col>\r\n          <Col md=\"4\"></Col>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default FacultyPage\r\n"],"sourceRoot":""}