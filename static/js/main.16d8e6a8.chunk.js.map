{"version":3,"sources":["components/NavigationBar/index.jsx","App.js","app/store.js","index.js","app/api/tagConstants.js","config.js","app/authSlice.js","app/pageSlice.js","app/api/index.js"],"names":["NavigationBar","Navbar","bg","variant","Container","Brand","as","NavLink","to","Nav","className","Link","StudentPage","React","lazy","LecturerPage","MentorPage","CoursePage","FacultyPage","NotFoundPage","App","dispatch","useDispatch","isAuthenticated","useSelector","selectJWT","isLoading","selectIsLoading","useEffect","adminLogin","ProgressBar","animated","now","path","element","replace","rootReducer","combineReducers","apiSlice","reducerPath","reducer","authSlice","name","pageSlice","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","setupListeners","config","checkEnvVariables","Router","isProduction","HashRouter","BrowserRouter","ReactDOM","render","StrictMode","loading","basename","fallback","document","getElementById","COURSE","FACULTY","MENTORGROUP","LECTURER","STUDENT","MENTORGROUP_LIST","STUDENT_LIST","LECTURER_LIST","COURSE_LIST","dotenv","ENV_VARS","apiUrl","process","adminUserId","adminPassword","BASENAME","forEach","console","warn","createAsyncThunk","a","userId","password","thunkAPI","fetch","method","headers","body","JSON","stringify","response","ok","rejectWithValue","json","createSlice","initialState","user","id","psid","role","jwt","reducers","extraReducers","builder","addCase","fulfilled","state","payload","accessToken","selectedStudentId","undefined","selectedLecturerId","selectedMentorId","selectedCourseId","selectedFacultyId","setIsLoading","action","setSelectedStudentId","setSelectedLecturerId","setSelectedMentorId","setSelectedCourseId","setSelectedFacultyId","selectedStudentIdSelector","selectedLecturerIdSelector","selectedMentorIdSelector","selectedCourseIdSelector","selectedFacultyIdSelector","actions","authorizedBaseQuery","fetchBaseQuery","baseUrl","prepareHeaders","getState","token","set","baseQueryWithReauth","args","api","extraOptions","result","error","status","createApi","baseQuery","refetchOnReconnect","tagTypes","endpoints"],"mappings":"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","file":"static/js/main.16d8e6a8.chunk.js","sourcesContent":["import { Navbar, Container, Nav } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst NavigationBar = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand as={NavLink} to=\"/\">\r\n          ADMIN WEB\r\n        </Navbar.Brand>\r\n        <Nav variant=\"pills\" className=\"me-auto\">\r\n          <Nav.Link as={NavLink} to=\"/student\">\r\n            Student\r\n          </Nav.Link>\r\n          <Nav.Link as={NavLink} to=\"/lecturer\">\r\n            Lecturer\r\n          </Nav.Link>\r\n          <Nav.Link as={NavLink} to=\"/mentor\">\r\n            Mentor\r\n          </Nav.Link>\r\n          <Nav.Link as={NavLink} to=\"/course\">\r\n            Course\r\n          </Nav.Link>\r\n          <Nav.Link as={NavLink} to=\"/faculty\">\r\n            Faculty\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar\r\n","import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { adminLogin, selectJWT } from './app/authSlice'\nimport { Routes, Route, Navigate } from 'react-router-dom'\n\nimport NavigationBar from './components/NavigationBar'\nimport { ProgressBar } from 'react-bootstrap'\nimport { selectIsLoading } from './app/pageSlice'\n\nimport './App.css'\n\nconst StudentPage = React.lazy(() => import('./pages/Student'))\nconst LecturerPage = React.lazy(() => import('./pages/Lecturer'))\nconst MentorPage = React.lazy(() => import('./pages/Mentor'))\nconst CoursePage = React.lazy(() => import('./pages/Course'))\nconst FacultyPage = React.lazy(() => import('./pages/Faculty'))\nconst NotFoundPage = React.lazy(() => import('./pages/NotFound'))\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isAuthenticated = !!useSelector(selectJWT)\n  const isLoading = useSelector(selectIsLoading)\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      dispatch(adminLogin())\n    }\n  }, [isAuthenticated, dispatch])\n\n  if (!isAuthenticated) {\n    return <h3>Logging in as admin...</h3>\n  }\n\n  return (\n    <Fragment>\n      <NavigationBar />\n      <ProgressBar variant=\"secondary\" animated now={isLoading ? 100 : 0} />\n      <Routes>\n        <Route path=\"/\" element={<Navigate replace to=\"/student\" />} />\n        <Route path=\"student/*\" element={<StudentPage />} />\n        <Route path=\"lecturer/*\" element={<LecturerPage />} />\n        <Route path=\"mentor/*\" element={<MentorPage />} />\n        <Route path=\"course/*\" element={<CoursePage />} />\n        <Route path=\"faculty/*\" element={<FacultyPage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </Fragment>\n  )\n}\n\nexport default App\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport { apiSlice } from './api'\nimport { authSlice } from './authSlice'\nimport { pageSlice } from './pageSlice'\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\n\nconst rootReducer = combineReducers({\n  [apiSlice.reducerPath]: apiSlice.reducer,\n  [authSlice.name]: authSlice.reducer,\n  [pageSlice.name]: pageSlice.reducer,\n})\n\n// Configure redux-persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [apiSlice.reducerPath, pageSlice.name],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(apiSlice.middleware),\n})\n\nexport const persistor = persistStore(store)\n\n// enable listener behavior for the store\nsetupListeners(store.dispatch)\n","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { persistor, store } from './app/store'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport config from './config'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// Check if all environment variables are set\nconfig.checkEnvVariables()\n\nconst Router = config.isProduction ? HashRouter : BrowserRouter\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <PersistGate\n        loading={<div>Loading redux state...</div>}\n        persistor={persistor}\n      >\n        <Router basename={config.basename}>\n          <Suspense fallback={<div>Loading route...</div>}>\n            <App />\n          </Suspense>\n        </Router>\n      </PersistGate>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export const COURSE = 'COURSE'\r\nexport const FACULTY = 'FACULTY'\r\nexport const MENTORGROUP = 'MENTORGROUP'\r\nexport const LECTURER = 'LECTURER'\r\nexport const STUDENT = 'STUDENT'\r\n\r\nexport const MENTORGROUP_LIST = 'MENTORGROUP_LIST'\r\nexport const STUDENT_LIST = 'STUDENT_LIST'\r\nexport const LECTURER_LIST = 'LECTURER_LIST'\r\nexport const COURSE_LIST = 'COURSE_LIST'\r\n","import dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\n// Required environment variables\r\nconst ENV_VARS = [\r\n  'REACT_APP_API_URL',\r\n  'REACT_APP_ADMIN_USERID',\r\n  'REACT_APP_ADMIN_PASSWORD',\r\n  'NODE_ENV',\r\n  'BASENAME',\r\n]\r\n\r\nconst config = {\r\n  apiUrl: process.env.REACT_APP_API_URL,\r\n  adminUserId: process.env.REACT_APP_ADMIN_USERID,\r\n  adminPassword: process.env.REACT_APP_ADMIN_PASSWORD,\r\n  isProduction: process.env.NODE_ENV === 'production',\r\n  basename: process.env.BASENAME || '/',\r\n\r\n  checkEnvVariables: function () {\r\n    ENV_VARS.forEach(function (key) {\r\n      if (!process.env[key]) {\r\n        console.warn('WARNING: Missing the environment variable ' + key)\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport default config\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport config from '../config'\r\n\r\nconst initialState = {\r\n  user: {\r\n    id: null,\r\n    psid: null,\r\n    name: null,\r\n    role: null,\r\n  },\r\n  jwt: null,\r\n}\r\n\r\nexport const adminLogin = createAsyncThunk(\r\n  'auth/adminLogin',\r\n  async (\r\n    { userId, password } = {\r\n      userId: config.adminUserId,\r\n      password: config.adminPassword,\r\n    },\r\n    thunkAPI,\r\n  ) => {\r\n    const response = await fetch(`${config.apiUrl}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ userId, password }),\r\n    })\r\n    if (!response.ok) {\r\n      thunkAPI.rejectWithValue(response)\r\n    }\r\n    return response.json()\r\n  },\r\n)\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(adminLogin.fulfilled, (state, { payload }) => {\r\n      state.jwt = payload.accessToken\r\n      state.user = {\r\n        id: payload.id,\r\n        psid: payload.psid,\r\n        name: payload.name,\r\n        role: payload.role,\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\nexport const selectJWT = (state) => state[authSlice.name].jwt\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  selectedStudentId: undefined,\r\n  selectedLecturerId: undefined,\r\n  selectedMentorId: undefined,\r\n  selectedCourseId: undefined,\r\n  selectedFacultyId: undefined,\r\n}\r\n\r\nexport const pageSlice = createSlice({\r\n  name: 'page',\r\n  initialState,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      state.isLoading = action.payload\r\n    },\r\n    setSelectedStudentId: (state, action) => {\r\n      state.selectedStudentId = action.payload\r\n    },\r\n    setSelectedLecturerId: (state, action) => {\r\n      state.selectedLecturerId = action.payload\r\n    },\r\n    setSelectedMentorId: (state, action) => {\r\n      state.selectedMentorId = action.payload\r\n    },\r\n    setSelectedCourseId: (state, action) => {\r\n      state.selectedCourseId = action.payload\r\n    },\r\n    setSelectedFacultyId: (state, action) => {\r\n      state.selectedFacultyId = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectIsLoading = (state) => state[pageSlice.name].isLoading\r\n\r\nexport const selectedStudentIdSelector = (state) =>\r\n  state[pageSlice.name].selectedStudentId\r\n\r\nexport const selectedLecturerIdSelector = (state) =>\r\n  state[pageSlice.name].selectedLecturerId\r\n\r\nexport const selectedMentorIdSelector = (state) =>\r\n  state[pageSlice.name].selectedMentorId\r\n\r\nexport const selectedCourseIdSelector = (state) =>\r\n  state[pageSlice.name].selectedCourseId\r\n\r\nexport const selectedFacultyIdSelector = (state) =>\r\n  state[pageSlice.name].selectedFacultyId\r\n\r\nexport const {\r\n  setIsLoading,\r\n  setSelectedStudentId,\r\n  setSelectedLecturerId,\r\n  setSelectedMentorId,\r\n  setSelectedCourseId,\r\n  setSelectedFacultyId,\r\n} = pageSlice.actions\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport config from '../../config'\r\nimport { adminLogin, selectJWT } from '../authSlice'\r\nimport {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from './tagConstants'\r\n\r\nconst authorizedBaseQuery = fetchBaseQuery({\r\n  baseUrl: `${config.apiUrl}/api`,\r\n\r\n  prepareHeaders: (headers, { getState }) => {\r\n    // By default, if we have a token in the store, let's use that for authenticated requests\r\n    const token = selectJWT(getState())\r\n    if (token) {\r\n      headers.set('authorization', `Bearer ${token}`)\r\n    }\r\n    return headers\r\n  },\r\n})\r\n\r\n// https://redux-toolkit.js.org/rtk-query/usage/customizing-queries#axios-basequery\r\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\r\n  let result = await authorizedBaseQuery(args, api, extraOptions)\r\n  if (result.error && result.error.status === 401) {\r\n    // login again\r\n    await api.dispatch(adminLogin())\r\n    // retry the initial query\r\n    result = await authorizedBaseQuery(args, api, extraOptions)\r\n  }\r\n  return result\r\n}\r\n\r\n// Define our single API slice object\r\nexport const apiSlice = createApi({\r\n  baseQuery: baseQueryWithReauth,\r\n  refetchOnReconnect: true,\r\n  tagTypes: [\r\n    COURSE,\r\n    FACULTY,\r\n    MENTORGROUP,\r\n    LECTURER,\r\n    STUDENT,\r\n    MENTORGROUP_LIST,\r\n    STUDENT_LIST,\r\n    LECTURER_LIST,\r\n    COURSE_LIST,\r\n  ],\r\n  endpoints: () => ({}),\r\n})\r\n"],"sourceRoot":""}