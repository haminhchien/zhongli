{"version":3,"sources":["components/NavigationBar/index.jsx","pages/Login/index.jsx","App.js","app/store.js","index.js","app/authSlice.js","app/api/tagConstants.js","app/pageSlice.js","config.js","app/api/index.js","components/custom-fields/InputField/index.jsx"],"names":["NavigationBar","dispatch","useDispatch","Navbar","bg","variant","Container","className","Brand","href","target","rel","Nav","Link","as","NavLink","to","Button","onClick","logout","validationSchema","Yup","shape","userId","required","password","Login","navigate","useNavigate","from","useLocation","state","pathname","handleLogin","values","actions","a","adminLogin","unwrap","res","message","setFieldError","replace","console","log","Card","border","style","width","Header","Body","initialValues","onSubmit","formikProps","Form","noValidate","handleSubmit","onReset","handleReset","name","label","component","InputField","type","isSubmitting","Spinner","animation","role","size","Group","StudentPage","React","lazy","LecturerPage","MentorPage","CoursePage","FacultyPage","NotFoundPage","RequireAuth","children","isAuthenticated","useSelector","selectJWT","location","App","isLoading","selectLoadingCount","ProgressBar","animated","now","path","element","combinedReducer","combineReducers","apiSlice","reducerPath","reducer","authSlice","pageSlice","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","action","toString","undefined","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","setupListeners","config","checkEnvVariables","Router","isProduction","HashRouter","BrowserRouter","ReactDOM","render","StrictMode","loading","fallback","document","getElementById","createAsyncThunk","thunkAPI","fetch","apiUrl","method","headers","body","JSON","stringify","response","ok","rejectWithValue","json","createSlice","initialState","user","id","psid","jwt","reducers","extraReducers","builder","addCase","fulfilled","payload","accessToken","COURSE","FACULTY","MENTORGROUP","LECTURER","STUDENT","MENTORGROUP_LIST","STUDENT_LIST","LECTURER_LIST","COURSE_LIST","selectedStudentId","selectedLecturerId","selectedMentorId","selectedCourseId","selectedFacultyId","loadingCount","loadingStarted","loadingDone","setSelectedStudentId","setSelectedLecturerId","setSelectedMentorId","setSelectedCourseId","setSelectedFacultyId","selectedStudentIdSelector","selectedLecturerIdSelector","selectedMentorIdSelector","selectedCourseIdSelector","selectedFacultyIdSelector","dotenv","ENV_VARS","process","forEach","warn","authorizedBaseQuery","fetchBaseQuery","baseUrl","prepareHeaders","getState","token","set","baseQueryWithReauth","args","api","extraOptions","result","error","status","createApi","baseQuery","refetchOnReconnect","tagTypes","endpoints","props","field","form","placeholder","disabled","errors","touched","showError","Label","htmlFor","Control","isInvalid","msg","Feedback"],"mappings":"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","file":"static/js/main.5b748bde.chunk.js","sourcesContent":["import { Navbar, Container, Nav, Button } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../app/authSlice'\r\n\r\nconst NavigationBar = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container className=\"d-flex justify-content-between\">\r\n        <div className=\"d-flex\">\r\n          <Navbar.Brand\r\n            href=\"https://github.com/haminhchien/zhongli\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n          >\r\n            ADMIN WEB\r\n          </Navbar.Brand>\r\n          <Nav variant=\"pills\" className=\"me-auto\">\r\n            <Nav.Link as={NavLink} to=\"/student\">\r\n              Student\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/lecturer\">\r\n              Lecturer\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/mentor\">\r\n              Mentor\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/course\">\r\n              Course\r\n            </Nav.Link>\r\n            <Nav.Link as={NavLink} to=\"/faculty\">\r\n              Faculty\r\n            </Nav.Link>\r\n          </Nav>\r\n        </div>\r\n        <Button variant=\"outline-light\" onClick={handleLogout}>\r\n          Logout\r\n        </Button>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar\r\n","import { FastField, Formik } from 'formik'\r\nimport { Button, Card, Form, Spinner } from 'react-bootstrap'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport InputField from '../../components/custom-fields/InputField'\r\nimport * as Yup from 'yup'\r\nimport { adminLogin } from '../../app/authSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userId: Yup.string().required('This field is required.'),\r\n  password: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const from = location.state?.from?.pathname || '/'\r\n\r\n  const handleLogin = async (values, actions) => {\r\n    try {\r\n      const res = await dispatch(adminLogin(values)).unwrap()\r\n      if (res?.message) {\r\n        actions.setFieldError('password', res.message)\r\n      } else {\r\n        navigate(from, { replace: true })\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      border=\"secondary\"\r\n      className=\"my-5 mx-auto\"\r\n      style={{ width: '350px' }}\r\n    >\r\n      <Card.Header className=\"text-center text-white bg-primary\">\r\n        <h3>Login</h3>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Formik\r\n          initialValues={{\r\n            userId: '',\r\n            password: '',\r\n          }}\r\n          onSubmit={handleLogin}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(formikProps) => (\r\n            <Form\r\n              noValidate\r\n              onSubmit={formikProps.handleSubmit}\r\n              onReset={formikProps.handleReset}\r\n            >\r\n              <FastField\r\n                name=\"userId\"\r\n                label=\"User ID:\"\r\n                component={InputField}\r\n              />\r\n              <FastField\r\n                name=\"password\"\r\n                label=\"Password:\"\r\n                type=\"password\"\r\n                component={InputField}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Form.Group className=\"mb-1\"></Form.Group>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectJWT } from './app/authSlice'\nimport { Routes, Route, Navigate, useLocation } from 'react-router-dom'\n\nimport NavigationBar from './components/NavigationBar'\nimport { ProgressBar } from 'react-bootstrap'\nimport { selectLoadingCount } from './app/pageSlice'\n\nimport './App.css'\nimport Login from './pages/Login'\n\nconst StudentPage = React.lazy(() => import('./pages/Student'))\nconst LecturerPage = React.lazy(() => import('./pages/Lecturer'))\nconst MentorPage = React.lazy(() => import('./pages/Mentor'))\nconst CoursePage = React.lazy(() => import('./pages/Course'))\nconst FacultyPage = React.lazy(() => import('./pages/Faculty'))\nconst NotFoundPage = React.lazy(() => import('./pages/NotFound'))\n\nfunction RequireAuth({ children }) {\n  const isAuthenticated = !!useSelector(selectJWT)\n  let location = useLocation()\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} />\n  }\n\n  return children\n}\n\nfunction App() {\n  const isLoading = useSelector(selectLoadingCount) > 0\n\n  return (\n    <Fragment>\n      <NavigationBar />\n      <ProgressBar variant=\"secondary\" animated now={isLoading ? 100 : 0} />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <RequireAuth>\n              <Navigate replace to=\"/student\" />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"student/*\"\n          element={\n            <RequireAuth>\n              <StudentPage />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"lecturer/*\"\n          element={\n            <RequireAuth>\n              <LecturerPage />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"mentor/*\"\n          element={\n            <RequireAuth>\n              <MentorPage />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"course/*\"\n          element={\n            <RequireAuth>\n              <CoursePage />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"faculty/*\"\n          element={\n            <RequireAuth>\n              <FacultyPage />\n            </RequireAuth>\n          }\n        />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </Fragment>\n  )\n}\n\nexport default App\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport { apiSlice } from './api'\nimport { authSlice, logout } from './authSlice'\nimport { pageSlice } from './pageSlice'\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\n\nconst combinedReducer = combineReducers({\n  [apiSlice.reducerPath]: apiSlice.reducer,\n  [authSlice.name]: authSlice.reducer,\n  [pageSlice.name]: pageSlice.reducer,\n})\n\nconst rootReducer = (state, action) => {\n  if (action.type === logout.toString()) {\n    // check for action type\n    state = undefined\n  }\n  return combinedReducer(state, action)\n}\n\n// Configure redux-persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [apiSlice.reducerPath, pageSlice.name],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(apiSlice.middleware),\n})\n\nexport const persistor = persistStore(store)\n\n// enable listener behavior for the store\nsetupListeners(store.dispatch)\n","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { persistor, store } from './app/store'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport config from './config'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// Check if all environment variables are set\nconfig.checkEnvVariables()\n\nconst Router = config.isProduction ? HashRouter : BrowserRouter\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <PersistGate\n        loading={<div>Loading redux state...</div>}\n        persistor={persistor}\n      >\n        <Router>\n          <Suspense fallback={<div>Loading route...</div>}>\n            <App />\n          </Suspense>\n        </Router>\n      </PersistGate>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport config from '../config'\r\n\r\nconst initialState = {\r\n  user: {\r\n    id: null,\r\n    psid: null,\r\n    name: null,\r\n    role: null,\r\n  },\r\n  jwt: null,\r\n}\r\n\r\nexport const adminLogin = createAsyncThunk(\r\n  'auth/adminLogin',\r\n  async ({ userId, password }, thunkAPI) => {\r\n    const response = await fetch(`${config.apiUrl}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ userId, password }),\r\n    })\r\n    if (!response.ok) {\r\n      thunkAPI.rejectWithValue(response)\r\n    }\r\n    return response.json()\r\n  },\r\n)\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout(state, action) {}, // state will be reset in root reducer\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(adminLogin.fulfilled, (state, { payload }) => {\r\n      state.jwt = payload.accessToken\r\n      state.user = {\r\n        id: payload.id,\r\n        psid: payload.psid,\r\n        name: payload.name,\r\n        role: payload.role,\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\nexport const selectJWT = (state) => state[authSlice.name].jwt\r\n\r\nexport const { logout } = authSlice.actions\r\n","export const COURSE = 'COURSE'\r\nexport const FACULTY = 'FACULTY'\r\nexport const MENTORGROUP = 'MENTORGROUP'\r\nexport const LECTURER = 'LECTURER'\r\nexport const STUDENT = 'STUDENT'\r\n\r\nexport const MENTORGROUP_LIST = 'MENTORGROUP_LIST'\r\nexport const STUDENT_LIST = 'STUDENT_LIST'\r\nexport const LECTURER_LIST = 'LECTURER_LIST'\r\nexport const COURSE_LIST = 'COURSE_LIST'\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  selectedStudentId: undefined,\r\n  selectedLecturerId: undefined,\r\n  selectedMentorId: undefined,\r\n  selectedCourseId: undefined,\r\n  selectedFacultyId: undefined,\r\n  loadingCount: 0,\r\n}\r\n\r\nexport const pageSlice = createSlice({\r\n  name: 'page',\r\n  initialState,\r\n  reducers: {\r\n    loadingStarted: (state, action) => {\r\n      state.loadingCount++\r\n    },\r\n    loadingDone: (state, action) => {\r\n      state.loadingCount--\r\n    },\r\n    setSelectedStudentId: (state, action) => {\r\n      state.selectedStudentId = action.payload\r\n    },\r\n    setSelectedLecturerId: (state, action) => {\r\n      state.selectedLecturerId = action.payload\r\n    },\r\n    setSelectedMentorId: (state, action) => {\r\n      state.selectedMentorId = action.payload\r\n    },\r\n    setSelectedCourseId: (state, action) => {\r\n      state.selectedCourseId = action.payload\r\n    },\r\n    setSelectedFacultyId: (state, action) => {\r\n      state.selectedFacultyId = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectLoadingCount = (state) => state[pageSlice.name].loadingCount\r\n\r\nexport const selectedStudentIdSelector = (state) =>\r\n  state[pageSlice.name].selectedStudentId\r\n\r\nexport const selectedLecturerIdSelector = (state) =>\r\n  state[pageSlice.name].selectedLecturerId\r\n\r\nexport const selectedMentorIdSelector = (state) =>\r\n  state[pageSlice.name].selectedMentorId\r\n\r\nexport const selectedCourseIdSelector = (state) =>\r\n  state[pageSlice.name].selectedCourseId\r\n\r\nexport const selectedFacultyIdSelector = (state) =>\r\n  state[pageSlice.name].selectedFacultyId\r\n\r\nexport const {\r\n  loadingStarted,\r\n  loadingDone,\r\n  setSelectedStudentId,\r\n  setSelectedLecturerId,\r\n  setSelectedMentorId,\r\n  setSelectedCourseId,\r\n  setSelectedFacultyId,\r\n} = pageSlice.actions\r\n","import dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\n// Required environment variables\r\nconst ENV_VARS = ['REACT_APP_API_URL', 'NODE_ENV']\r\n\r\nconst config = {\r\n  apiUrl: process.env.REACT_APP_API_URL,\r\n  isProduction: process.env.NODE_ENV === 'production',\r\n\r\n  checkEnvVariables: function () {\r\n    ENV_VARS.forEach(function (key) {\r\n      if (!process.env[key]) {\r\n        console.warn('WARNING: Missing the environment variable ' + key)\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport default config\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport config from '../../config'\r\nimport { logout, selectJWT } from '../authSlice'\r\nimport {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from './tagConstants'\r\nimport { loadingStarted, loadingDone } from '../pageSlice'\r\n\r\nconst authorizedBaseQuery = fetchBaseQuery({\r\n  baseUrl: `${config.apiUrl}/api`,\r\n\r\n  prepareHeaders: (headers, { getState }) => {\r\n    // By default, if we have a token in the store, let's use that for authenticated requests\r\n    const token = selectJWT(getState())\r\n    if (token) {\r\n      headers.set('authorization', `Bearer ${token}`)\r\n    }\r\n    return headers\r\n  },\r\n})\r\n\r\n// https://redux-toolkit.js.org/rtk-query/usage/customizing-queries#axios-basequery\r\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\r\n  api.dispatch(loadingStarted())\r\n  let result = await authorizedBaseQuery(args, api, extraOptions)\r\n  api.dispatch(loadingDone())\r\n\r\n  if (result.error && result.error.status === 401) {\r\n    // // login again\r\n    // await api.dispatch(adminLogin())\r\n    // // retry the initial query\r\n    // result = await authorizedBaseQuery(args, api, extraOptions)\r\n    api.dispatch(logout())\r\n  }\r\n  return result\r\n}\r\n\r\n// Define our single API slice object\r\nexport const apiSlice = createApi({\r\n  baseQuery: baseQueryWithReauth,\r\n  refetchOnReconnect: true,\r\n  tagTypes: [\r\n    COURSE,\r\n    FACULTY,\r\n    MENTORGROUP,\r\n    LECTURER,\r\n    STUDENT,\r\n    MENTORGROUP_LIST,\r\n    STUDENT_LIST,\r\n    LECTURER_LIST,\r\n    COURSE_LIST,\r\n  ],\r\n  endpoints: () => ({}),\r\n})\r\n","import Form from 'react-bootstrap/Form'\r\nimport { ErrorMessage } from 'formik'\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props\r\n  const { errors, touched } = form\r\n  const { name } = field\r\n  const showError = errors[name] && touched[name]\r\n\r\n  return (\r\n    <Form.Group className=\"mb-2\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <Form.Control\r\n        id={name}\r\n        {...field}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        disabled={disabled}\r\n        isInvalid={showError}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n"],"sourceRoot":""}