{"version":3,"sources":["components/modals/ConfirmationModal/index.jsx","components/custom-fields/AsyncSelectField/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/user/lecturerSlice.js","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","app/api/group/mentorSlice.js","components/modals/EditFieldModal/index.jsx","pages/Mentor/components/MentorSearchCard/MentorAddModal.jsx","pages/Mentor/components/MentorSearchCard/index.jsx","pages/Mentor/components/MentorDetailCard/index.jsx","pages/Mentor/components/MentorListCard/index.jsx","pages/Mentor/index.jsx"],"names":["ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","AsyncSelectField","props","field","form","label","placeholder","disabled","loadOptions","name","onBlur","errors","touched","showError","Group","className","Label","htmlFor","id","onChange","selectedOption","selectedValue","value","changeEvent","target","render","msg","Control","Feedback","type","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","component","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchLecturers","mutation","query","queryStr","url","method","params","providesTags","result","map","lecturer","LECTURER","getLecturerInfo","lecturerId","userId","error","arg","getLecturerMentorGroups","mentorGroup","MENTORGROUP","groupId","concat","MENTORGROUP_LIST","getLecturerFaculty","FACULTY","getLecturerCourses","course","COURSE","COURSE_LIST","addNewLecturer","body","password","address","facultyId","invalidatesTags","LECTURER_LIST","removeLecturer","changeLecturerInfo","changeLecturerFaculty","currentGroupId","currentFacultyId","newGroupId","newFacultyId","useSearchLecturersMutation","useGetLecturerMentorGroupsQuery","useGetLecturerCoursesQuery","useGetLecturerFacultyQuery","useGetLecturerInfoQuery","useAddNewLecturerMutation","useRemoveLecturerMutation","useChangeLecturerInfoMutation","useChangeLecturerFacultyMutation","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","searchMentors","groupType","mentor","getMentorInfo","getMentorGroupStudents","student","STUDENT","STUDENT_LIST","addNewMentorGroup","mentorId","groupName","removeMentorGroup","changeGroupName","changeMentorId","currentMentorId","newMentorId","useSearchMentorsMutation","useGetMentorGroupStudentsQuery","useGetMentorInfoQuery","useAddNewMentorGroupMutation","useRemoveMentorGroupMutation","useChangeGroupNameMutation","useChangeMentorIdMutation","EditFieldModal","isNumber","singleField","InputField","MentorAddModal","triggerSearch","triggerAdd","dispatch","useDispatch","inputValue","unwrap","lecturers","setSelectedMentorId","Modal","Form","Button","Spinner","MentorSearchCard","trigger","data","selectedMentorId","useSelector","selectedMentorIdSelector","addModal","setAddModal","MentorDetailCard","mentorInfo","isFetching","triggerRemoveMentorGroup","triggerRename","triggerChangeMentor","triggerSearchLecturers","showRenameModal","setShowRenameModal","showChangeMentorModal","setShowChangeMentorModal","mentorName","newGroupName","MentorListCard","students","userName","MentorPage","Col","md"],"mappings":"4LAgDeA,IA7CW,SAAC,GAOpB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QACI,EACoCC,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGEC,EAAW,uCAAG,sBAAAC,EAAA,0DACdR,EADc,wBAEhBM,GAAgB,GAFA,kBAIRN,IAJQ,uDAMVC,GACFA,EAAY,EAAD,IAPC,yDAAH,qDAcjB,OACE,eAAC,IAAD,CAAOH,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAMW,KAAP,UAAaV,IACb,eAAC,IAAMW,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUC,QAAST,EAAnC,UACGF,GACC,cAAC,IAAD,CAASY,UAAU,SAASC,GAAG,OAAOC,KAAK,SAASC,KAAK,OAF7D,gB,iCCrCR,oCA2CeC,IAvCf,SAA0BC,GAAQ,IACxBC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,KAAMC,EAA8CH,EAA9CG,MAAOC,EAAuCJ,EAAvCI,YAAaC,EAA0BL,EAA1BK,SAAUC,EAAgBN,EAAhBM,YAC3CC,EAAiBN,EAAjBM,KAAMC,EAAWP,EAAXO,OACNC,EAAoBP,EAApBO,OAAQC,EAAYR,EAAZQ,QACVC,EAAYF,EAAOF,IAASG,EAAQH,GAa1C,OACE,eAAC,IAAKK,MAAN,CAAYC,UAAU,OAAtB,UACGV,GAAS,cAAC,IAAKW,MAAN,CAAYC,QAASR,EAArB,SAA4BJ,IACtC,cAAC,IAAD,CACEa,GAAIT,EACJU,SAhB6B,SAACC,GAClC,IAAMC,EAAgBD,EAAiBA,EAAeE,MAAQF,EACxDG,EAAc,CAClBC,OAAQ,CACNf,KAAMA,EACNa,MAAOD,IAGXlB,EAAMgB,SAASI,IASXb,OAAQA,EACRJ,YAAaA,EACbE,YAAaA,EACbD,SAAUA,EACVQ,UAAWF,EAAY,aAAe,KAExC,cAAC,IAAD,CACEJ,KAAMA,EACNgB,OAAQ,SAACC,GAAD,OACN,cAAC,IAAKC,QAAQC,SAAd,CAAuBC,KAAK,UAA5B,SAAuCH,Y,iIC/B3CI,EAAmBC,MAAaC,MAAM,CAC1CC,OAAQF,MAAaG,SAAS,6BAG1BC,EAAgB,CACpBF,OAAQ,IAmEKG,IAhES,SAAC,GAMlB,IALLtD,EAKI,EALJA,MACAJ,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAyD,EACI,EADJA,kBAEMC,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAApD,EAAA,+EAEPR,EAAa2D,EAAON,QAFb,OAGbtD,IAHa,+CAKb8D,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOhE,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEqD,cAAeA,EACfG,SAAUA,EACVR,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAY/D,aACtBiE,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMrD,KAAP,UACE,cAAC,IAAD,CACEgB,KAAK,SACLsC,UAAW9C,IACXO,YAAa6B,MAIjB,eAAC,IAAM3C,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUkC,KAAK,SAA/B,UACGc,EAAY1D,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,iCC1Dd,8TAWMgD,EAXN,MAWoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvBC,gBAAiBD,EAAQE,SAAS,CAChCC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,QACLC,OAAQ,MACRC,OAAQ,CAAE5D,KAAM,WAAYwD,MAAOC,GAAY,MAEjDI,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAACC,GAAD,MAAe,CAAElC,KAAMmC,IAAU9C,GAAI6C,EAAS7C,UAG7D+C,gBAAiBb,EAAQG,MAAM,CAC7BA,MAAO,SAACW,GAAD,MAAiB,CACtBT,IAAK,aACLC,OAAQ,MACRC,OAAQ,CAAEQ,OAAQD,KAEpBN,aAAc,SAACC,EAAQO,EAAOC,GAAhB,MAAwB,CAAC,CAAExC,KAAMmC,IAAU9C,GAAImD,OAG/DC,wBAAyBlB,EAAQG,MAAM,CACrCA,MAAO,SAACW,GAAD,MAAiB,CACtBT,IAAK,mBACLC,OAAQ,MACRC,OAAQ,CAAEO,gBAEZN,aAAc,eAACC,EAAD,uDAAU,GAAWQ,EAArB,8CACZR,EACGC,KAAI,SAACS,GAAD,MAAkB,CACrB1C,KAAM2C,IACNtD,GAAIqD,EAAYE,YAEjBC,OAAO,CAAC,CAAE7C,KAAM8C,IAAkBzD,GAAImD,QAG7CO,mBAAoBxB,EAAQG,MAAM,CAChCA,MAAO,SAACW,GAAD,MAAiB,CACtBT,IAAK,gBACLC,OAAQ,MACRC,OAAQ,CAAEQ,OAAQD,KAEpBN,aAAc,eAACC,EAAD,uDAAU,GAAWQ,EAArB,6CAA6B,CACzC,CAAExC,KAAMgD,IAAS3D,GAAI2C,EAAOY,SAC5B,CAAE5C,KAAMmC,IAAU9C,GAAImD,OAI1BS,mBAAoB1B,EAAQG,MAAM,CAChCA,MAAO,SAACW,GAAD,MAAiB,CACtBT,IAAK,mBACLC,OAAQ,MACRC,OAAQ,CAAEO,gBAEZN,aAAc,eAACC,EAAD,uDAAU,GAAWQ,EAArB,8CACZR,EACGC,KAAI,SAACiB,GAAD,MAAa,CAChBlD,KAAMmD,IACN9D,GAAI6D,EAAON,YAEZC,OAAO,CAAC,CAAE7C,KAAMoD,IAAa/D,GAAImD,QAGxCa,eAAgB9B,EAAQE,SAAS,CAC/BC,MAAO,kBAAiD,CACtDE,IAAK,QACLC,OAAQ,OACRyB,KAAM,CAAEjE,GAHH,EAAGA,GAGIT,KAHP,EAAOA,KAGM2E,SAHb,EAAaA,SAGUrF,KAAM,WAAYsF,QAHzC,EAAuBA,QAG2BC,UAHlD,EAAgCA,aAKvCC,gBAAiB,SAAC1B,EAAQO,EAAOC,GAAhB,MAAwB,CACvC,CAAExC,KAAM2D,IAAetE,GAAImD,EAAIiB,eAInCG,eAAgBrC,EAAQE,SAAS,CAC/BC,MAAO,kBAAiB,CACtBE,IAAK,QACLC,OAAQ,SACRC,OAAQ,CAAEQ,OAHL,EAAGA,UAKVoB,gBAAiB,eAAqBlB,EAArB,6CAA6B,CAC5C,CAAExC,KAAMmC,IAAU9C,GAAImD,EAAIF,YAI9BuB,mBAAoBtC,EAAQE,SAAS,CACnCC,MAAO,kBAA4B,CACjCE,IAAK,QACLC,OAAQ,MACRyB,KAAM,CAAEjE,GAHH,EAAGA,GAGIT,KAHP,EAAOA,KAGM4E,QAHb,EAAaA,WAKpBE,gBAAiB,SAAC1B,EAAQO,EAAOC,GAAhB,MAAwB,CACvC,CACExC,KAAMmC,IACN9C,GAAImD,EAAInD,QAKdyE,sBAAuBvC,EAAQE,SAAS,CACtCC,MAAO,kBAA6C,CAClDE,IAAK,cACLC,OAAQ,MACRyB,KAAM,CACJhB,OAJG,EAAGjD,GAKN0E,eALG,EAAOC,iBAMVC,WANG,EAAyBC,gBAShCR,gBAAiB,SAAC1B,EAAQO,EAAOC,GAAhB,MAAwB,CACvC,CAAExC,KAAMmC,IAAU9C,GAAImD,EAAInD,IAC1B,CAAEW,KAAM2D,IAAetE,GAAImD,EAAIwB,kBAC/B,CAAEhE,KAAM2D,IAAetE,GAAImD,EAAI0B,sBAOrCC,EASEhD,EATFgD,2BACAC,EAQEjD,EARFiD,gCACAC,EAOElD,EAPFkD,2BACAC,EAMEnD,EANFmD,2BACAC,EAKEpD,EALFoD,wBACAC,EAIErD,EAJFqD,0BACAC,EAGEtD,EAHFsD,0BACAC,EAEEvD,EAFFuD,8BACAC,EACExD,EADFwD,kC,uGCtDaC,IAhFI,SAAC,GAUb,IATLpG,EASI,EATJA,MASI,IARJqG,aAQI,MARI,GAQJ,EAPJC,EAOI,EAPJA,gBACAC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEAC,qBAAU,WACHP,GAEHI,EAASJ,KAGV,IAPC,MASsB3H,mBAAS,IAT/B,mBASGuE,EATH,KASU4D,EATV,KAWEC,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAASjE,EAAMgE,gBAC/CV,EAAaS,GAAMC,cAAcC,SAASjE,EAAMgE,kBAEnDzD,KAAI,SAACwD,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GAC9B,OACE,cAAC,IAAUK,KAAX,CAEEC,OAAQH,IAAYd,EACpBkB,QAAM,EACNjI,QAAS,kBAAMqH,EAASK,IACxBvG,UAAU,mBALZ,SAOE,sBAAKA,UAAU,iCAAf,UACG2G,EACAZ,EAAU,8BAAMW,IAAiB,SAR/BA,MAcb,OACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAKxI,OAAN,CAAayB,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcV,MAAOA,EAA9C,SACE,cAAC,IAAKsB,QAAN,CACErB,YAAY,cACZgB,MAAOiC,EACPpC,SAAU,SAAC4G,GAAD,OAAOZ,EAASY,EAAEvG,OAAOF,YAGvC,cAAC,IAAD,CACE3B,QAAQ,YACRoB,UAAU,OACVnB,QAAS,WACPmH,EAASxD,GACT4D,EAAS,KALb,kBAUA,cAAC,IAAD,CAAQxH,QAAQ,YAAYC,QAASoH,EAArC,oBAIoB,IAArBI,EAAUY,OACT,cAAC,IAAD,CAAWrI,QAAQ,QAAnB,SAA4ByH,IAC1B,KACJ,cAAC,IAAK1H,OAAN,CAAaqB,UAAU,yBAAvB,yBACYqG,EAAUY,OADtB,YACgC3H,EAAM4H,sB,iCC9E5C,iGAwFeC,IA5EI,SAAChI,GAAW,IAE3BG,EASEH,EATFG,MAF0B,EAWxBH,EARFiI,eAH0B,MAGhB,GAHgB,IAWxBjI,EAPFkI,cAJ0B,MAIjB,GAJiB,IAWxBlI,EANFmI,aAL0B,MAKlB,GALkB,IAWxBnI,EALFkH,iBAN0B,MAMd,GANc,EAO1BkB,EAIEpI,EAJFoI,cACA1B,EAGE1G,EAHF0G,YACAC,EAEE3G,EAFF2G,aACA0B,EACErI,EADFqI,aAEIC,EAAWC,cACXC,EAAWtB,EAAUtD,KAAI,SAACwD,GAAD,aAC7B,cAAC,IAAUK,KAAX,UACE,sBAAK5G,UAAU,iCAAf,oBACG8F,EAAaS,UADhB,2BACqCgB,EAAcL,cADnD,KAEE,cAAC,IAAD,CACEU,GAAIJ,EAAajB,GADnB,yBAEWgB,EAAcL,qBALRrB,EAAYU,OAUnC,OACE,eAAC,IAAD,CAAMQ,OAAO,YAAb,UACE,eAAC,IAAKxI,OAAN,CAAayB,UAAU,oDAAvB,UACE,qBAAIA,UAAU,wBAAd,UAAuCV,EAAvC,cACA,cAAC,IAAD,CAAgBV,QAAQ,YAAYb,MAAM,UAA1C,SACGqJ,EAAQrE,KAAI,gBAAGzD,EAAH,EAAGA,MAAOT,EAAV,EAAUA,QAAV,OACX,cAAC,IAAS+H,KAAV,CAA2B/H,QAASA,EAApC,SACGS,GADiBA,WAM1B,eAAC,IAAKZ,KAAN,WACG2I,EAAOtE,KAAI,gBAAGzD,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,QAAV,OACV,eAAC,IAAK+B,MAAN,CAAwBhB,GAAI8I,IAAK7H,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAY6H,QAAM,EAACC,GAAG,IAAtB,UACGzI,EADH,OAGA,cAAC,IAAD,CAAKyI,GAAG,IAAR,SACE,cAAC,IAAKnH,QAAN,CACEoH,WAAS,EACTC,UAAQ,EACRjI,UAAWhC,EAAU,GAAK,aAC1BuC,MAAK,OAAEvC,QAAF,IAAEA,IAAW,wBATPsB,MAclBgI,EAAMvE,KAAI,gBAAGzD,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,QAASkK,EAAnB,EAAmBA,YAAnB,OACT,eAAC,IAAKnI,MAAN,CAAwBhB,GAAI8I,IAAK7H,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAY6H,QAAM,EAACC,GAAG,IAAtB,UACGzI,EADH,OAGA,cAAC,IAAD,CAAKyI,GAAG,IAAR,SACG/J,EACC,cAAC,IAAD,CAASgC,UAAU,OAAOnB,QAAS,kBAAM4I,EAASS,IAAlD,SACGlK,IAGH,cAAC,IAAD,CAASgC,UAAU,kBAAnB,iCAVWV,SAgBA,IAApBqI,EAASV,OACR,cAAC,IAAD,CAAWrI,QAAQ,QAAnB,SAA4B+I,IAC1B,U,0JC+CKQ,IA5HE,SAAC,GAUX,IATL7I,EASI,EATJA,MACAqG,EAQI,EARJA,MACAE,EAOI,EAPJA,YACAC,EAMI,EANJA,aACA0B,EAKI,EALJA,aACAY,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAhH,EACI,EADJA,kBACI,EACsBrD,mBAAS,IAD/B,mBACGuE,EADH,KACU4D,EADV,OAEoCnI,mBAAS,IAF7C,mBAEGsK,EAFH,KAEiBC,EAFjB,OAG8CvK,oBAAS,GAHvD,mBAGGwK,EAHH,KAGsBC,EAHtB,OAI8CzK,oBAAS,GAJvD,mBAIG0K,EAJH,KAIsBC,EAJtB,OAKoC3K,qBALpC,mBAKG4K,EALH,KAKiBC,EALjB,KAMEC,EAAWpD,EAAM5C,KAAI,SAACwD,GAAD,OAAUV,EAAYU,MAE3CF,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAASjE,EAAMgE,gBAC/CV,EAAaS,GAAMC,cAAcC,SAASjE,EAAMgE,kBAEnDzD,KAAI,SAACwD,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GACxByC,EAAWtC,IAAYb,EAAY0C,GACzC,OACE,cAAC,IAAU3B,KAAX,CAEEE,QAAM,EACN9G,UAAU,mBACVnB,QAAS,kBAAM2J,EAAgBjC,IAC/BM,OAAQmC,EALV,SAOE,sBAAKhJ,UAAU,iCAAf,UACG2G,EACD,cAAC,IAAD,CACEsC,MACED,EACI,CACEE,MAAO,QAET,GAENtB,GAAIJ,EAAajB,GARnB,yBASWjH,EAAM4H,qBAjBdR,MAuBb,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAKxI,OAAN,CAAayB,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcV,MAAOA,EAA9C,SACE,cAAC,IAAKsB,QAAN,CACErB,YAAY,cACZgB,MAAOiC,EACPpC,SAAU,SAAC4G,GAAD,OAAOZ,EAASY,EAAEvG,OAAOF,YAGtC6H,EACC,qCACE,cAAC,IAAD,CACExJ,QAAQ,YACRoB,UAAU,OACVnB,QAAS,kBAAMiK,GAAgB,IAHjC,iBAOA,cAAC,IAAD,CACElK,QAAQ,YACRC,QAAS,WACHgH,EAAY0C,GACdK,GAAqB,GAErBF,GAAqB,IAN3B,uBAaA,QAEgB,IAArBrC,EAAUY,OACT,cAAC,IAAD,CAAWrI,QAAQ,QAAnB,SAA4ByH,IAC1B,KACJ,cAAC,IAAK1H,OAAN,CAAaqB,UAAU,yBAAvB,yBACYqG,EAAUY,OADtB,YACgC3H,EAAM4H,oBAGxC,cAAC,IAAD,CACEnJ,MAAM,UACNC,QAAO,4BAAuBsB,EAAM4H,cAA7B,mBACPvJ,KAAM8K,EACN7K,YAAa,kBAAM8K,GAAqB,MAE1C,cAAC,IAAD,CACE3K,MAAK,iBAAYuB,EAAM4H,cAAlB,KACLlJ,QAAQ,sDACRL,KAAMgL,EACN/K,YAAa,kBAAMgL,GAAqB,IACxC/K,aAAY,sBAAE,sBAAAQ,EAAA,sEACNgK,EAAaE,GADP,6CAIhB,cAAC,IAAD,CACExK,MAAK,kBAAauB,EAAM4H,eACxBvJ,KAAMkL,EACNjL,YAAa,kBAAMkL,GAAgB,IACnCjL,aAAcyK,EACdhH,kBAAiB,uCAAE,WAAOkB,GAAP,eAAAnE,EAAA,sEACMiD,EAAkBkB,GADxB,cACXmF,EADW,yBAEVA,EAASrB,QAAO,SAACC,GAAD,OAAWwC,EAAStC,SAASF,EAAKhG,WAFxC,2CAAF,6D,mDC3GV4I,MAZf,SAAqB5I,GAGnB,IAAM6I,EAAMC,mBAMZ,OAJAlD,qBAAU,WACRiD,EAAIE,QAAU/I,IACb,CAACA,IAEG6I,EAAIE,SCqDEC,IA5DM,SAAC,GAA2C,IAAD,IAAxCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAChChC,EAAWC,cACXgC,EAAQC,YAAS,sBACjBC,EAAW,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAO9G,cAAV,aAAG,EAAe1B,OAC7B2I,EAAa,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAO9G,cAAV,aAAG,EAAekH,SAC/BC,EAAiBZ,EAAYK,GAEnCrD,qBAAU,WACJqD,EACEI,EACEA,IAAgBJ,IACdO,EACEH,IAAgBG,EAElBtC,EAAS+B,EAAeQ,YAGxBtI,QAAQC,IAAI,SAAU,CACpBiI,cACAG,iBACAP,mBAKJC,EAAkBG,IAOtBnC,EAAS+B,EAAeQ,YAGtBD,EACEA,IAAmBH,EAErBnC,EAAS,IAAD,OAAKoC,IAGbnI,QAAQC,IAAI,SAAU,CACpBiI,cACAG,iBACAP,mBAIAI,GAEFH,EAAkBG,KAOvB,CAACJ,EAAgBI,M,iCC7DtB,0PAQM3H,EARN,MAQoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvB4H,cAAe5H,EAAQE,SAAS,CAC9BC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,SACLC,OAAQ,MACRC,OAAQ,CAAEJ,MAAOC,GAAY,GAAIyH,UAAW,iBAE9CrH,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAACoH,GAAD,MAAa,CAAErJ,KAAM2C,IAAatD,GAAIgK,EAAOzG,eAG5D0G,cAAe/H,EAAQG,MAAM,CAC3BA,MAAO,SAACkB,GAAD,MAAc,CACnBhB,IAAK,eACLC,OAAQ,MACRC,OAAQ,CAAEc,aAEZb,aAAc,eAACC,EAAD,uDAAU,GAAV,MAA6B,CACzC,CAAEhC,KAAM2C,IAAatD,GAAI2C,EAAOY,aAIpC2G,uBAAwBhI,EAAQG,MAAM,CACpCA,MAAO,SAACkB,GAAD,MAAc,CACnBhB,IAAK,cACLC,OAAQ,MACRC,OAAQ,CAAEc,UAAS1E,KAAM,aAE3B6D,aAAc,eAACC,EAAD,uDAAU,GAAWQ,EAArB,8CACZR,EACGC,KAAI,SAACuH,GAAD,MAAc,CAAExJ,KAAMyJ,IAASpK,GAAImK,EAAQlH,WAC/CO,OAAO,CAAC,CAAE7C,KAAM0J,IAAcrK,GAAImD,QAGzCmH,kBAAmBpI,EAAQE,SAAS,CAClCC,MAAO,kBAA8B,CACnCE,IAAK,UACLC,OAAQ,OACRyB,KAAM,CAAEsG,SAHH,EAAGA,SAGUC,UAHb,EAAaA,aAKpBnG,gBAAiB,eAAqBlB,EAArB,6CAA6B,CAC5C,CAAExC,KAAM8C,IAAkBzD,GAAImD,EAAIoH,cAItCE,kBAAmBvI,EAAQE,SAAS,CAClCC,MAAO,kBAAkB,CACvBE,IAAK,SACLC,OAAQ,SACRC,OAAQ,CAAEc,QAHL,EAAGA,WAKVc,gBAAiB,eAAqBlB,EAArB,6CAA6B,CAC5C,CAAExC,KAAM2C,IAAatD,GAAImD,EAAII,aAIjCmH,gBAAiBxI,EAAQE,SAAS,CAChCC,MAAO,kBAA6B,CAClCE,IAAK,SACLC,OAAQ,MACRyB,KAAM,CAAEV,QAHH,EAAGA,QAGSiH,UAHZ,EAAYA,aAKnBnG,gBAAiB,SAAC1B,EAAQO,EAAOC,GAAhB,MAAwB,CACvC,CAAExC,KAAM2C,IAAatD,GAAImD,EAAII,aAIjCoH,eAAgBzI,EAAQE,SAAS,CAC/BC,MAAO,gBAAGkB,EAAH,EAAGA,QAAH,EAAYqH,gBAAZ,MAAgD,CACrDrI,IAAK,UACLC,OAAQ,MACRyB,KAAM,CAAEV,UAASgH,SAHZ,EAA6BM,eAKpCxG,gBAAiB,SAAC1B,EAAQO,EAAOC,GAAhB,MAAwB,CACvC,CAAExC,KAAM2C,IAAatD,GAAImD,EAAII,SAC7B,CAAE5C,KAAM8C,IAAkBzD,GAAImD,EAAIyH,iBAClC,CAAEjK,KAAM8C,IAAkBzD,GAAImD,EAAI0H,qBAOxCC,EAOEhJ,EAPFgJ,yBACAC,EAMEjJ,EANFiJ,+BACAC,EAKElJ,EALFkJ,sBACAC,EAIEnJ,EAJFmJ,6BACAC,EAGEpJ,EAHFoJ,6BACAC,EAEErJ,EAFFqJ,2BACAC,EACEtJ,EADFsJ,2B,gICpBaC,IAzEQ,SAAC,GAOjB,IANLzN,EAMI,EANJA,MACAJ,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aAGI,IAFJuD,qBAEI,MAFY,GAEZ,MADJqK,gBACI,SACE1K,EAAmBC,MAAaC,MAAM,CAC1CyK,YAAaD,EACTzK,MAAaG,SAAS,2BACtBH,MAAaG,SAAS,6BAGtBI,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAApD,EAAA,+EAEPR,EAAa2D,EAAOkK,aAFb,OAGb9N,IAHa,+CAKb8D,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOhE,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEqD,cAAe,CACbsK,YAAatK,GAEfG,SAAUA,EACVR,iBAAkBA,EALpB,SAOG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAY/D,aACtBiE,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMrD,KAAP,UACE,cAAC,IAAD,CACEgB,KAAK,cACLsC,UAAW2J,IACX7K,KAAM2K,EAAW,SAAW,WAIhC,eAAC,IAAM9M,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUkC,KAAK,SAA/B,UACGc,EAAY1D,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,qOCjDR8B,EAAmBC,MAAaC,MAAM,CAC1C0J,UAAW3J,MAAaG,SAAS,2BACjCuJ,SAAU1J,MAAaG,SAAS,6BAG5BC,EAAgB,CACpBuJ,UAAW,GACXD,SAAU,IAiFGkB,EA9EQ,SAACzM,GAAW,IACzBxB,EAAsBwB,EAAtBxB,KAAMC,EAAgBuB,EAAhBvB,YADkB,EAERqH,cAAjB4G,EAFyB,sBAGXT,cAAdU,EAHyB,oBAI1BC,EAAWC,cAEX1J,EAAe,uCAAG,WAAO2J,GAAP,eAAA5N,EAAA,sEACEwN,EAAcI,GAAYC,SAD5B,cAChBC,EADgB,yBAEfA,EAAUpJ,KAAI,SAACC,GAAD,MAAe,CAClCzC,MAAOyC,EAAS7C,GAChBb,MAAO0D,EAAStD,UAJI,2CAAH,sDAQf7B,EAAY,uCAAG,WAAO2D,EAAQC,GAAf,iBAAApD,EAAA,+EAESyN,EAAWtK,GAAQ0K,SAF5B,gBAETxI,EAFS,EAETA,QACR9F,IACAmO,EAASK,YAAoB1I,IAJZ,gDAMjBhC,QAAQC,IAAR,MANiB,yDAAH,wDAUlB,OACE,eAAC0K,EAAA,EAAD,CAAO1O,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAACyO,EAAA,EAAM9N,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC6N,EAAA,EAAM5N,MAAP,qCAEF,cAAC,IAAD,CACE2C,cAAeA,EACfG,SAAU1D,EACVkD,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC0K,EAAA,EAAD,CACEzK,YAAU,EACVN,SAAUK,EAAY/D,aACtBiE,QAASF,EAAYG,YAHvB,UAKE,eAACsK,EAAA,EAAM3N,KAAP,WACE,cAAC,IAAD,CACEgB,KAAK,YACLsC,UAAW2J,IACXrM,MAAM,iBACNC,YAAY,gBAEd,cAAC,IAAD,CACEG,KAAK,WACLsC,UAAW9C,IACXO,YAAa6C,EACbhD,MAAM,qBAIV,eAAC+M,EAAA,EAAM1N,OAAP,WACE,cAAC4N,EAAA,EAAD,CAAQ3N,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC2O,EAAA,EAAD,CAAQ3N,QAAQ,UAAUkC,KAAK,SAA/B,UACGc,EAAY1D,cACX,cAACsO,EAAA,EAAD,CACE1N,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,yBC5CCwN,EAzBU,WACvB,IAAMV,EAAWC,cADY,EAEJf,cAFI,mBAEtByB,EAFsB,KAGrBC,EAHqB,KAGrBA,KACFC,EAAmBC,YAAYC,KAJR,EAKG7O,oBAAS,GALZ,mBAKtB8O,EALsB,KAKZC,EALY,KAO7B,OACE,eAAC,WAAD,WACE,cAACtH,EAAA,EAAD,CACEpG,MAAM,SACNqG,MAAOgH,EACP/G,gBAAiBgH,EACjB/G,YAAa,SAACsE,GAAD,OAAYA,EAAOzG,SAChCoC,aAAc,SAACqE,GAAD,OAAYA,EAAOQ,WACjC5E,SAAS,EACTC,SAAU,SAACxD,GAAD,OAAWkK,EAAQlK,IAC7ByD,MAAO,kBAAM+G,GAAY,IACzB9G,SAAU,SAACiE,GAAD,OAAY4B,EAASK,YAAoBjC,EAAOzG,aAE5D,cAAC,EAAD,CAAgB/F,KAAMoP,EAAUnP,YAAa,kBAAMoP,GAAY,U,oCC2FtDC,EA1GU,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,iBAAuB,EAE/CzB,YAAsByB,GADVM,EADmC,EACzCP,KAAkBQ,EADuB,EACvBA,WADuB,EAId9B,cAA5B+B,EAJ0C,sBAKzB9B,cAAjB+B,EAL0C,sBAMnB9B,cAAvB+B,EAN0C,sBAOhBrI,cAA1BsI,EAP0C,sBASCtP,oBAAS,GATV,mBAS1C0K,EAT0C,KASvBC,EATuB,OAUH3K,oBAAS,GAVN,mBAU1CuP,EAV0C,KAUzBC,EAVyB,OAWSxP,oBAAS,GAXlB,mBAW1CyP,EAX0C,KAWnBC,EAXmB,KAa3C5B,EAAWC,cAEjB,OAAImB,EACK,6BAIP,eAAC,WAAD,WACE,cAAChG,EAAA,EAAD,CACE7H,MAAM,QACN+H,OAAQ,CACN,CAAE/H,MAAO,aAActB,QAASkP,EAAWvC,WAC3C,CAAErL,MAAO,WAAYtB,QAASkP,EAAWxJ,UAE3C4D,MAAO,CACL,CACEhI,MAAO,SACPtB,QAASkP,EAAWU,WACpB1F,YAAY,aAAD,OAAegF,EAAWxC,UAAY,MAGrDtD,QAAS,CACP,CACE9H,MAAO,eACPT,QAAS,WACP4O,GAAmB,KAGvB,CACEnO,MAAO,gBACPT,QAAS,WACP8O,GAAyB,KAG7B,CACErO,MAAO,eACPT,QAAS,WACP+J,GAAqB,QAK7B,cAAC4C,EAAA,EAAD,CACEzN,MAAM,oBACNJ,KAAM6P,EACN5P,YAAa,WACX6P,GAAmB,IAErB5P,aAAY,uCAAE,WAAOgQ,GAAP,SAAAxP,EAAA,sEACNgP,EAAc,CAClB3J,QAASwJ,EAAWxJ,QACpBiH,UAAWkD,IAHD,2CAAF,sDAMZzM,cAAe8L,EAAWvC,YAE5B,cAACtJ,EAAA,EAAD,CACEtD,MAAM,gBACNJ,KAAM+P,EACN9P,YAAa,WACX+P,GAAyB,IAE3B9P,aAAY,uCAAE,WAAOmN,GAAP,SAAA3M,EAAA,sEACNiP,EAAoB,CACxB5J,QAASwJ,EAAWxJ,QACpBqH,gBAAiBmC,EAAWxC,SAC5BM,gBAJU,2CAAF,sDAOZ1J,kBAAiB,uCAAE,WAAOkB,GAAP,eAAAnE,EAAA,sEACOkP,EAAuB/K,GAAO0J,SADrC,cACXC,EADW,yBAEVA,EAAUpJ,KAAI,SAACC,GAAD,MAAe,CAClCzC,MAAOyC,EAAS7C,GAChBb,MAAO0D,EAAStD,UAJD,2CAAF,wDAQnB,cAAChC,EAAA,EAAD,CACEK,MAAM,uBACNC,QAAQ,yEACRL,KAAMgL,EACN/K,YAAa,kBAAMgL,GAAqB,IACxC/K,aAAY,sBAAE,sBAAAQ,EAAA,6DACZ0N,EAASK,YAAoB,OADjB,SAENgB,EAAyB,CAC7B1J,QAASwJ,EAAWxJ,UACnBwI,SAJS,iD,SCvFP4B,EApBQ,SAAC,GAA0B,IAAxBlB,EAAuB,EAAvBA,iBAAuB,EAE7C1B,YAA+B0B,GADnBmB,EADiC,EACvCpB,KAGR,OAJ+C,EACvBQ,WAIf,6BAIP,cAAChF,EAAA,EAAD,CACE7I,MAAM,UACNqG,MAAOoI,EACPlI,YAAa,SAACyE,GAAD,OAAaA,EAAQlH,QAClC0C,aAAc,SAACwE,GAAD,OAAaA,EAAQ0D,UACnCxG,aAAc,SAAC8C,GAAD,yBAAyBA,EAAQlH,SAC/CgF,aAAa,KC6BJ6F,UAnCI,WACjB,IAAMlC,EAAWC,cACXY,EAAmBC,YAAYC,KASrC,OAPAvD,YAAa,CACXC,eAAgBoD,EAChBnD,kBAAmB,SAACiB,GAClBqB,EAASK,YAAoB1B,OAK/B,eAAC7C,EAAA,EAAD,CAAK7H,UAAU,iCAAf,UACE,cAACkO,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,MAEDvB,EACC,qCACE,cAACsB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,CAAkBvB,iBAAkBA,MAEtC,cAACsB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,CAAgBvB,iBAAkBA,SAItC,qCACE,cAACsB,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKC,GAAG","file":"static/js/6.33d2a7e9.chunk.js","sourcesContent":["import { Modal, Button, Spinner } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nconst ConfirmationModal = ({\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleError,\r\n  title,\r\n  content,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n  const handleClick = async () => {\r\n    if (handleSubmit) {\r\n      setIsSubmitting(true)\r\n      try {\r\n        await handleSubmit()\r\n      } catch (e) {\r\n        if (handleError) {\r\n          handleError(e)\r\n        }\r\n      }\r\n    }\r\n    // handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClick}>\r\n          {isSubmitting && (\r\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\r\n          )}\r\n          OK\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal\r\n","import { ErrorMessage } from 'formik'\r\nimport { Form } from 'react-bootstrap'\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nfunction AsyncSelectField(props) {\r\n  const { field, form, label, placeholder, disabled, loadOptions } = props\r\n  const { name, onBlur } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    }\r\n    field.onChange(changeEvent)\r\n  }\r\n\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <AsyncSelect\r\n        id={name}\r\n        onChange={handleSelectedOptionChange}\r\n        onBlur={onBlur}\r\n        placeholder={placeholder}\r\n        loadOptions={loadOptions}\r\n        disabled={disabled}\r\n        className={showError ? 'is-invalid' : ''}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AsyncSelectField\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  itemId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  itemId: '',\r\n}\r\n\r\nconst SelectItemModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleSearchItems,\r\n}) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.itemId)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('itemId', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"itemId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={handleSearchItems}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SelectItemModal\r\n","import {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchLecturers: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/user',\r\n        method: 'GET',\r\n        params: { role: 'LECTURER', query: queryStr || '' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((lecturer) => ({ type: LECTURER, id: lecturer.id })),\r\n    }),\r\n\r\n    getLecturerInfo: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/info',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result, error, arg) => [{ type: LECTURER, id: arg }],\r\n    }),\r\n\r\n    getLecturerMentorGroups: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/mentor',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) =>\r\n        result\r\n          .map((mentorGroup) => ({\r\n            type: MENTORGROUP,\r\n            id: mentorGroup.groupId,\r\n          }))\r\n          .concat([{ type: MENTORGROUP_LIST, id: arg }]),\r\n    }),\r\n\r\n    getLecturerFaculty: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/faculty',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n        { type: LECTURER, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getLecturerCourses: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/course',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((course) => ({\r\n            type: COURSE,\r\n            id: course.groupId,\r\n          }))\r\n          .concat([{ type: COURSE_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewLecturer: builder.mutation({\r\n      query: ({ id, name, password, address, facultyId }) => ({\r\n        url: '/user',\r\n        method: 'POST',\r\n        body: { id, name, password, role: 'LECTURER', address, facultyId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER_LIST, id: arg.facultyId },\r\n      ],\r\n    }),\r\n\r\n    removeLecturer: builder.mutation({\r\n      query: ({ userId }) => ({\r\n        url: '/user',\r\n        method: 'DELETE',\r\n        params: { userId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: LECTURER, id: arg.userId },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerInfo: builder.mutation({\r\n      query: ({ id, name, address }) => ({\r\n        url: '/user',\r\n        method: 'PUT',\r\n        body: { id, name, address },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        {\r\n          type: LECTURER,\r\n          id: arg.id,\r\n        },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerFaculty: builder.mutation({\r\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentFacultyId,\r\n          newGroupId: newFacultyId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER, id: arg.id },\r\n        { type: LECTURER_LIST, id: arg.currentFacultyId },\r\n        { type: LECTURER_LIST, id: arg.newFacultyId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchLecturersMutation,\r\n  useGetLecturerMentorGroupsQuery,\r\n  useGetLecturerCoursesQuery,\r\n  useGetLecturerFacultyQuery,\r\n  useGetLecturerInfoQuery,\r\n  useAddNewLecturerMutation,\r\n  useRemoveLecturerMutation,\r\n  useChangeLecturerInfoMutation,\r\n  useChangeLecturerFacultyMutation,\r\n} = extendedApi\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\n\r\nconst SearchCard = ({\r\n  label,\r\n  items = [],\r\n  selectedItemKey,\r\n  keySelector,\r\n  nameSelector,\r\n  showKey,\r\n  onSearch,\r\n  onAdd,\r\n  onSelect,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!selectedItemKey) {\r\n      // On mount, if no item selected, get something\r\n      onSearch(selectedItemKey)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [query, setQuery] = useState('')\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          active={itemKey === selectedItemKey}\r\n          action\r\n          onClick={() => onSelect(item)}\r\n          className=\"user-select-none\"\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            {showKey ? <div>{itemKey}</div> : null}\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between\">\r\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n          <Form.Control\r\n            placeholder=\"placeholder\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n        </FloatingLabel>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          onClick={() => {\r\n            onSearch(query)\r\n            setQuery('')\r\n          }}\r\n        >\r\n          Find\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={onAdd}>\r\n          Add\r\n        </Button>\r\n      </Card.Header>\r\n      {listItems.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n      ) : null}\r\n      <Card.Footer className=\"text-muted text-center\">\r\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SearchCard\r\n","import {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  NavLink,\r\n  ListGroup,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from 'react-bootstrap'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst DetailCard = (props) => {\r\n  const {\r\n    label,\r\n    buttons = [],\r\n    fields = [],\r\n    links = [],\r\n    listItems = [],\r\n    listItemLabel,\r\n    keySelector,\r\n    nameSelector,\r\n    linkSelector,\r\n  } = props\r\n  const navigate = useNavigate()\r\n  const itemList = listItems.map((item) => (\r\n    <ListGroup.Item key={keySelector(item)}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\r\n        <Link\r\n          to={linkSelector(item)}\r\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\r\n      </div>\r\n    </ListGroup.Item>\r\n  ))\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\r\n        <DropdownButton variant=\"secondary\" title=\"Options\">\r\n          {buttons.map(({ label, onClick }) => (\r\n            <Dropdown.Item key={label} onClick={onClick}>\r\n              {label}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {fields.map(({ label, content }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                className={content ? '' : 'text-muted'}\r\n                value={content ?? '[not available]'}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n        {links.map(({ label, content, destination }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              {content ? (\r\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\r\n                  {content}\r\n                </NavLink>\r\n              ) : (\r\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\r\n              )}\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n      </Card.Body>\r\n      {itemList.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DetailCard\r\n","import { Fragment, useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../modals/ConfirmationModal'\r\nimport SelectItemModal from '../modals/SelectItemModal'\r\n\r\nconst ListCard = ({\r\n  label,\r\n  items,\r\n  keySelector,\r\n  nameSelector,\r\n  linkSelector,\r\n  showButtons,\r\n  handleRemove,\r\n  handleAdd,\r\n  handleSearchItems,\r\n}) => {\r\n  const [query, setQuery] = useState('')\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showAddModal, setShowAddModal] = useState()\r\n  const itemKeys = items.map((item) => keySelector(item))\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      const isActive = itemKey === keySelector(selectedItem)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          action\r\n          className=\"user-select-none\"\r\n          onClick={() => setSelectedItem(item)}\r\n          active={isActive}\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            <Link\r\n              style={\r\n                isActive\r\n                  ? {\r\n                      color: '#fff',\r\n                    }\r\n                  : {}\r\n              }\r\n              to={linkSelector(item)}\r\n            >{`Go to ${label.toLowerCase()}`}</Link>\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card border=\"secondary\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n            <Form.Control\r\n              placeholder=\"placeholder\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n          </FloatingLabel>\r\n          {showButtons ? (\r\n            <>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"mx-1\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  if (keySelector(selectedItem)) {\r\n                    setShowRemoveWarning(true)\r\n                  } else {\r\n                    setShowSelectWarning(true)\r\n                  }\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </Card.Header>\r\n        {listItems.length !== 0 ? (\r\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n        ) : null}\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n        </Card.Footer>\r\n      </Card>\r\n      <ConfirmationModal\r\n        title=\"Warning\"\r\n        content={`Please select one ${label.toLowerCase()} from the list.`}\r\n        show={showSelectWarning}\r\n        handleClose={() => setShowSelectWarning(false)}\r\n      />\r\n      <ConfirmationModal\r\n        title={`Remove ${label.toLowerCase()}?`}\r\n        content=\"This action cannot be undone. List will be updated.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          await handleRemove(selectedItem)\r\n        }}\r\n      />\r\n      <SelectItemModal\r\n        title={`Add new ${label.toLowerCase()}`}\r\n        show={showAddModal}\r\n        handleClose={() => setShowAddModal(false)}\r\n        handleSubmit={handleAdd}\r\n        handleSearchItems={async (query) => {\r\n          const itemList = await handleSearchItems(query)\r\n          return itemList.filter((item) => !itemKeys.includes(item.value))\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListCard\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef()\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value]) // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current\r\n}\r\n\r\nexport default usePrevious\r\n","import { useEffect } from 'react'\r\nimport { useMatch, useNavigate } from 'react-router'\r\nimport usePrevious from './usePrevious'\r\n\r\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\r\n  const navigate = useNavigate()\r\n  const match = useMatch('/:resource/:itemId') // Can be customized\r\n  const itemIdParam = match?.params?.itemId\r\n  const resourceParam = match?.params?.resource\r\n  const prevSelectedId = usePrevious(selectedItemId)\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      if (itemIdParam) {\r\n        if (itemIdParam !== selectedItemId) {\r\n          if (prevSelectedId) {\r\n            if (itemIdParam === prevSelectedId) {\r\n              // Update url based on selected item\r\n              navigate(selectedItemId.toString())\r\n            } else {\r\n              // Weird?\r\n              console.log('Weird?', {\r\n                itemIdParam,\r\n                prevSelectedId,\r\n                selectedItemId,\r\n              })\r\n            }\r\n          } else {\r\n            // Link from another resource\r\n            setSelectedItemId(itemIdParam)\r\n          }\r\n        } else {\r\n          // In sync, nothing changes, good!\r\n        }\r\n      } else {\r\n        // First select\r\n        navigate(selectedItemId.toString())\r\n      }\r\n    } else {\r\n      if (prevSelectedId) {\r\n        if (prevSelectedId === itemIdParam) {\r\n          // Current item deleted, selected ID is null\r\n          navigate(`/${resourceParam}`) // Clear param\r\n        } else {\r\n          // Weird?\r\n          console.log('Weird?', {\r\n            itemIdParam,\r\n            prevSelectedId,\r\n            selectedItemId,\r\n          })\r\n        }\r\n      } else {\r\n        if (itemIdParam) {\r\n          // Fresh load selected item from entered url\r\n          setSelectedItemId(itemIdParam)\r\n        } else {\r\n          // Fresh load with no param\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedItemId, itemIdParam])\r\n}\r\n\r\nexport default useItemParam\r\n","import {\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchMentors: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/group',\r\n        method: 'GET',\r\n        params: { query: queryStr || '', groupType: 'MENTORGROUP' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((mentor) => ({ type: MENTORGROUP, id: mentor.groupId })),\r\n    }),\r\n\r\n    getMentorInfo: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/mentor/info',\r\n        method: 'GET',\r\n        params: { groupId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: MENTORGROUP, id: result.groupId },\r\n      ],\r\n    }),\r\n\r\n    getMentorGroupStudents: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/group/user',\r\n        method: 'GET',\r\n        params: { groupId, role: 'STUDENT' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((student) => ({ type: STUDENT, id: student.userId }))\r\n          .concat([{ type: STUDENT_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewMentorGroup: builder.mutation({\r\n      query: ({ mentorId, groupName }) => ({\r\n        url: '/mentor',\r\n        method: 'POST',\r\n        body: { mentorId, groupName },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: MENTORGROUP_LIST, id: arg.mentorId },\r\n      ],\r\n    }),\r\n\r\n    removeMentorGroup: builder.mutation({\r\n      query: ({ groupId }) => ({\r\n        url: '/group',\r\n        method: 'DELETE',\r\n        params: { groupId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: MENTORGROUP, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeGroupName: builder.mutation({\r\n      query: ({ groupId, groupName }) => ({\r\n        url: '/group',\r\n        method: 'PUT',\r\n        body: { groupId, groupName },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: MENTORGROUP, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeMentorId: builder.mutation({\r\n      query: ({ groupId, currentMentorId, newMentorId }) => ({\r\n        url: '/mentor',\r\n        method: 'PUT',\r\n        body: { groupId, mentorId: newMentorId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: MENTORGROUP, id: arg.groupId },\r\n        { type: MENTORGROUP_LIST, id: arg.currentMentorId },\r\n        { type: MENTORGROUP_LIST, id: arg.newMentorId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchMentorsMutation,\r\n  useGetMentorGroupStudentsQuery,\r\n  useGetMentorInfoQuery,\r\n  useAddNewMentorGroupMutation,\r\n  useRemoveMentorGroupMutation,\r\n  useChangeGroupNameMutation,\r\n  useChangeMentorIdMutation,\r\n} = extendedApi\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../custom-fields/InputField'\r\n\r\nconst EditFieldModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  initialValues = '',\r\n  isNumber = false,\r\n}) => {\r\n  const validationSchema = Yup.object().shape({\r\n    singleField: isNumber\r\n      ? Yup.number().required('This field is required.')\r\n      : Yup.string().required('This field is required.'),\r\n  })\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.singleField)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('singleField', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          singleField: initialValues,\r\n        }}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"singleField\"\r\n                component={InputField}\r\n                type={isNumber ? 'number' : 'text'}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditFieldModal\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../../../components/custom-fields/InputField'\r\nimport AsyncSelectField from '../../../../components/custom-fields/AsyncSelectField'\r\nimport { useAddNewMentorGroupMutation } from '../../../../app/api/group/mentorSlice'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport { setSelectedMentorId } from '../../../../app/pageSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string().required('This field is required.'),\r\n  mentorId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  mentorId: '',\r\n}\r\n\r\nconst MentorAddModal = (props) => {\r\n  const { show, handleClose } = props\r\n  const [triggerSearch] = useSearchLecturersMutation()\r\n  const [triggerAdd] = useAddNewMentorGroupMutation()\r\n  const dispatch = useDispatch()\r\n\r\n  const searchLecturers = async (inputValue) => {\r\n    const lecturers = await triggerSearch(inputValue).unwrap()\r\n    return lecturers.map((lecturer) => ({\r\n      value: lecturer.id,\r\n      label: lecturer.name,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (values, actions) => {\r\n    try {\r\n      const { groupId } = await triggerAdd(values).unwrap()\r\n      handleClose()\r\n      dispatch(setSelectedMentorId(groupId))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new mentor group</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"groupName\"\r\n                component={InputField}\r\n                label=\"New group name\"\r\n                placeholder=\"ITCS K18...\"\r\n              />\r\n              <FastField\r\n                name=\"mentorId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={searchLecturers}\r\n                label=\"Select mentor\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MentorAddModal\r\n","import { Fragment, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useSearchMentorsMutation } from '../../../../app/api/group/mentorSlice'\r\nimport {\r\n  selectedMentorIdSelector,\r\n  setSelectedMentorId,\r\n} from '../../../../app/pageSlice'\r\nimport SearchCard from '../../../../components/SearchCard'\r\nimport MentorAddModal from './MentorAddModal'\r\n\r\nconst MentorSearchCard = () => {\r\n  const dispatch = useDispatch()\r\n  const [trigger, query] = useSearchMentorsMutation()\r\n  const { data } = query\r\n  const selectedMentorId = useSelector(selectedMentorIdSelector)\r\n  const [addModal, setAddModal] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchCard\r\n        label=\"Mentor\"\r\n        items={data}\r\n        selectedItemKey={selectedMentorId}\r\n        keySelector={(mentor) => mentor.groupId}\r\n        nameSelector={(mentor) => mentor.groupName}\r\n        showKey={false}\r\n        onSearch={(query) => trigger(query)}\r\n        onAdd={() => setAddModal(true)}\r\n        onSelect={(mentor) => dispatch(setSelectedMentorId(mentor.groupId))}\r\n      />\r\n      <MentorAddModal show={addModal} handleClose={() => setAddModal(false)} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MentorSearchCard\r\n","import { Fragment, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  useChangeGroupNameMutation,\r\n  useChangeMentorIdMutation,\r\n  useGetMentorInfoQuery,\r\n  useRemoveMentorGroupMutation,\r\n} from '../../../../app/api/group/mentorSlice'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport { setSelectedMentorId } from '../../../../app/pageSlice'\r\nimport DetailCard from '../../../../components/DetailCard'\r\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\r\nimport EditFieldModal from '../../../../components/modals/EditFieldModal'\r\nimport SelectItemModal from '../../../../components/modals/SelectItemModal'\r\n\r\nconst MentorDetailCard = ({ selectedMentorId }) => {\r\n  const { data: mentorInfo, isFetching } =\r\n    useGetMentorInfoQuery(selectedMentorId)\r\n\r\n  const [triggerRemoveMentorGroup] = useRemoveMentorGroupMutation()\r\n  const [triggerRename] = useChangeGroupNameMutation()\r\n  const [triggerChangeMentor] = useChangeMentorIdMutation()\r\n  const [triggerSearchLecturers] = useSearchLecturersMutation()\r\n\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showRenameModal, setShowRenameModal] = useState(false)\r\n  const [showChangeMentorModal, setShowChangeMentorModal] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DetailCard\r\n        label=\"Group\"\r\n        fields={[\r\n          { label: 'Group name', content: mentorInfo.groupName },\r\n          { label: 'Group ID', content: mentorInfo.groupId },\r\n        ]}\r\n        links={[\r\n          {\r\n            label: 'Mentor',\r\n            content: mentorInfo.mentorName,\r\n            destination: `/lecturer/${mentorInfo.mentorId || ''}`,\r\n          },\r\n        ]}\r\n        buttons={[\r\n          {\r\n            label: 'Rename group',\r\n            onClick: () => {\r\n              setShowRenameModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change mentor',\r\n            onClick: () => {\r\n              setShowChangeMentorModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Remove group',\r\n            onClick: () => {\r\n              setShowRemoveWarning(true)\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change group name\"\r\n        show={showRenameModal}\r\n        handleClose={() => {\r\n          setShowRenameModal(false)\r\n        }}\r\n        handleSubmit={async (newGroupName) => {\r\n          await triggerRename({\r\n            groupId: mentorInfo.groupId,\r\n            groupName: newGroupName,\r\n          })\r\n        }}\r\n        initialValues={mentorInfo.groupName}\r\n      />\r\n      <SelectItemModal\r\n        title=\"Change mentor\"\r\n        show={showChangeMentorModal}\r\n        handleClose={() => {\r\n          setShowChangeMentorModal(false)\r\n        }}\r\n        handleSubmit={async (newMentorId) => {\r\n          await triggerChangeMentor({\r\n            groupId: mentorInfo.groupId,\r\n            currentMentorId: mentorInfo.mentorId,\r\n            newMentorId,\r\n          })\r\n        }}\r\n        handleSearchItems={async (query) => {\r\n          const lecturers = await triggerSearchLecturers(query).unwrap()\r\n          return lecturers.map((lecturer) => ({\r\n            value: lecturer.id,\r\n            label: lecturer.name,\r\n          }))\r\n        }}\r\n      />\r\n      <ConfirmationModal\r\n        title=\"Remove mentor group?\"\r\n        content=\"All students and lecturers will be removed from this mentor group too.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          dispatch(setSelectedMentorId(null))\r\n          await triggerRemoveMentorGroup({\r\n            groupId: mentorInfo.groupId,\r\n          }).unwrap()\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MentorDetailCard\r\n","import { useGetMentorGroupStudentsQuery } from '../../../../app/api/group/mentorSlice'\r\nimport ListCard from '../../../../components/ListCard'\r\n\r\nconst MentorListCard = ({ selectedMentorId }) => {\r\n  const { data: students, isFetching } =\r\n    useGetMentorGroupStudentsQuery(selectedMentorId)\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <ListCard\r\n      label=\"Student\"\r\n      items={students}\r\n      keySelector={(student) => student.userId}\r\n      nameSelector={(student) => student.userName}\r\n      linkSelector={(student) => `/student/${student.userId}`}\r\n      showButtons={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MentorListCard\r\n","import useItemParam from '../../hooks/useItemParam'\r\nimport {\r\n  selectedMentorIdSelector,\r\n  setSelectedMentorId,\r\n} from '../../app/pageSlice'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport MentorSearchCard from './components/MentorSearchCard'\r\nimport MentorDetailCard from './components/MentorDetailCard'\r\nimport MentorListCard from './components/MentorListCard'\r\nimport { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst MentorPage = () => {\r\n  const dispatch = useDispatch()\r\n  const selectedMentorId = useSelector(selectedMentorIdSelector)\r\n\r\n  useItemParam({\r\n    selectedItemId: selectedMentorId,\r\n    setSelectedItemId: (mentorId) => {\r\n      dispatch(setSelectedMentorId(mentorId))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center my-3\">\r\n      <Col md=\"3\">\r\n        <MentorSearchCard />\r\n      </Col>\r\n      {selectedMentorId ? (\r\n        <>\r\n          <Col md=\"4\">\r\n            <MentorDetailCard selectedMentorId={selectedMentorId} />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <MentorListCard selectedMentorId={selectedMentorId} />\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Col md=\"4\"></Col>\r\n          <Col md=\"4\"></Col>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default MentorPage\r\n"],"sourceRoot":""}