{"version":3,"sources":["components/modals/ConfirmationModal/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/user/lecturerSlice.js","components/custom-fields/AsyncSelectField/index.jsx","app/api/group/facultySlice.js","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","components/modals/EditFieldModal/index.jsx","pages/Faculty/components/FacultySearchCard/FacultyAddModal.jsx","pages/Faculty/components/FacultySearchCard/index.jsx","pages/Faculty/components/FacultyDetailCard/index.jsx","pages/Faculty/components/FacultyListCard/index.jsx","pages/Faculty/index.jsx"],"names":["ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","name","component","AsyncSelectField","loadOptions","type","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchLecturers","mutation","query","queryStr","url","method","params","providesTags","result","map","lecturer","LECTURER","id","getLecturerInfo","lecturerId","userId","error","arg","getLecturerMentorGroups","mentorGroup","MENTORGROUP","groupId","concat","MENTORGROUP_LIST","getLecturerFaculty","FACULTY","getLecturerCourses","course","COURSE","COURSE_LIST","addNewLecturer","body","password","address","facultyId","displayId","invalidatesTags","LECTURER_LIST","removeLecturer","changeLecturerInfo","changeLecturerFaculty","currentGroupId","currentFacultyId","newGroupId","newFacultyId","useSearchLecturersMutation","useGetLecturerMentorGroupsQuery","useGetLecturerCoursesQuery","useGetLecturerFacultyQuery","useGetLecturerInfoQuery","useAddNewLecturerMutation","useRemoveLecturerMutation","useChangeLecturerInfoMutation","useChangeLecturerFacultyMutation","props","field","form","label","placeholder","disabled","onBlur","errors","touched","showError","Group","className","Label","htmlFor","onChange","selectedOption","selectedValue","value","changeEvent","target","render","msg","Control","Feedback","searchFaculties","groupType","faculty","getFacultyInfo","getFacultyLecturers","addNewFaculty","facultyName","removeFaculty","changeFacultyName","groupName","changeFacultyDisplayId","changeFacultyAdmin","adminId","useSearchFacultiesMutation","useGetFacultyInfoQuery","useGetFacultyLecturersQuery","useAddNewFacultyMutation","useRemoveFacultyMutation","useChangeFacultyNameMutation","useChangeFacultyDisplayIdMutation","useChangeFacultyAdminMutation","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","EditFieldModal","isNumber","singleField","InputField","FacultyAddModal","triggerAdd","dispatch","useDispatch","unwrap","setSelectedFacultyId","Modal","Form","Button","Spinner","FacultySearchCard","trigger","data","selectedFacultyId","useSelector","selectedFacultyIdSelector","addModal","setAddModal","FacultyDetailCard","facultyInfo","isFetching","triggerSearchLecturers","triggerRemoveFaculty","triggerRename","triggerChangeId","triggerChangeAdmin","showRenameModal","setShowRenameModal","showChangeIdModal","setShowChangeIdModal","showChangeAdminModal","setShowChangeAdminModal","adminName","newGroupName","newAdminId","lecturers","FacultyListCard","userName","FacultyPage","Col","md"],"mappings":"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","file":"static/js/6.02eee1b3.chunk.js","sourcesContent":["import { Modal, Button, Spinner } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst ConfirmationModal = ({\n  show,\n  handleClose,\n  handleSubmit,\n  handleError,\n  title,\n  content,\n}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleClick = async () => {\n    if (handleSubmit) {\n      setIsSubmitting(true)\n      try {\n        await handleSubmit()\n      } catch (e) {\n        if (handleError) {\n          handleError(e)\n        }\n      }\n    }\n    // handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{content}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleClick}>\n          {isSubmitting && (\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\n          )}\n          OK\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmationModal\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\n\nconst validationSchema = Yup.object().shape({\n  itemId: Yup.string().required('This field is required.'),\n})\n\nconst initialValues = {\n  itemId: '',\n}\n\nconst SelectItemModal = ({\n  title,\n  show,\n  handleClose,\n  handleSubmit,\n  handleSearchItems,\n}) => {\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values.itemId)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('itemId', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"itemId\"\n                component={AsyncSelectField}\n                loadOptions={handleSearchItems}\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default SelectItemModal\n","import {\n  COURSE,\n  COURSE_LIST,\n  FACULTY,\n  LECTURER,\n  LECTURER_LIST,\n  MENTORGROUP,\n  MENTORGROUP_LIST,\n} from '../tagConstants'\nimport { apiSlice } from '../index'\n\nconst extendedApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    searchLecturers: builder.mutation({\n      query: (queryStr) => ({\n        url: '/user',\n        method: 'GET',\n        params: { role: 'LECTURER', query: queryStr || '' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result.map((lecturer) => ({ type: LECTURER, id: lecturer.id })),\n    }),\n\n    getLecturerInfo: builder.query({\n      query: (lecturerId) => ({\n        url: '/user/info',\n        method: 'GET',\n        params: { userId: lecturerId },\n      }),\n      providesTags: (result, error, arg) => [{ type: LECTURER, id: arg }],\n    }),\n\n    getLecturerMentorGroups: builder.query({\n      query: (lecturerId) => ({\n        url: '/lecturer/mentor',\n        method: 'GET',\n        params: { lecturerId },\n      }),\n      providesTags: (result = {}, error, arg) =>\n        result\n          .map((mentorGroup) => ({\n            type: MENTORGROUP,\n            id: mentorGroup.groupId,\n          }))\n          .concat([{ type: MENTORGROUP_LIST, id: arg }]),\n    }),\n\n    getLecturerFaculty: builder.query({\n      query: (lecturerId) => ({\n        url: '/user/faculty',\n        method: 'GET',\n        params: { userId: lecturerId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: FACULTY, id: result.groupId },\n        { type: LECTURER, id: arg },\n      ],\n    }),\n\n    getLecturerCourses: builder.query({\n      query: (lecturerId) => ({\n        url: '/lecturer/course',\n        method: 'GET',\n        params: { lecturerId },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result\n          .map((course) => ({\n            type: COURSE,\n            id: course.groupId,\n          }))\n          .concat([{ type: COURSE_LIST, id: arg }]),\n    }),\n\n    addNewLecturer: builder.mutation({\n      query: ({ name, password, address, facultyId, displayId }) => ({\n        url: '/user',\n        method: 'POST',\n        body: {\n          name,\n          password,\n          role: 'LECTURER',\n          address,\n          facultyId,\n          displayId,\n        },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: LECTURER_LIST, id: arg.facultyId },\n      ],\n    }),\n\n    removeLecturer: builder.mutation({\n      query: ({ userId }) => ({\n        url: '/user',\n        method: 'DELETE',\n        params: { userId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: LECTURER, id: arg.userId },\n      ],\n    }),\n\n    changeLecturerInfo: builder.mutation({\n      query: ({ id, name, address, displayId }) => ({\n        url: '/user',\n        method: 'PUT',\n        body: { id, name, address, displayId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        {\n          type: LECTURER,\n          id: arg.id,\n        },\n      ],\n    }),\n\n    changeLecturerFaculty: builder.mutation({\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\n        url: '/user/group',\n        method: 'PUT',\n        body: {\n          userId: id,\n          currentGroupId: currentFacultyId,\n          newGroupId: newFacultyId,\n        },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: LECTURER, id: arg.id },\n        { type: LECTURER_LIST, id: arg.currentFacultyId },\n        { type: LECTURER_LIST, id: arg.newFacultyId },\n      ],\n    }),\n  }),\n})\n\nexport const {\n  useSearchLecturersMutation,\n  useGetLecturerMentorGroupsQuery,\n  useGetLecturerCoursesQuery,\n  useGetLecturerFacultyQuery,\n  useGetLecturerInfoQuery,\n  useAddNewLecturerMutation,\n  useRemoveLecturerMutation,\n  useChangeLecturerInfoMutation,\n  useChangeLecturerFacultyMutation,\n} = extendedApi\n","import { ErrorMessage } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport AsyncSelect from 'react-select/async'\n\nfunction AsyncSelectField(props) {\n  const { field, form, label, placeholder, disabled, loadOptions } = props\n  const { name, onBlur } = field\n  const { errors, touched } = form\n  const showError = errors[name] && touched[name]\n\n  const handleSelectedOptionChange = (selectedOption) => {\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\n    const changeEvent = {\n      target: {\n        name: name,\n        value: selectedValue,\n      },\n    }\n    field.onChange(changeEvent)\n  }\n\n  return (\n    <Form.Group className=\"mb-3\">\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\n      <AsyncSelect\n        id={name}\n        onChange={handleSelectedOptionChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        loadOptions={loadOptions}\n        disabled={disabled}\n        className={showError ? 'is-invalid' : ''}\n      />\n      <ErrorMessage\n        name={name}\n        render={(msg) => (\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\n        )}\n      />\n    </Form.Group>\n  )\n}\n\nexport default AsyncSelectField\n","import { FACULTY, LECTURER, LECTURER_LIST } from '../tagConstants'\nimport { apiSlice } from '../index'\n\nconst extendedApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    searchFaculties: builder.mutation({\n      query: (queryStr) => ({\n        url: '/group',\n        method: 'GET',\n        params: { query: queryStr || '', groupType: 'FACULTY' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result.map((faculty) => ({ type: FACULTY, id: faculty.groupId })),\n    }),\n\n    getFacultyInfo: builder.query({\n      query: (groupId) => ({\n        url: '/faculty/info',\n        method: 'GET',\n        params: { groupId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: FACULTY, id: result.groupId },\n      ],\n    }),\n\n    getFacultyLecturers: builder.query({\n      query: (groupId) => ({\n        url: '/group/user',\n        method: 'GET',\n        params: { groupId, role: 'LECTURER' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result\n          .map((lecturer) => ({ type: LECTURER, id: lecturer.userId }))\n          .concat([{ type: LECTURER_LIST, id: arg }]),\n    }),\n\n    addNewFaculty: builder.mutation({\n      query: ({ facultyName, displayId }) => ({\n        url: '/faculty',\n        method: 'POST',\n        body: { facultyName, displayId },\n      }),\n    }),\n\n    removeFaculty: builder.mutation({\n      query: ({ groupId }) => ({\n        url: '/group',\n        method: 'DELETE',\n        params: { groupId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n\n    changeFacultyName: builder.mutation({\n      query: ({ groupId, groupName }) => ({\n        url: '/group/name',\n        method: 'PUT',\n        body: { groupId, groupName },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n\n    changeFacultyDisplayId: builder.mutation({\n      query: ({ groupId, displayId }) => ({\n        url: '/group/displayId',\n        method: 'PUT',\n        body: { groupId, displayId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n\n    changeFacultyAdmin: builder.mutation({\n      query: ({ groupId, adminId }) => ({\n        url: '/faculty',\n        method: 'PUT',\n        body: { groupId, adminId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n  }),\n})\n\nexport const {\n  useSearchFacultiesMutation,\n  useGetFacultyInfoQuery,\n  useGetFacultyLecturersQuery,\n  useAddNewFacultyMutation,\n  useRemoveFacultyMutation,\n  useChangeFacultyNameMutation,\n  useChangeFacultyDisplayIdMutation,\n  useChangeFacultyAdminMutation,\n} = extendedApi\n","import { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\n\nconst SearchCard = ({\n  label,\n  items = [],\n  selectedItemKey,\n  keySelector,\n  nameSelector,\n  showKey,\n  onSearch,\n  onAdd,\n  onSelect,\n}) => {\n  useEffect(() => {\n    if (!selectedItemKey) {\n      // On mount, if no item selected, get something\n      onSearch(selectedItemKey)\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  const [query, setQuery] = useState('')\n\n  const listItems = items\n    .filter(\n      (item) =>\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\n    )\n    .map((item) => {\n      const itemKey = keySelector(item)\n      const itemName = nameSelector(item)\n      return (\n        <ListGroup.Item\n          key={itemKey}\n          active={itemKey === selectedItemKey}\n          action\n          onClick={() => onSelect(item)}\n          className=\"user-select-none\"\n        >\n          <div className=\"d-flex justify-content-between\">\n            {itemName}\n            {showKey ? <div>{itemKey}</div> : null}\n          </div>\n        </ListGroup.Item>\n      )\n    })\n\n  return (\n    <Card border=\"secondary\">\n      <Card.Header className=\"d-flex justify-content-between\">\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\n          <Form.Control\n            placeholder=\"placeholder\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n          />\n        </FloatingLabel>\n        <Button\n          variant=\"secondary\"\n          className=\"mx-1\"\n          onClick={() => {\n            onSearch(query)\n            setQuery('')\n          }}\n        >\n          Find\n        </Button>\n        <Button variant=\"secondary\" onClick={onAdd}>\n          Add\n        </Button>\n      </Card.Header>\n      {listItems.length !== 0 ? (\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\n      ) : null}\n      <Card.Footer className=\"text-muted text-center\">\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default SearchCard\n","import {\n  Card,\n  Form,\n  Col,\n  Row,\n  NavLink,\n  ListGroup,\n  DropdownButton,\n  Dropdown,\n} from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst DetailCard = (props) => {\n  const {\n    label,\n    buttons = [],\n    fields = [],\n    links = [],\n    listItems = [],\n    listItemLabel,\n    keySelector,\n    nameSelector,\n    linkSelector,\n  } = props\n  const navigate = useNavigate()\n  const itemList = listItems.map((item) => (\n    <ListGroup.Item key={keySelector(item)}>\n      <div className=\"d-flex justify-content-between\">\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\n        <Link\n          to={linkSelector(item)}\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\n      </div>\n    </ListGroup.Item>\n  ))\n\n  return (\n    <Card border=\"secondary\">\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\n        <DropdownButton variant=\"secondary\" title=\"Options\">\n          {buttons.map(({ label, onClick }) => (\n            <Dropdown.Item key={label} onClick={onClick}>\n              {label}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      </Card.Header>\n      <Card.Body>\n        {fields.map(({ label, content }) => (\n          <Form.Group key={label} as={Row} className=\"mb-1\">\n            <Form.Label column sm=\"3\">\n              {label}:\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control\n                plaintext\n                readOnly\n                className={content ? '' : 'text-muted'}\n                value={content ?? '[not available]'}\n              />\n            </Col>\n          </Form.Group>\n        ))}\n        {links.map(({ label, content, destination }) => (\n          <Form.Group key={label} as={Row} className=\"mb-1\">\n            <Form.Label column sm=\"3\">\n              {label}:\n            </Form.Label>\n            <Col sm=\"9\">\n              {content ? (\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\n                  {content}\n                </NavLink>\n              ) : (\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\n              )}\n            </Col>\n          </Form.Group>\n        ))}\n      </Card.Body>\n      {itemList.length !== 0 ? (\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\n      ) : null}\n    </Card>\n  )\n}\n\nexport default DetailCard\n","import { Fragment, useState } from 'react'\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport ConfirmationModal from '../modals/ConfirmationModal'\nimport SelectItemModal from '../modals/SelectItemModal'\n\nconst ListCard = ({\n  label,\n  items,\n  keySelector,\n  nameSelector,\n  linkSelector,\n  showButtons,\n  handleRemove,\n  handleAdd,\n  handleSearchItems,\n}) => {\n  const [query, setQuery] = useState('')\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\n  const [showAddModal, setShowAddModal] = useState()\n  const itemKeys = items.map((item) => keySelector(item))\n\n  const listItems = items\n    .filter(\n      (item) =>\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\n    )\n    .map((item) => {\n      const itemKey = keySelector(item)\n      const itemName = nameSelector(item)\n      const isActive = itemKey === keySelector(selectedItem)\n      return (\n        <ListGroup.Item\n          key={itemKey}\n          action\n          className=\"user-select-none\"\n          onClick={() => setSelectedItem(item)}\n          active={isActive}\n        >\n          <div className=\"d-flex justify-content-between\">\n            {itemName}\n            <Link\n              style={\n                isActive\n                  ? {\n                      color: '#fff',\n                    }\n                  : {}\n              }\n              to={linkSelector(item)}\n            >{`Go to ${label.toLowerCase()}`}</Link>\n          </div>\n        </ListGroup.Item>\n      )\n    })\n\n  return (\n    <Fragment>\n      <Card border=\"secondary\">\n        <Card.Header className=\"d-flex justify-content-between\">\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\n            <Form.Control\n              placeholder=\"placeholder\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </FloatingLabel>\n          {showButtons ? (\n            <>\n              <Button\n                variant=\"secondary\"\n                className=\"mx-1\"\n                onClick={() => setShowAddModal(true)}\n              >\n                Add\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  if (keySelector(selectedItem)) {\n                    setShowRemoveWarning(true)\n                  } else {\n                    setShowSelectWarning(true)\n                  }\n                }}\n              >\n                Remove\n              </Button>\n            </>\n          ) : null}\n        </Card.Header>\n        {listItems.length !== 0 ? (\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\n        ) : null}\n        <Card.Footer className=\"text-muted text-center\">\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\n        </Card.Footer>\n      </Card>\n      <ConfirmationModal\n        title=\"Warning\"\n        content={`Please select one ${label.toLowerCase()} from the list.`}\n        show={showSelectWarning}\n        handleClose={() => setShowSelectWarning(false)}\n      />\n      <ConfirmationModal\n        title={`Remove ${label.toLowerCase()}?`}\n        content=\"This action cannot be undone. List will be updated.\"\n        show={showRemoveWarning}\n        handleClose={() => setShowRemoveWarning(false)}\n        handleSubmit={async () => {\n          await handleRemove(selectedItem)\n        }}\n      />\n      <SelectItemModal\n        title={`Add new ${label.toLowerCase()}`}\n        show={showAddModal}\n        handleClose={() => setShowAddModal(false)}\n        handleSubmit={handleAdd}\n        handleSearchItems={async (query) => {\n          const itemList = await handleSearchItems(query)\n          return itemList.filter((item) => !itemKeys.includes(item.value))\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default ListCard\n","import { useEffect, useRef } from 'react'\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n\nexport default usePrevious\n","import { useEffect } from 'react'\nimport { useMatch, useNavigate } from 'react-router'\nimport usePrevious from './usePrevious'\n\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\n  const navigate = useNavigate()\n  const match = useMatch('/:resource/:itemId') // Can be customized\n  const itemIdParam = match?.params?.itemId\n  const resourceParam = match?.params?.resource\n  const prevSelectedId = usePrevious(selectedItemId)\n\n  useEffect(() => {\n    if (selectedItemId) {\n      if (itemIdParam) {\n        if (itemIdParam !== selectedItemId) {\n          if (prevSelectedId) {\n            if (itemIdParam === prevSelectedId) {\n              // Update url based on selected item\n              navigate(selectedItemId.toString())\n            } else {\n              // Weird?\n              console.log('Weird?', {\n                itemIdParam,\n                prevSelectedId,\n                selectedItemId,\n              })\n            }\n          } else {\n            // Link from another resource\n            setSelectedItemId(itemIdParam)\n          }\n        } else {\n          // In sync, nothing changes, good!\n        }\n      } else {\n        // First select\n        navigate(selectedItemId.toString())\n      }\n    } else {\n      if (prevSelectedId) {\n        if (prevSelectedId === itemIdParam) {\n          // Current item deleted, selected ID is null\n          navigate(`/${resourceParam}`) // Clear param\n        } else {\n          // Weird?\n          console.log('Weird?', {\n            itemIdParam,\n            prevSelectedId,\n            selectedItemId,\n          })\n        }\n      } else {\n        if (itemIdParam) {\n          // Fresh load selected item from entered url\n          setSelectedItemId(itemIdParam)\n        } else {\n          // Fresh load with no param\n        }\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedItemId, itemIdParam])\n}\n\nexport default useItemParam\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport InputField from '../../custom-fields/InputField'\n\nconst EditFieldModal = ({\n  title,\n  show,\n  handleClose,\n  handleSubmit,\n  initialValues = '',\n  isNumber = false,\n}) => {\n  const validationSchema = Yup.object().shape({\n    singleField: isNumber\n      ? Yup.number().required('This field is required.')\n      : Yup.string().required('This field is required.'),\n  })\n\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values.singleField)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('singleField', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={{\n          singleField: initialValues,\n        }}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"singleField\"\n                component={InputField}\n                type={isNumber ? 'number' : 'text'}\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default EditFieldModal\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport InputField from '../../../../components/custom-fields/InputField'\nimport { useAddNewFacultyMutation } from '../../../../app/api/group/facultySlice'\nimport { setSelectedFacultyId } from '../../../../app/pageSlice'\nimport { useDispatch } from 'react-redux'\n\nconst validationSchema = Yup.object().shape({\n  displayId: Yup.string().required('This field is required.'),\n  facultyName: Yup.string().required('This field is required.'),\n})\n\nconst initialValues = {\n  displayId: '',\n  facultyName: '',\n}\n\nconst FacultyAddModal = (props) => {\n  const { show, handleClose } = props\n  const [triggerAdd] = useAddNewFacultyMutation()\n  const dispatch = useDispatch()\n\n  const handleSubmit = async (values, actions) => {\n    try {\n      const { groupId } = await triggerAdd(values).unwrap()\n      handleClose()\n      dispatch(setSelectedFacultyId(groupId))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add new faculty</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"facultyName\"\n                component={InputField}\n                label=\"New faculty name\"\n                placeholder=\"School of Computer Science and Engineering...\"\n              />\n              <FastField\n                name=\"displayId\"\n                component={InputField}\n                label=\"New faculty ID\"\n                placeholder=\"CSE...\"\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default FacultyAddModal\n","import { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSearchFacultiesMutation } from '../../../../app/api/group/facultySlice'\nimport {\n  selectedFacultyIdSelector,\n  setSelectedFacultyId,\n} from '../../../../app/pageSlice'\nimport SearchCard from '../../../../components/SearchCard'\nimport FacultyAddModal from './FacultyAddModal'\n\nconst FacultySearchCard = () => {\n  const dispatch = useDispatch()\n  const [trigger, query] = useSearchFacultiesMutation()\n  const { data } = query\n  const selectedFacultyId = useSelector(selectedFacultyIdSelector)\n  const [addModal, setAddModal] = useState(false)\n\n  return (\n    <Fragment>\n      <SearchCard\n        label=\"Faculty\"\n        items={data}\n        selectedItemKey={selectedFacultyId}\n        keySelector={(faculty) => faculty.groupId}\n        nameSelector={(faculty) => faculty.groupName}\n        showKey={false}\n        onSearch={(query) => trigger(query)}\n        onAdd={() => setAddModal(true)}\n        onSelect={(faculty) => dispatch(setSelectedFacultyId(faculty.groupId))}\n      />\n      <FacultyAddModal show={addModal} handleClose={() => setAddModal(false)} />\n    </Fragment>\n  )\n}\n\nexport default FacultySearchCard\n","import { Fragment, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useChangeFacultyAdminMutation,\n  useChangeFacultyDisplayIdMutation,\n  useChangeFacultyNameMutation,\n  useGetFacultyInfoQuery,\n  useRemoveFacultyMutation,\n} from '../../../../app/api/group/facultySlice'\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\nimport { setSelectedFacultyId } from '../../../../app/pageSlice'\nimport DetailCard from '../../../../components/DetailCard'\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\nimport EditFieldModal from '../../../../components/modals/EditFieldModal'\nimport SelectItemModal from '../../../../components/modals/SelectItemModal'\n\nconst FacultyDetailCard = ({ selectedFacultyId }) => {\n  const { data: facultyInfo, isFetching } =\n    useGetFacultyInfoQuery(selectedFacultyId)\n  const [triggerSearchLecturers] = useSearchLecturersMutation()\n  const [triggerRemoveFaculty] = useRemoveFacultyMutation()\n  const [triggerRename] = useChangeFacultyNameMutation()\n  const [triggerChangeId] = useChangeFacultyDisplayIdMutation()\n  const [triggerChangeAdmin] = useChangeFacultyAdminMutation()\n\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\n  const [showRenameModal, setShowRenameModal] = useState(false)\n  const [showChangeIdModal, setShowChangeIdModal] = useState(false)\n  const [showChangeAdminModal, setShowChangeAdminModal] = useState(false)\n\n  const dispatch = useDispatch()\n\n  if (isFetching) {\n    return <></>\n  }\n\n  return (\n    <Fragment>\n      <DetailCard\n        label=\"Faculty\"\n        fields={[\n          { label: 'Faculty name', content: facultyInfo.facultyName },\n          { label: 'Faculty ID', content: facultyInfo.displayId },\n        ]}\n        links={[\n          {\n            label: 'Admin',\n            content: facultyInfo.adminName,\n            destination: `/lecturer/${facultyInfo.adminId || ''}`,\n          },\n        ]}\n        buttons={[\n          {\n            label: 'Rename faculty',\n            onClick: () => {\n              setShowRenameModal(true)\n            },\n          },\n          {\n            label: 'Change faculty ID',\n            onClick: () => {\n              setShowChangeIdModal(true)\n            },\n          },\n          {\n            label: 'Change faculty admin',\n            onClick: () => {\n              setShowChangeAdminModal(true)\n            },\n          },\n          {\n            label: 'Remove faculty',\n            onClick: () => {\n              setShowRemoveWarning(true)\n            },\n          },\n        ]}\n      />\n      <EditFieldModal\n        title=\"Change faculty name\"\n        show={showRenameModal}\n        handleClose={() => {\n          setShowRenameModal(false)\n        }}\n        handleSubmit={async (newGroupName) => {\n          await triggerRename({\n            groupId: facultyInfo.groupId,\n            groupName: newGroupName,\n          })\n        }}\n        initialValues={facultyInfo.facultyName}\n      />\n      <EditFieldModal\n        title=\"Change faculty ID\"\n        show={showChangeIdModal}\n        handleClose={() => {\n          setShowChangeIdModal(false)\n        }}\n        handleSubmit={async (newFacultyId) => {\n          await triggerChangeId({\n            groupId: facultyInfo.groupId,\n            displayId: newFacultyId,\n          })\n        }}\n        initialValues={facultyInfo.displayId}\n      />\n      <SelectItemModal\n        title=\"Change faculty admin\"\n        show={showChangeAdminModal}\n        handleClose={() => {\n          setShowChangeAdminModal(false)\n        }}\n        handleSubmit={async (newAdminId) => {\n          await triggerChangeAdmin({\n            groupId: facultyInfo.groupId,\n            adminId: newAdminId,\n          })\n        }}\n        handleSearchItems={async (query) => {\n          const lecturers = await triggerSearchLecturers(query).unwrap()\n          return lecturers.map((lecturer) => ({\n            value: lecturer.id,\n            label: lecturer.name,\n          }))\n        }}\n      />\n      <ConfirmationModal\n        title=\"Remove faculty?\"\n        content=\"All students and lecturers will be removed from this faculty too.\"\n        show={showRemoveWarning}\n        handleClose={() => setShowRemoveWarning(false)}\n        handleSubmit={async () => {\n          dispatch(setSelectedFacultyId(null))\n          await triggerRemoveFaculty({ groupId: facultyInfo.groupId }).unwrap()\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default FacultyDetailCard\n","import { useGetFacultyLecturersQuery } from '../../../../app/api/group/facultySlice'\nimport ListCard from '../../../../components/ListCard'\n\nconst FacultyListCard = ({ selectedFacultyId }) => {\n  const { data: lecturers, isFetching } =\n    useGetFacultyLecturersQuery(selectedFacultyId)\n\n  if (isFetching) {\n    return <></>\n  }\n\n  return (\n    <ListCard\n      label=\"Lecturer\"\n      items={lecturers}\n      keySelector={(lecturer) => lecturer.userId}\n      nameSelector={(lecturer) => lecturer.userName}\n      linkSelector={(lecturer) => `/lecturer/${lecturer.userId}`}\n      showButtons={false}\n    />\n  )\n}\n\nexport default FacultyListCard\n","import useItemParam from '../../hooks/useItemParam'\nimport {\n  selectedFacultyIdSelector,\n  setSelectedFacultyId,\n} from '../../app/pageSlice'\nimport { Row, Col } from 'react-bootstrap'\nimport FacultySearchCard from './components/FacultySearchCard'\nimport FacultyDetailCard from './components/FacultyDetailCard'\nimport FacultyListCard from './components/FacultyListCard'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst FacultyPage = () => {\n  const dispatch = useDispatch()\n  const selectedFacultyId = useSelector(selectedFacultyIdSelector)\n\n  useItemParam({\n    selectedItemId: selectedFacultyId,\n    setSelectedItemId: (facultyId) => {\n      dispatch(setSelectedFacultyId(facultyId))\n    },\n  })\n\n  return (\n    <Row className=\"justify-content-md-center my-3\">\n      <Col md=\"3\">\n        <FacultySearchCard />\n      </Col>\n      {selectedFacultyId ? (\n        <>\n          <Col md=\"4\">\n            <FacultyDetailCard selectedFacultyId={selectedFacultyId} />\n          </Col>\n          <Col md=\"4\">\n            <FacultyListCard selectedFacultyId={selectedFacultyId} />\n          </Col>\n        </>\n      ) : (\n        <>\n          <Col md=\"4\"></Col>\n          <Col md=\"4\"></Col>\n        </>\n      )}\n    </Row>\n  )\n}\n\nexport default FacultyPage\n"],"sourceRoot":""}