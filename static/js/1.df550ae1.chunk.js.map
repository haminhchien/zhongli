{"version":3,"sources":["components/modals/ConfirmationModal/index.jsx","components/modals/SelectItemModal/index.jsx","components/custom-fields/AsyncSelectField/index.jsx","app/api/group/facultySlice.js","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","app/api/user/studentSlice.js","components/modals/ChangePasswordModal/index.jsx","components/modals/EditUserInfoModal/index.jsx"],"names":["ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","name","component","AsyncSelectField","loadOptions","type","props","field","form","label","placeholder","disabled","onBlur","errors","touched","showError","Group","className","Label","htmlFor","id","onChange","selectedOption","selectedValue","value","changeEvent","target","render","msg","Control","Feedback","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchFaculties","mutation","query","queryStr","url","method","params","groupType","providesTags","result","map","faculty","FACULTY","groupId","getFacultyInfo","getFacultyLecturers","arg","lecturer","LECTURER","userId","concat","LECTURER_LIST","addNewFaculty","body","facultyName","displayId","removeFaculty","invalidatesTags","changeFacultyName","groupName","error","changeFacultyDisplayId","changeFacultyAdmin","adminId","useSearchFacultiesMutation","useGetFacultyInfoQuery","useGetFacultyLecturersQuery","useAddNewFacultyMutation","useRemoveFacultyMutation","useChangeFacultyNameMutation","useChangeFacultyDisplayIdMutation","useChangeFacultyAdminMutation","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","searchStudents","student","STUDENT","getStudentInfo","studentId","getStudentMentorGroup","MENTORGROUP","getStudentFaculty","getStudentCourses","course","COURSE","COURSE_LIST","addNewStudent","password","address","facultyId","removeStudent","addStudentCourse","STUDENT_LIST","removeStudentCourse","changeUserPassword","changeStudentInfo","changeStudentMentor","currentGroupId","currentMentorGroupId","newGroupId","newMentorGroupId","changeStudentFaculty","currentFacultyId","newFacultyId","useSearchStudentsMutation","useGetStudentMentorGroupQuery","useGetStudentCoursesQuery","useGetStudentFacultyQuery","useGetStudentInfoQuery","useAddNewStudentMutation","useRemoveStudentMutation","useAddStudentCourseMutation","useRemoveStudentCourseMutation","useChangeUserPasswordMutation","useChangeStudentInfoMutation","useChangeStudentMentorMutation","useChangeStudentFacultyMutation","passwordConfirmation","test","this","parent","ChangePasswordModal","InputField","EditUserInfoModal"],"mappings":"4LAgDeA,IA7CW,SAAC,GAOpB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QACI,EACoCC,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGEC,EAAW,uCAAG,sBAAAC,EAAA,0DACdR,EADc,wBAEhBM,GAAgB,GAFA,kBAIRN,IAJQ,uDAMVC,GACFA,EAAY,EAAD,IAPC,yDAAH,qDAcjB,OACE,eAAC,IAAD,CAAOH,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAMW,KAAP,UAAaV,IACb,eAAC,IAAMW,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAUC,QAAST,EAAnC,UACGF,GACC,cAAC,IAAD,CAASY,UAAU,SAASC,GAAG,OAAOC,KAAK,SAASC,KAAK,OAF7D,gB,iIChCFC,EAAmBC,MAAaC,MAAM,CAC1CC,OAAQF,MAAaG,SAAS,6BAG1BC,EAAgB,CACpBF,OAAQ,IAmEKG,IAhES,SAAC,GAMlB,IALLzB,EAKI,EALJA,MACAJ,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACA4B,EACI,EADJA,kBAEMC,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAvB,EAAA,+EAEPR,EAAa8B,EAAON,QAFb,OAGbzB,IAHa,+CAKbiC,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOnC,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEwB,cAAeA,EACfG,SAAUA,EACVR,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAYlC,aACtBoC,QAASF,EAAYG,YAHvB,UAKE,cAAC,IAAMxB,KAAP,UACE,cAAC,IAAD,CACEyB,KAAK,SACLC,UAAWC,IACXC,YAAab,MAIjB,eAAC,IAAMd,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAU2B,KAAK,SAA/B,UACGR,EAAY7B,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,iCC1Dd,oCA2CeoB,IAvCf,SAA0BG,GAAQ,IACxBC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,KAAMC,EAA8CH,EAA9CG,MAAOC,EAAuCJ,EAAvCI,YAAaC,EAA0BL,EAA1BK,SAAUP,EAAgBE,EAAhBF,YAC3CH,EAAiBM,EAAjBN,KAAMW,EAAWL,EAAXK,OACNC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACVC,EAAYF,EAAOZ,IAASa,EAAQb,GAa1C,OACE,eAAC,IAAKe,MAAN,CAAYC,UAAU,OAAtB,UACGR,GAAS,cAAC,IAAKS,MAAN,CAAYC,QAASlB,EAArB,SAA4BQ,IACtC,cAAC,IAAD,CACEW,GAAInB,EACJoB,SAhB6B,SAACC,GAClC,IAAMC,EAAgBD,EAAiBA,EAAeE,MAAQF,EACxDG,EAAc,CAClBC,OAAQ,CACNzB,KAAMA,EACNuB,MAAOD,IAGXhB,EAAMc,SAASI,IASXb,OAAQA,EACRF,YAAaA,EACbN,YAAaA,EACbO,SAAUA,EACVM,UAAWF,EAAY,aAAe,KAExC,cAAC,IAAD,CACEd,KAAMA,EACN0B,OAAQ,SAACC,GAAD,OACN,cAAC,IAAKC,QAAQC,SAAd,CAAuBzB,KAAK,UAA5B,SAAuCuB,Y,iCCpCjD,4RAGMG,EAHN,MAGoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvBC,gBAAiBD,EAAQE,SAAS,CAChCC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,SACLC,OAAQ,MACRC,OAAQ,CAAEJ,MAAOC,GAAY,GAAII,UAAW,aAE9CC,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAACC,GAAD,MAAc,CAAE1C,KAAM2C,IAAS5B,GAAI2B,EAAQE,eAG1DC,eAAgBf,EAAQG,MAAM,CAC5BA,MAAO,SAACW,GAAD,MAAc,CACnBT,IAAK,gBACLC,OAAQ,MACRC,OAAQ,CAAEO,aAEZL,aAAc,eAACC,EAAD,uDAAU,GAAV,MAA6B,CACzC,CAAExC,KAAM2C,IAAS5B,GAAIyB,EAAOI,aAIhCE,oBAAqBhB,EAAQG,MAAM,CACjCA,MAAO,SAACW,GAAD,MAAc,CACnBT,IAAK,cACLC,OAAQ,MACRC,OAAQ,CAAEO,UAASnE,KAAM,cAE3B8D,aAAc,eAACC,EAAD,uDAAU,GAAWO,EAArB,8CACZP,EACGC,KAAI,SAACO,GAAD,MAAe,CAAEhD,KAAMiD,IAAUlC,GAAIiC,EAASE,WAClDC,OAAO,CAAC,CAAEnD,KAAMoD,IAAerC,GAAIgC,QAG1CM,cAAevB,EAAQE,SAAS,CAC9BC,MAAO,kBAAiC,CACtCE,IAAK,WACLC,OAAQ,OACRkB,KAAM,CAAEC,YAHH,EAAGA,YAGaC,UAHhB,EAAgBA,eAOzBC,cAAe3B,EAAQE,SAAS,CAC9BC,MAAO,kBAAkB,CACvBE,IAAK,SACLC,OAAQ,SACRC,OAAQ,CAAEO,QAHL,EAAGA,WAKVc,gBAAiB,eAAqBX,EAArB,6CAA6B,CAC5C,CAAE/C,KAAM2C,IAAS5B,GAAIgC,EAAIH,aAI7Be,kBAAmB7B,EAAQE,SAAS,CAClCC,MAAO,kBAA6B,CAClCE,IAAK,cACLC,OAAQ,MACRkB,KAAM,CAAEV,QAHH,EAAGA,QAGSgB,UAHZ,EAAYA,aAKnBF,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE/C,KAAM2C,IAAS5B,GAAIgC,EAAIH,aAI7BkB,uBAAwBhC,EAAQE,SAAS,CACvCC,MAAO,kBAA6B,CAClCE,IAAK,mBACLC,OAAQ,MACRkB,KAAM,CAAEV,QAHH,EAAGA,QAGSY,UAHZ,EAAYA,aAKnBE,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE/C,KAAM2C,IAAS5B,GAAIgC,EAAIH,aAI7BmB,mBAAoBjC,EAAQE,SAAS,CACnCC,MAAO,kBAA2B,CAChCE,IAAK,WACLC,OAAQ,MACRkB,KAAM,CAAEV,QAHH,EAAGA,QAGSoB,QAHZ,EAAYA,WAKnBN,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE/C,KAAM2C,IAAS5B,GAAIgC,EAAIH,iBAO/BqB,EAQEvC,EARFuC,2BACAC,EAOExC,EAPFwC,uBACAC,EAMEzC,EANFyC,4BACAC,EAKE1C,EALF0C,yBACAC,EAIE3C,EAJF2C,yBACAC,EAGE5C,EAHF4C,6BACAC,EAEE7C,EAFF6C,kCACAC,EACE9C,EADF8C,+B,uGChBaC,IAhFI,SAAC,GAUb,IATLrE,EASI,EATJA,MASI,IARJsE,aAQI,MARI,GAQJ,EAPJC,EAOI,EAPJA,gBACAC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEAC,qBAAU,WACHP,GAEHI,EAASJ,KAGV,IAPC,MASsBjH,mBAAS,IAT/B,mBASGuE,EATH,KASUkD,EATV,KAWEC,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAASvD,EAAMsD,gBAC/CV,EAAaS,GAAMC,cAAcC,SAASvD,EAAMsD,kBAEnD9C,KAAI,SAAC6C,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GAC9B,OACE,cAAC,IAAUK,KAAX,CAEEC,OAAQH,IAAYd,EACpBkB,QAAM,EACNvH,QAAS,kBAAM2G,EAASK,IACxB1E,UAAU,mBALZ,SAOE,sBAAKA,UAAU,iCAAf,UACG8E,EACAZ,EAAU,8BAAMW,IAAiB,SAR/BA,MAcb,OACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAK9H,OAAN,CAAa4C,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcR,MAAOA,EAA9C,SACE,cAAC,IAAKoB,QAAN,CACEnB,YAAY,cACZc,MAAOc,EACPjB,SAAU,SAAC+E,GAAD,OAAOZ,EAASY,EAAE1E,OAAOF,YAGvC,cAAC,IAAD,CACE9C,QAAQ,YACRuC,UAAU,OACVtC,QAAS,WACPyG,EAAS9C,GACTkD,EAAS,KALb,kBAUA,cAAC,IAAD,CAAQ9G,QAAQ,YAAYC,QAAS0G,EAArC,oBAIoB,IAArBI,EAAUY,OACT,cAAC,IAAD,CAAW3H,QAAQ,QAAnB,SAA4B+G,IAC1B,KACJ,cAAC,IAAKhH,OAAN,CAAawC,UAAU,yBAAvB,yBACYwE,EAAUY,OADtB,YACgC5F,EAAM6F,sB,iCC9E5C,iGAwFeC,IA5EI,SAACjG,GAAW,IAE3BG,EASEH,EATFG,MAF0B,EAWxBH,EARFkG,eAH0B,MAGhB,GAHgB,IAWxBlG,EAPFmG,cAJ0B,MAIjB,GAJiB,IAWxBnG,EANFoG,aAL0B,MAKlB,GALkB,IAWxBpG,EALFmF,iBAN0B,MAMd,GANc,EAO1BkB,EAIErG,EAJFqG,cACA1B,EAGE3E,EAHF2E,YACAC,EAEE5E,EAFF4E,aACA0B,EACEtG,EADFsG,aAEIC,EAAWC,cACXC,EAAWtB,EAAU3C,KAAI,SAAC6C,GAAD,aAC7B,cAAC,IAAUK,KAAX,UACE,sBAAK/E,UAAU,iCAAf,oBACGiE,EAAaS,UADhB,2BACqCgB,EAAcL,cADnD,KAEE,cAAC,IAAD,CACEU,GAAIJ,EAAajB,GADnB,yBAEWgB,EAAcL,qBALRrB,EAAYU,OAUnC,OACE,eAAC,IAAD,CAAMQ,OAAO,YAAb,UACE,eAAC,IAAK9H,OAAN,CAAa4C,UAAU,oDAAvB,UACE,qBAAIA,UAAU,wBAAd,UAAuCR,EAAvC,cACA,cAAC,IAAD,CAAgB/B,QAAQ,YAAYb,MAAM,UAA1C,SACG2I,EAAQ1D,KAAI,gBAAGrC,EAAH,EAAGA,MAAO9B,EAAV,EAAUA,QAAV,OACX,cAAC,IAASqH,KAAV,CAA2BrH,QAASA,EAApC,SACG8B,GADiBA,WAM1B,eAAC,IAAKjC,KAAN,WACGiI,EAAO3D,KAAI,gBAAGrC,EAAH,EAAGA,MAAO3C,EAAV,EAAUA,QAAV,OACV,eAAC,IAAKkD,MAAN,CAAwBnC,GAAIoI,IAAKhG,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAYgG,QAAM,EAACC,GAAG,IAAtB,UACG1G,EADH,OAGA,cAAC,IAAD,CAAK0G,GAAG,IAAR,SACE,cAAC,IAAKtF,QAAN,CACEuF,WAAS,EACTC,UAAQ,EACRpG,UAAWnD,EAAU,GAAK,aAC1B0D,MAAK,OAAE1D,QAAF,IAAEA,IAAW,wBATP2C,MAclBiG,EAAM5D,KAAI,gBAAGrC,EAAH,EAAGA,MAAO3C,EAAV,EAAUA,QAASwJ,EAAnB,EAAmBA,YAAnB,OACT,eAAC,IAAKtG,MAAN,CAAwBnC,GAAIoI,IAAKhG,UAAU,OAA3C,UACE,eAAC,IAAKC,MAAN,CAAYgG,QAAM,EAACC,GAAG,IAAtB,UACG1G,EADH,OAGA,cAAC,IAAD,CAAK0G,GAAG,IAAR,SACGrJ,EACC,cAAC,IAAD,CAASmD,UAAU,OAAOtC,QAAS,kBAAMkI,EAASS,IAAlD,SACGxJ,IAGH,cAAC,IAAD,CAASmD,UAAU,kBAAnB,iCAVWR,SAgBA,IAApBsG,EAASV,OACR,cAAC,IAAD,CAAW3H,QAAQ,QAAnB,SAA4BqI,IAC1B,U,0JC+CKQ,IA5HE,SAAC,GAUX,IATL9G,EASI,EATJA,MACAsE,EAQI,EARJA,MACAE,EAOI,EAPJA,YACAC,EAMI,EANJA,aACA0B,EAKI,EALJA,aACAY,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAnI,EACI,EADJA,kBACI,EACsBxB,mBAAS,IAD/B,mBACGuE,EADH,KACUkD,EADV,OAEoCzH,mBAAS,IAF7C,mBAEG4J,EAFH,KAEiBC,EAFjB,OAG8C7J,oBAAS,GAHvD,mBAGG8J,EAHH,KAGsBC,EAHtB,OAI8C/J,oBAAS,GAJvD,mBAIGgK,EAJH,KAIsBC,EAJtB,OAKoCjK,qBALpC,mBAKGkK,EALH,KAKiBC,EALjB,KAMEC,EAAWpD,EAAMjC,KAAI,SAAC6C,GAAD,OAAUV,EAAYU,MAE3CF,EAAYV,EACfW,QACC,SAACC,GAAD,OACEV,EAAYU,GAAMC,cAAcC,SAASvD,EAAMsD,gBAC/CV,EAAaS,GAAMC,cAAcC,SAASvD,EAAMsD,kBAEnD9C,KAAI,SAAC6C,GACJ,IAAMG,EAAUb,EAAYU,GACtBI,EAAWb,EAAaS,GACxByC,EAAWtC,IAAYb,EAAY0C,GACzC,OACE,cAAC,IAAU3B,KAAX,CAEEE,QAAM,EACNjF,UAAU,mBACVtC,QAAS,kBAAMiJ,EAAgBjC,IAC/BM,OAAQmC,EALV,SAOE,sBAAKnH,UAAU,iCAAf,UACG8E,EACD,cAAC,IAAD,CACEsC,MACED,EACI,CACEE,MAAO,QAET,GAENtB,GAAIJ,EAAajB,GARnB,yBASWlF,EAAM6F,qBAjBdR,MAuBb,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAMK,OAAO,YAAb,UACE,eAAC,IAAK9H,OAAN,CAAa4C,UAAU,iCAAvB,UACE,cAAC,IAAD,CAAeA,UAAU,cAAcR,MAAOA,EAA9C,SACE,cAAC,IAAKoB,QAAN,CACEnB,YAAY,cACZc,MAAOc,EACPjB,SAAU,SAAC+E,GAAD,OAAOZ,EAASY,EAAE1E,OAAOF,YAGtCgG,EACC,qCACE,cAAC,IAAD,CACE9I,QAAQ,YACRuC,UAAU,OACVtC,QAAS,kBAAMuJ,GAAgB,IAHjC,iBAOA,cAAC,IAAD,CACExJ,QAAQ,YACRC,QAAS,WACHsG,EAAY0C,GACdK,GAAqB,GAErBF,GAAqB,IAN3B,uBAaA,QAEgB,IAArBrC,EAAUY,OACT,cAAC,IAAD,CAAW3H,QAAQ,QAAnB,SAA4B+G,IAC1B,KACJ,cAAC,IAAKhH,OAAN,CAAawC,UAAU,yBAAvB,yBACYwE,EAAUY,OADtB,YACgC5F,EAAM6F,oBAGxC,cAAC,IAAD,CACEzI,MAAM,UACNC,QAAO,4BAAuB2C,EAAM6F,cAA7B,mBACP7I,KAAMoK,EACNnK,YAAa,kBAAMoK,GAAqB,MAE1C,cAAC,IAAD,CACEjK,MAAK,iBAAY4C,EAAM6F,cAAlB,KACLxI,QAAQ,sDACRL,KAAMsK,EACNrK,YAAa,kBAAMsK,GAAqB,IACxCrK,aAAY,sBAAE,sBAAAQ,EAAA,sEACNsJ,EAAaE,GADP,6CAIhB,cAAC,IAAD,CACE9J,MAAK,kBAAa4C,EAAM6F,eACxB7I,KAAMwK,EACNvK,YAAa,kBAAMwK,GAAgB,IACnCvK,aAAc+J,EACdnI,kBAAiB,uCAAE,WAAO+C,GAAP,eAAAnE,EAAA,sEACMoB,EAAkB+C,GADxB,cACXyE,EADW,yBAEVA,EAASrB,QAAO,SAACC,GAAD,OAAWwC,EAAStC,SAASF,EAAKnE,WAFxC,2CAAF,6D,mDC3GV+G,MAZf,SAAqB/G,GAGnB,IAAMgH,EAAMC,mBAMZ,OAJAlD,qBAAU,WACRiD,EAAIE,QAAUlH,IACb,CAACA,IAEGgH,EAAIE,SCqDEC,IA5DM,SAAC,GAA2C,IAAD,IAAxCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAChChC,EAAWC,cACXgC,EAAQC,YAAS,sBACjBC,EAAW,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAOpG,cAAV,aAAG,EAAevD,OAC7B8J,EAAa,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAOpG,cAAV,aAAG,EAAewG,SAC/BC,EAAiBZ,EAAYK,GAEnCrD,qBAAU,WACJqD,EACEI,EACEA,IAAgBJ,IACdO,EACEH,IAAgBG,EAElBtC,EAAS+B,EAAeQ,YAGxBzJ,QAAQC,IAAI,SAAU,CACpBoJ,cACAG,iBACAP,mBAKJC,EAAkBG,IAOtBnC,EAAS+B,EAAeQ,YAGtBD,EACEA,IAAmBH,EAErBnC,EAAS,IAAD,OAAKoC,IAGbtJ,QAAQC,IAAI,SAAU,CACpBoJ,cACAG,iBACAP,mBAIAI,GAEFH,EAAkBG,KAOvB,CAACJ,EAAgBI,M,iCC7DtB,scAUMjH,EAVN,MAUoBC,EAASC,gBAAgB,CAC3CC,UAAW,SAACC,GAAD,MAAc,CACvBkH,eAAgBlH,EAAQE,SAAS,CAC/BC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,QACLC,OAAQ,MACRC,OAAQ,CAAE5D,KAAM,UAAWwD,MAAOC,GAAY,MAEhDK,aAAc,eAACC,EAAD,uDAAU,GAAV,OACZA,EAAOC,KAAI,SAACwG,GAAD,MAAc,CAAEjJ,KAAMkJ,IAASnI,GAAIkI,EAAQlI,UAG1DoI,eAAgBrH,EAAQG,MAAM,CAC5BA,MAAO,SAACmH,GAAD,MAAgB,CACrBjH,IAAK,aACLC,OAAQ,MACRC,OAAQ,CAAEa,OAAQkG,KAEpB7G,aAAc,eAACC,EAAD,uDAAU,GAAV,MAA6B,CACzC,CAAExC,KAAMkJ,IAASnI,GAAIyB,EAAOzB,QAIhCsI,sBAAuBvH,EAAQG,MAAM,CACnCA,MAAO,SAACmH,GAAD,MAAgB,CACrBjH,IAAK,kBACLC,OAAQ,MACRC,OAAQ,CAAE+G,eAEZ7G,aAAc,eAACC,EAAD,uDAAU,GAAWO,EAArB,6CAA6B,CACzC,CAAE/C,KAAMsJ,IAAavI,GAAIyB,EAAOI,SAChC,CAAE5C,KAAMkJ,IAASnI,GAAIgC,OAIzBwG,kBAAmBzH,EAAQG,MAAM,CAC/BA,MAAO,SAACmH,GAAD,MAAgB,CACrBjH,IAAK,gBACLC,OAAQ,MACRC,OAAQ,CAAEa,OAAQkG,KAEpB7G,aAAc,eAACC,EAAD,uDAAU,GAAWO,EAArB,6CAA6B,CACzC,CAAE/C,KAAM2C,IAAS5B,GAAIyB,EAAOI,SAC5B,CAAE5C,KAAMkJ,IAASnI,GAAIgC,OAIzByG,kBAAmB1H,EAAQG,MAAM,CAC/BA,MAAO,SAACmH,GAAD,MAAgB,CACrBjH,IAAK,kBACLC,OAAQ,MACRC,OAAQ,CAAE+G,eAEZ7G,aAAc,eAACC,EAAD,uDAAU,GAAWO,EAArB,8CACZP,EACGC,KAAI,SAACgH,GAAD,MAAa,CAChBzJ,KAAM0J,IACN3I,GAAI0I,EAAO7G,YAEZO,OAAO,CAAC,CAAEnD,KAAM2J,IAAa5I,GAAIgC,QAGxC6G,cAAe9H,EAAQE,SAAS,CAC9BC,MAAO,kBAAwD,CAC7DE,IAAK,QACLC,OAAQ,OACRkB,KAAM,CACJE,UAJG,EAAGA,UAKN5D,KALG,EAAcA,KAMjBiK,SANG,EAAoBA,SAOvBpL,KAAM,UACNqL,QARG,EAA8BA,QASjCC,UATG,EAAuCA,eAchDC,cAAelI,EAAQE,SAAS,CAC9BC,MAAO,kBAAiB,CACtBE,IAAK,QACLC,OAAQ,SACRC,OAAQ,CAAEa,OAHL,EAAGA,UAKVQ,gBAAiB,eAAqBX,EAArB,6CAA6B,CAC5C,CAAE/C,KAAMkJ,IAASnI,GAAIgC,EAAIG,YAI7B+G,iBAAkBnI,EAAQE,SAAS,CACjCC,MAAO,kBAA0B,CAC/BE,IAAK,cACLC,OAAQ,OACRC,OAAQ,CAAEa,OAHL,EAAGA,OAGUN,QAHb,EAAWA,WAKlBc,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE/C,KAAM2J,IAAa5I,GAAIgC,EAAIG,QAC7B,CAAElD,KAAMkK,IAAcnJ,GAAIgC,EAAIH,aAIlCuH,oBAAqBrI,EAAQE,SAAS,CACpCC,MAAO,kBAA0B,CAC/BE,IAAK,cACLC,OAAQ,SACRC,OAAQ,CAAEa,OAHL,EAAGA,OAGUN,QAHb,EAAWA,WAKlBc,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE/C,KAAM2J,IAAa5I,GAAIgC,EAAIG,QAC7B,CAAElD,KAAMkK,IAAcnJ,GAAIgC,EAAIH,aAIlCwH,mBAAoBtI,EAAQE,SAAS,CACnCC,MAAO,kBAA2B,CAChCE,IAAK,iBACLC,OAAQ,MACRkB,KAAM,CAAEJ,OAHH,EAAGA,OAGQ2G,SAHX,EAAWA,cAOpBQ,kBAAmBvI,EAAQE,SAAS,CAClCC,MAAO,kBAAuC,CAC5CE,IAAK,QACLC,OAAQ,MACRkB,KAAM,CAAEvC,GAHH,EAAGA,GAGInB,KAHP,EAAOA,KAGMkK,QAHb,EAAaA,QAGStG,UAHtB,EAAsBA,aAK7BE,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CACE/C,KAAMkJ,IACNnI,GAAIgC,EAAIhC,QAKduJ,oBAAqBxI,EAAQE,SAAS,CACpCC,MAAO,kBAAqD,CAC1DE,IAAK,cACLC,OAAQ,MACRkB,KAAM,CACJJ,OAJG,EAAGnC,GAKNwJ,eALG,EAAOC,qBAMVC,WANG,EAA6BC,oBASpChH,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CACvC,CAAE/C,KAAMkJ,IAASnI,GAAIgC,EAAIhC,IACzB,CAAEf,KAAMkK,IAAcnJ,GAAIgC,EAAIyH,sBAC9B,CAAExK,KAAMkK,IAAcnJ,GAAIgC,EAAI2H,sBAIlCC,qBAAsB7I,EAAQE,SAAS,CACrCC,MAAO,kBAA6C,CAClDE,IAAK,cACLC,OAAQ,MACRkB,KAAM,CACJJ,OAJG,EAAGnC,GAKNwJ,eALG,EAAOK,iBAMVH,WANG,EAAyBI,gBAShCnH,gBAAiB,SAAClB,EAAQqB,EAAOd,GAAhB,MAAwB,CAAC,CAAE/C,KAAMkJ,IAASnI,GAAIgC,EAAIhC,YAMvE+J,EAaEpJ,EAbFoJ,0BACAC,EAYErJ,EAZFqJ,8BACAC,EAWEtJ,EAXFsJ,0BACAC,EAUEvJ,EAVFuJ,0BACAC,EASExJ,EATFwJ,uBACAC,EAQEzJ,EARFyJ,yBACAC,EAOE1J,EAPF0J,yBACAC,EAME3J,EANF2J,4BACAC,EAKE5J,EALF4J,+BACAC,EAIE7J,EAJF6J,8BACAC,EAGE9J,EAHF8J,6BACAC,EAEE/J,EAFF+J,+BACAC,EACEhK,EADFgK,iC,gICxLI/M,EAAmBC,MAAaC,MAAM,CAC1CgL,SAAUjL,MAAaG,SAAS,2BAChC4M,qBAAsB/M,MAAagN,KACjC,kBACA,wBACA,SAAUzK,GACR,OAAO0K,KAAKC,OAAOjC,WAAa1I,OAKhCnC,EAAgB,CACpB6K,SAAU,GACV8B,qBAAsB,IAsETI,IAnEa,SAAC,GAAgD,IAA9CvO,EAA6C,EAA7CA,MAAOJ,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACjD6B,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAvB,EAAA,+EAEPR,EAAa8B,EAAOyK,UAFb,OAGbxM,IAHa,+CAKbiC,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOnC,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEwB,cAAeA,EACfG,SAAUA,EACVR,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAYlC,aACtBoC,QAASF,EAAYG,YAHvB,UAKE,eAAC,IAAMxB,KAAP,WACE,cAAC,IAAD,CACEyB,KAAK,WACLC,UAAWmM,IACX3L,YAAY,kBACZL,KAAK,WACLI,MAAM,aAER,cAAC,IAAD,CACER,KAAK,uBACLC,UAAWmM,IACX3L,YAAY,yBACZL,KAAK,WACLI,MAAM,6BAIV,eAAC,IAAMhC,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAU2B,KAAK,SAA/B,UACGR,EAAY7B,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX,0B,gIChERC,EAAmBC,MAAaC,MAAM,CAC1C2E,UAAW5E,MAAaG,SAAS,2BACjCa,KAAMhB,MAAaG,SAAS,2BAC5B+K,QAASlL,MAAaG,SAAS,6BAgFlBkN,IA7EW,SAAC,GAMpB,IALLzO,EAKI,EALJA,MACAJ,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACA0B,EACI,EADJA,cAEMG,EAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAvB,EAAA,+EAEPR,EAAa8B,GAFN,OAGb/B,IAHa,+CAKbiC,QAAQC,IAAR,MALa,wDAAH,wDAUd,OACE,eAAC,IAAD,CAAOnC,KAAMA,EAAMW,OAAQV,EAA3B,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcV,MAEhB,cAAC,IAAD,CACEwB,cAAeA,EACfG,SAAUA,EACVR,iBAAkBA,EAHpB,SAKG,SAACa,GAAD,OACC,eAAC,IAAD,CACEC,YAAU,EACVN,SAAUK,EAAYlC,aACtBoC,QAASF,EAAYG,YAHvB,UAKE,eAAC,IAAMxB,KAAP,WACE,cAAC,IAAD,CACEyB,KAAK,YACLC,UAAWmM,IACX5L,MAAM,UACNC,YAAY,gBAEd,cAAC,IAAD,CACET,KAAK,OACLC,UAAWmM,IACX5L,MAAM,WACNC,YAAY,gBAEd,cAAC,IAAD,CACET,KAAK,UACLC,UAAWmM,IACX5L,MAAM,UACNC,YAAY,uCAIhB,eAAC,IAAMjC,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASjB,EAArC,oBAGA,eAAC,IAAD,CAAQgB,QAAQ,UAAU2B,KAAK,SAA/B,UACGR,EAAY7B,cACX,cAAC,IAAD,CACEY,UAAU,SACVC,GAAG,OACHC,KAAK,SACLC,KAAK,OANX","file":"static/js/1.df550ae1.chunk.js","sourcesContent":["import { Modal, Button, Spinner } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst ConfirmationModal = ({\n  show,\n  handleClose,\n  handleSubmit,\n  handleError,\n  title,\n  content,\n}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleClick = async () => {\n    if (handleSubmit) {\n      setIsSubmitting(true)\n      try {\n        await handleSubmit()\n      } catch (e) {\n        if (handleError) {\n          handleError(e)\n        }\n      }\n    }\n    // handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{content}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleClick}>\n          {isSubmitting && (\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\n          )}\n          OK\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmationModal\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\n\nconst validationSchema = Yup.object().shape({\n  itemId: Yup.string().required('This field is required.'),\n})\n\nconst initialValues = {\n  itemId: '',\n}\n\nconst SelectItemModal = ({\n  title,\n  show,\n  handleClose,\n  handleSubmit,\n  handleSearchItems,\n}) => {\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values.itemId)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('itemId', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"itemId\"\n                component={AsyncSelectField}\n                loadOptions={handleSearchItems}\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default SelectItemModal\n","import { ErrorMessage } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport AsyncSelect from 'react-select/async'\n\nfunction AsyncSelectField(props) {\n  const { field, form, label, placeholder, disabled, loadOptions } = props\n  const { name, onBlur } = field\n  const { errors, touched } = form\n  const showError = errors[name] && touched[name]\n\n  const handleSelectedOptionChange = (selectedOption) => {\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\n    const changeEvent = {\n      target: {\n        name: name,\n        value: selectedValue,\n      },\n    }\n    field.onChange(changeEvent)\n  }\n\n  return (\n    <Form.Group className=\"mb-3\">\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\n      <AsyncSelect\n        id={name}\n        onChange={handleSelectedOptionChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        loadOptions={loadOptions}\n        disabled={disabled}\n        className={showError ? 'is-invalid' : ''}\n      />\n      <ErrorMessage\n        name={name}\n        render={(msg) => (\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\n        )}\n      />\n    </Form.Group>\n  )\n}\n\nexport default AsyncSelectField\n","import { FACULTY, LECTURER, LECTURER_LIST } from '../tagConstants'\nimport { apiSlice } from '../index'\n\nconst extendedApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    searchFaculties: builder.mutation({\n      query: (queryStr) => ({\n        url: '/group',\n        method: 'GET',\n        params: { query: queryStr || '', groupType: 'FACULTY' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result.map((faculty) => ({ type: FACULTY, id: faculty.groupId })),\n    }),\n\n    getFacultyInfo: builder.query({\n      query: (groupId) => ({\n        url: '/faculty/info',\n        method: 'GET',\n        params: { groupId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: FACULTY, id: result.groupId },\n      ],\n    }),\n\n    getFacultyLecturers: builder.query({\n      query: (groupId) => ({\n        url: '/group/user',\n        method: 'GET',\n        params: { groupId, role: 'LECTURER' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result\n          .map((lecturer) => ({ type: LECTURER, id: lecturer.userId }))\n          .concat([{ type: LECTURER_LIST, id: arg }]),\n    }),\n\n    addNewFaculty: builder.mutation({\n      query: ({ facultyName, displayId }) => ({\n        url: '/faculty',\n        method: 'POST',\n        body: { facultyName, displayId },\n      }),\n    }),\n\n    removeFaculty: builder.mutation({\n      query: ({ groupId }) => ({\n        url: '/group',\n        method: 'DELETE',\n        params: { groupId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n\n    changeFacultyName: builder.mutation({\n      query: ({ groupId, groupName }) => ({\n        url: '/group/name',\n        method: 'PUT',\n        body: { groupId, groupName },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n\n    changeFacultyDisplayId: builder.mutation({\n      query: ({ groupId, displayId }) => ({\n        url: '/group/displayId',\n        method: 'PUT',\n        body: { groupId, displayId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n\n    changeFacultyAdmin: builder.mutation({\n      query: ({ groupId, adminId }) => ({\n        url: '/faculty',\n        method: 'PUT',\n        body: { groupId, adminId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: FACULTY, id: arg.groupId },\n      ],\n    }),\n  }),\n})\n\nexport const {\n  useSearchFacultiesMutation,\n  useGetFacultyInfoQuery,\n  useGetFacultyLecturersQuery,\n  useAddNewFacultyMutation,\n  useRemoveFacultyMutation,\n  useChangeFacultyNameMutation,\n  useChangeFacultyDisplayIdMutation,\n  useChangeFacultyAdminMutation,\n} = extendedApi\n","import { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\n\nconst SearchCard = ({\n  label,\n  items = [],\n  selectedItemKey,\n  keySelector,\n  nameSelector,\n  showKey,\n  onSearch,\n  onAdd,\n  onSelect,\n}) => {\n  useEffect(() => {\n    if (!selectedItemKey) {\n      // On mount, if no item selected, get something\n      onSearch(selectedItemKey)\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  const [query, setQuery] = useState('')\n\n  const listItems = items\n    .filter(\n      (item) =>\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\n    )\n    .map((item) => {\n      const itemKey = keySelector(item)\n      const itemName = nameSelector(item)\n      return (\n        <ListGroup.Item\n          key={itemKey}\n          active={itemKey === selectedItemKey}\n          action\n          onClick={() => onSelect(item)}\n          className=\"user-select-none\"\n        >\n          <div className=\"d-flex justify-content-between\">\n            {itemName}\n            {showKey ? <div>{itemKey}</div> : null}\n          </div>\n        </ListGroup.Item>\n      )\n    })\n\n  return (\n    <Card border=\"secondary\">\n      <Card.Header className=\"d-flex justify-content-between\">\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\n          <Form.Control\n            placeholder=\"placeholder\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n          />\n        </FloatingLabel>\n        <Button\n          variant=\"secondary\"\n          className=\"mx-1\"\n          onClick={() => {\n            onSearch(query)\n            setQuery('')\n          }}\n        >\n          Find\n        </Button>\n        <Button variant=\"secondary\" onClick={onAdd}>\n          Add\n        </Button>\n      </Card.Header>\n      {listItems.length !== 0 ? (\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\n      ) : null}\n      <Card.Footer className=\"text-muted text-center\">\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default SearchCard\n","import {\n  Card,\n  Form,\n  Col,\n  Row,\n  NavLink,\n  ListGroup,\n  DropdownButton,\n  Dropdown,\n} from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst DetailCard = (props) => {\n  const {\n    label,\n    buttons = [],\n    fields = [],\n    links = [],\n    listItems = [],\n    listItemLabel,\n    keySelector,\n    nameSelector,\n    linkSelector,\n  } = props\n  const navigate = useNavigate()\n  const itemList = listItems.map((item) => (\n    <ListGroup.Item key={keySelector(item)}>\n      <div className=\"d-flex justify-content-between\">\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\n        <Link\n          to={linkSelector(item)}\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\n      </div>\n    </ListGroup.Item>\n  ))\n\n  return (\n    <Card border=\"secondary\">\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\n        <DropdownButton variant=\"secondary\" title=\"Options\">\n          {buttons.map(({ label, onClick }) => (\n            <Dropdown.Item key={label} onClick={onClick}>\n              {label}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      </Card.Header>\n      <Card.Body>\n        {fields.map(({ label, content }) => (\n          <Form.Group key={label} as={Row} className=\"mb-1\">\n            <Form.Label column sm=\"3\">\n              {label}:\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control\n                plaintext\n                readOnly\n                className={content ? '' : 'text-muted'}\n                value={content ?? '[not available]'}\n              />\n            </Col>\n          </Form.Group>\n        ))}\n        {links.map(({ label, content, destination }) => (\n          <Form.Group key={label} as={Row} className=\"mb-1\">\n            <Form.Label column sm=\"3\">\n              {label}:\n            </Form.Label>\n            <Col sm=\"9\">\n              {content ? (\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\n                  {content}\n                </NavLink>\n              ) : (\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\n              )}\n            </Col>\n          </Form.Group>\n        ))}\n      </Card.Body>\n      {itemList.length !== 0 ? (\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\n      ) : null}\n    </Card>\n  )\n}\n\nexport default DetailCard\n","import { Fragment, useState } from 'react'\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport ConfirmationModal from '../modals/ConfirmationModal'\nimport SelectItemModal from '../modals/SelectItemModal'\n\nconst ListCard = ({\n  label,\n  items,\n  keySelector,\n  nameSelector,\n  linkSelector,\n  showButtons,\n  handleRemove,\n  handleAdd,\n  handleSearchItems,\n}) => {\n  const [query, setQuery] = useState('')\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\n  const [showAddModal, setShowAddModal] = useState()\n  const itemKeys = items.map((item) => keySelector(item))\n\n  const listItems = items\n    .filter(\n      (item) =>\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\n    )\n    .map((item) => {\n      const itemKey = keySelector(item)\n      const itemName = nameSelector(item)\n      const isActive = itemKey === keySelector(selectedItem)\n      return (\n        <ListGroup.Item\n          key={itemKey}\n          action\n          className=\"user-select-none\"\n          onClick={() => setSelectedItem(item)}\n          active={isActive}\n        >\n          <div className=\"d-flex justify-content-between\">\n            {itemName}\n            <Link\n              style={\n                isActive\n                  ? {\n                      color: '#fff',\n                    }\n                  : {}\n              }\n              to={linkSelector(item)}\n            >{`Go to ${label.toLowerCase()}`}</Link>\n          </div>\n        </ListGroup.Item>\n      )\n    })\n\n  return (\n    <Fragment>\n      <Card border=\"secondary\">\n        <Card.Header className=\"d-flex justify-content-between\">\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\n            <Form.Control\n              placeholder=\"placeholder\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </FloatingLabel>\n          {showButtons ? (\n            <>\n              <Button\n                variant=\"secondary\"\n                className=\"mx-1\"\n                onClick={() => setShowAddModal(true)}\n              >\n                Add\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  if (keySelector(selectedItem)) {\n                    setShowRemoveWarning(true)\n                  } else {\n                    setShowSelectWarning(true)\n                  }\n                }}\n              >\n                Remove\n              </Button>\n            </>\n          ) : null}\n        </Card.Header>\n        {listItems.length !== 0 ? (\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\n        ) : null}\n        <Card.Footer className=\"text-muted text-center\">\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\n        </Card.Footer>\n      </Card>\n      <ConfirmationModal\n        title=\"Warning\"\n        content={`Please select one ${label.toLowerCase()} from the list.`}\n        show={showSelectWarning}\n        handleClose={() => setShowSelectWarning(false)}\n      />\n      <ConfirmationModal\n        title={`Remove ${label.toLowerCase()}?`}\n        content=\"This action cannot be undone. List will be updated.\"\n        show={showRemoveWarning}\n        handleClose={() => setShowRemoveWarning(false)}\n        handleSubmit={async () => {\n          await handleRemove(selectedItem)\n        }}\n      />\n      <SelectItemModal\n        title={`Add new ${label.toLowerCase()}`}\n        show={showAddModal}\n        handleClose={() => setShowAddModal(false)}\n        handleSubmit={handleAdd}\n        handleSearchItems={async (query) => {\n          const itemList = await handleSearchItems(query)\n          return itemList.filter((item) => !itemKeys.includes(item.value))\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default ListCard\n","import { useEffect, useRef } from 'react'\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n\nexport default usePrevious\n","import { useEffect } from 'react'\nimport { useMatch, useNavigate } from 'react-router'\nimport usePrevious from './usePrevious'\n\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\n  const navigate = useNavigate()\n  const match = useMatch('/:resource/:itemId') // Can be customized\n  const itemIdParam = match?.params?.itemId\n  const resourceParam = match?.params?.resource\n  const prevSelectedId = usePrevious(selectedItemId)\n\n  useEffect(() => {\n    if (selectedItemId) {\n      if (itemIdParam) {\n        if (itemIdParam !== selectedItemId) {\n          if (prevSelectedId) {\n            if (itemIdParam === prevSelectedId) {\n              // Update url based on selected item\n              navigate(selectedItemId.toString())\n            } else {\n              // Weird?\n              console.log('Weird?', {\n                itemIdParam,\n                prevSelectedId,\n                selectedItemId,\n              })\n            }\n          } else {\n            // Link from another resource\n            setSelectedItemId(itemIdParam)\n          }\n        } else {\n          // In sync, nothing changes, good!\n        }\n      } else {\n        // First select\n        navigate(selectedItemId.toString())\n      }\n    } else {\n      if (prevSelectedId) {\n        if (prevSelectedId === itemIdParam) {\n          // Current item deleted, selected ID is null\n          navigate(`/${resourceParam}`) // Clear param\n        } else {\n          // Weird?\n          console.log('Weird?', {\n            itemIdParam,\n            prevSelectedId,\n            selectedItemId,\n          })\n        }\n      } else {\n        if (itemIdParam) {\n          // Fresh load selected item from entered url\n          setSelectedItemId(itemIdParam)\n        } else {\n          // Fresh load with no param\n        }\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedItemId, itemIdParam])\n}\n\nexport default useItemParam\n","import {\n  COURSE,\n  COURSE_LIST,\n  FACULTY,\n  MENTORGROUP,\n  STUDENT,\n  STUDENT_LIST,\n} from '../tagConstants'\nimport { apiSlice } from '../index'\n\nconst extendedApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    searchStudents: builder.mutation({\n      query: (queryStr) => ({\n        url: '/user',\n        method: 'GET',\n        params: { role: 'STUDENT', query: queryStr || '' },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result.map((student) => ({ type: STUDENT, id: student.id })),\n    }),\n\n    getStudentInfo: builder.query({\n      query: (studentId) => ({\n        url: '/user/info',\n        method: 'GET',\n        params: { userId: studentId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: STUDENT, id: result.id },\n      ],\n    }),\n\n    getStudentMentorGroup: builder.query({\n      query: (studentId) => ({\n        url: '/student/mentor',\n        method: 'GET',\n        params: { studentId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: MENTORGROUP, id: result.groupId },\n        { type: STUDENT, id: arg },\n      ],\n    }),\n\n    getStudentFaculty: builder.query({\n      query: (studentId) => ({\n        url: '/user/faculty',\n        method: 'GET',\n        params: { userId: studentId },\n      }),\n      providesTags: (result = {}, error, arg) => [\n        { type: FACULTY, id: result.groupId },\n        { type: STUDENT, id: arg },\n      ],\n    }),\n\n    getStudentCourses: builder.query({\n      query: (studentId) => ({\n        url: '/student/course',\n        method: 'GET',\n        params: { studentId },\n      }),\n      providesTags: (result = [], error, arg) =>\n        result\n          .map((course) => ({\n            type: COURSE,\n            id: course.groupId,\n          }))\n          .concat([{ type: COURSE_LIST, id: arg }]),\n    }),\n\n    addNewStudent: builder.mutation({\n      query: ({ displayId, name, password, address, facultyId }) => ({\n        url: '/user',\n        method: 'POST',\n        body: {\n          displayId,\n          name,\n          password,\n          role: 'STUDENT',\n          address,\n          facultyId,\n        },\n      }),\n    }),\n\n    removeStudent: builder.mutation({\n      query: ({ userId }) => ({\n        url: '/user',\n        method: 'DELETE',\n        params: { userId },\n      }),\n      invalidatesTags: (result = [], error, arg) => [\n        { type: STUDENT, id: arg.userId },\n      ],\n    }),\n\n    addStudentCourse: builder.mutation({\n      query: ({ userId, groupId }) => ({\n        url: '/group/user',\n        method: 'POST',\n        params: { userId, groupId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: COURSE_LIST, id: arg.userId },\n        { type: STUDENT_LIST, id: arg.groupId },\n      ],\n    }),\n\n    removeStudentCourse: builder.mutation({\n      query: ({ userId, groupId }) => ({\n        url: '/group/user',\n        method: 'DELETE',\n        params: { userId, groupId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: COURSE_LIST, id: arg.userId },\n        { type: STUDENT_LIST, id: arg.groupId },\n      ],\n    }),\n\n    changeUserPassword: builder.mutation({\n      query: ({ userId, password }) => ({\n        url: '/user/password',\n        method: 'PUT',\n        body: { userId, password },\n      }),\n    }),\n\n    changeStudentInfo: builder.mutation({\n      query: ({ id, name, address, displayId }) => ({\n        url: '/user',\n        method: 'PUT',\n        body: { id, name, address, displayId },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        {\n          type: STUDENT,\n          id: arg.id,\n        },\n      ],\n    }),\n\n    changeStudentMentor: builder.mutation({\n      query: ({ id, currentMentorGroupId, newMentorGroupId }) => ({\n        url: '/user/group',\n        method: 'PUT',\n        body: {\n          userId: id,\n          currentGroupId: currentMentorGroupId,\n          newGroupId: newMentorGroupId,\n        },\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: STUDENT, id: arg.id },\n        { type: STUDENT_LIST, id: arg.currentMentorGroupId },\n        { type: STUDENT_LIST, id: arg.newMentorGroupId },\n      ],\n    }),\n\n    changeStudentFaculty: builder.mutation({\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\n        url: '/user/group',\n        method: 'PUT',\n        body: {\n          userId: id,\n          currentGroupId: currentFacultyId,\n          newGroupId: newFacultyId,\n        },\n      }),\n      invalidatesTags: (result, error, arg) => [{ type: STUDENT, id: arg.id }],\n    }),\n  }),\n})\n\nexport const {\n  useSearchStudentsMutation,\n  useGetStudentMentorGroupQuery,\n  useGetStudentCoursesQuery,\n  useGetStudentFacultyQuery,\n  useGetStudentInfoQuery,\n  useAddNewStudentMutation,\n  useRemoveStudentMutation,\n  useAddStudentCourseMutation,\n  useRemoveStudentCourseMutation,\n  useChangeUserPasswordMutation,\n  useChangeStudentInfoMutation,\n  useChangeStudentMentorMutation,\n  useChangeStudentFacultyMutation,\n} = extendedApi\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport InputField from '../../custom-fields/InputField'\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('This field is required.'),\n  passwordConfirmation: Yup.string().test(\n    'passwords-match',\n    'Passwords must match',\n    function (value) {\n      return this.parent.password === value\n    },\n  ),\n})\n\nconst initialValues = {\n  password: '',\n  passwordConfirmation: '',\n}\n\nconst ChangePasswordModal = ({ title, show, handleClose, handleSubmit }) => {\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values.password)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('password', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"password\"\n                component={InputField}\n                placeholder=\"New password...\"\n                type=\"password\"\n                label=\"Password\"\n              />\n              <FastField\n                name=\"passwordConfirmation\"\n                component={InputField}\n                placeholder=\"Type password again...\"\n                type=\"password\"\n                label=\"Password confirmation\"\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default ChangePasswordModal\n","import * as Yup from 'yup'\nimport { FastField, Formik } from 'formik'\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\nimport InputField from '../../../components/custom-fields/InputField'\n\nconst validationSchema = Yup.object().shape({\n  displayId: Yup.string().required('This field is required.'),\n  name: Yup.string().required('This field is required.'),\n  address: Yup.string().required('This field is required.'),\n})\n\nconst EditUserInfoModal = ({\n  title,\n  show,\n  handleClose,\n  handleSubmit,\n  initialValues,\n}) => {\n  const onSubmit = async (values, actions) => {\n    try {\n      await handleSubmit(values)\n      handleClose()\n    } catch (e) {\n      console.log(e)\n      // actions.setFieldError('id', e)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form\n            noValidate\n            onSubmit={formikProps.handleSubmit}\n            onReset={formikProps.handleReset}\n          >\n            <Modal.Body>\n              <FastField\n                name=\"displayId\"\n                component={InputField}\n                label=\"User ID\"\n                placeholder=\"ITITIU18302\"\n              />\n              <FastField\n                name=\"name\"\n                component={InputField}\n                label=\"Fullname\"\n                placeholder=\"Le Van A...\"\n              />\n              <FastField\n                name=\"address\"\n                component={InputField}\n                label=\"Address\"\n                placeholder=\"District 5, Ho Chi Minh City...\"\n              />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                {formikProps.isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    as=\"span\"\n                    role=\"status\"\n                    size=\"sm\"\n                  />\n                )}\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n\nexport default EditUserInfoModal\n"],"sourceRoot":""}