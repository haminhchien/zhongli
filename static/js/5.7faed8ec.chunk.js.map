{"version":3,"sources":["components/modals/ConfirmationModal/index.jsx","components/modals/SelectItemModal/index.jsx","app/api/user/lecturerSlice.js","components/custom-fields/AsyncSelectField/index.jsx","components/SearchCard/index.jsx","components/DetailCard/index.jsx","components/ListCard/index.jsx","hooks/usePrevious.js","hooks/useItemParam.js","app/api/user/studentSlice.js","app/api/group/courseSlice.js","components/modals/EditFieldModal/index.jsx","pages/Course/components/CourseSearchCard/CourseAddModal.jsx","pages/Course/components/CourseSearchCard/index.jsx","pages/Course/components/CourseDetailCard/index.jsx","pages/Course/components/CourseListCard/index.jsx","pages/Course/index.jsx"],"names":["ConfirmationModal","show","handleClose","handleSubmit","handleError","title","content","useState","isSubmitting","setIsSubmitting","handleClick","a","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","animation","as","role","size","validationSchema","Yup","shape","itemId","required","initialValues","SelectItemModal","handleSearchItems","onSubmit","values","actions","console","log","formikProps","noValidate","onReset","handleReset","name","component","AsyncSelectField","loadOptions","type","extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchLecturers","mutation","query","queryStr","url","method","params","providesTags","result","map","lecturer","LECTURER","id","getLecturerInfo","lecturerId","userId","error","arg","getLecturerMentorGroups","mentorGroup","MENTORGROUP","groupId","concat","MENTORGROUP_LIST","getLecturerFaculty","FACULTY","getLecturerCourses","course","COURSE","COURSE_LIST","addNewLecturer","body","password","address","facultyId","displayId","invalidatesTags","LECTURER_LIST","removeLecturer","changeLecturerInfo","changeLecturerFaculty","currentGroupId","currentFacultyId","newGroupId","newFacultyId","useSearchLecturersMutation","useGetLecturerMentorGroupsQuery","useGetLecturerCoursesQuery","useGetLecturerFacultyQuery","useGetLecturerInfoQuery","useAddNewLecturerMutation","useRemoveLecturerMutation","useChangeLecturerInfoMutation","useChangeLecturerFacultyMutation","props","field","form","label","placeholder","disabled","onBlur","errors","touched","showError","Group","className","Label","htmlFor","onChange","selectedOption","selectedValue","value","changeEvent","target","render","msg","Control","Feedback","SearchCard","items","selectedItemKey","keySelector","nameSelector","showKey","onSearch","onAdd","onSelect","useEffect","setQuery","listItems","filter","item","toUpperCase","includes","itemKey","itemName","Item","active","action","border","e","length","toLowerCase","DetailCard","buttons","fields","links","listItemLabel","linkSelector","navigate","useNavigate","itemList","to","Row","column","sm","plaintext","readOnly","destination","ListCard","showButtons","handleRemove","handleAdd","selectedItem","setSelectedItem","showSelectWarning","setShowSelectWarning","showRemoveWarning","setShowRemoveWarning","showAddModal","setShowAddModal","itemKeys","isActive","style","color","usePrevious","ref","useRef","current","useItemParam","selectedItemId","setSelectedItemId","match","useMatch","itemIdParam","resourceParam","resource","prevSelectedId","toString","searchStudents","student","STUDENT","getStudentInfo","studentId","getStudentMentorGroup","getStudentFaculty","getStudentCourses","addNewStudent","removeStudent","addStudentCourse","STUDENT_LIST","removeStudentCourse","changeUserPassword","changeStudentInfo","changeStudentMentor","currentMentorGroupId","newMentorGroupId","changeStudentFaculty","useSearchStudentsMutation","useGetStudentMentorGroupQuery","useGetStudentCoursesQuery","useGetStudentFacultyQuery","useGetStudentInfoQuery","useAddNewStudentMutation","useRemoveStudentMutation","useAddStudentCourseMutation","useRemoveStudentCourseMutation","useChangeUserPasswordMutation","useChangeStudentInfoMutation","useChangeStudentMentorMutation","useChangeStudentFacultyMutation","searchCourses","groupType","getCourseInfo","getCourseStudents","addNewCourse","courseName","timeSlot","removeCourse","changeCourseName","groupName","changeCourseDisplayId","changeCourseTimeSlot","changeCourseLecturer","currentLecturerId","newLecturerId","useSearchCoursesMutation","useGetCourseInfoQuery","useGetCourseStudentsQuery","useAddNewCourseMutation","useRemoveCourseMutation","useChangeCourseNameMutation","useChangeCourseTimeSlotMutation","useChangeCourseLecturerMutation","useChangeCourseDisplayIdMutation","EditFieldModal","isNumber","singleField","InputField","CourseAddModal","triggerSearch","triggerAdd","dispatch","useDispatch","inputValue","unwrap","lecturers","setSelectedCourseId","Modal","Form","Button","Spinner","CourseSearchCard","trigger","data","selectedCourseId","useSelector","selectedCourseIdSelector","addModal","setAddModal","CourseDetailCard","courseInfo","isFetching","triggerRemoveCourse","triggerRename","triggerChangeLecturer","triggerSearchLecturers","triggerChangeTimeSlot","triggerChangeId","showRenameModal","setShowRenameModal","showChangeIdModal","setShowChangeIdModal","showChangeLecturerModal","setShowChangeLecturerModal","showChangeTimeSlotModal","setShowChangeTimeSlotModal","lecturerName","newGroupName","newCourseId","newTimeSlot","CourseListCard","students","triggerRemoveStudent","triggerAddStudent","triggerSearchStudent","userName","CoursePage","courseId","Col","md"],"mappings":"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","file":"static/js/5.7faed8ec.chunk.js","sourcesContent":["import { Modal, Button, Spinner } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nconst ConfirmationModal = ({\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleError,\r\n  title,\r\n  content,\r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n  const handleClick = async () => {\r\n    if (handleSubmit) {\r\n      setIsSubmitting(true)\r\n      try {\r\n        await handleSubmit()\r\n      } catch (e) {\r\n        if (handleError) {\r\n          handleError(e)\r\n        }\r\n      }\r\n    }\r\n    // handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClick}>\r\n          {isSubmitting && (\r\n            <Spinner animation=\"border\" as=\"span\" role=\"status\" size=\"sm\" />\r\n          )}\r\n          OK\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport AsyncSelectField from '../../../components/custom-fields/AsyncSelectField'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  itemId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  itemId: '',\r\n}\r\n\r\nconst SelectItemModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  handleSearchItems,\r\n}) => {\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.itemId)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('itemId', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"itemId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={handleSearchItems}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SelectItemModal\r\n","import {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchLecturers: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/user',\r\n        method: 'GET',\r\n        params: { role: 'LECTURER', query: queryStr || '' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((lecturer) => ({ type: LECTURER, id: lecturer.id })),\r\n    }),\r\n\r\n    getLecturerInfo: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/info',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result, error, arg) => [{ type: LECTURER, id: arg }],\r\n    }),\r\n\r\n    getLecturerMentorGroups: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/mentor',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) =>\r\n        result\r\n          .map((mentorGroup) => ({\r\n            type: MENTORGROUP,\r\n            id: mentorGroup.groupId,\r\n          }))\r\n          .concat([{ type: MENTORGROUP_LIST, id: arg }]),\r\n    }),\r\n\r\n    getLecturerFaculty: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/faculty',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n        { type: LECTURER, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getLecturerCourses: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/course',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((course) => ({\r\n            type: COURSE,\r\n            id: course.groupId,\r\n          }))\r\n          .concat([{ type: COURSE_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewLecturer: builder.mutation({\r\n      query: ({ name, password, address, facultyId, displayId }) => ({\r\n        url: '/user',\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          password,\r\n          role: 'LECTURER',\r\n          address,\r\n          facultyId,\r\n          displayId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER_LIST, id: arg.facultyId },\r\n      ],\r\n    }),\r\n\r\n    removeLecturer: builder.mutation({\r\n      query: ({ userId }) => ({\r\n        url: '/user',\r\n        method: 'DELETE',\r\n        params: { userId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: LECTURER, id: arg.userId },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerInfo: builder.mutation({\r\n      query: ({ id, name, address, displayId }) => ({\r\n        url: '/user',\r\n        method: 'PUT',\r\n        body: { id, name, address, displayId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        {\r\n          type: LECTURER,\r\n          id: arg.id,\r\n        },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerFaculty: builder.mutation({\r\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentFacultyId,\r\n          newGroupId: newFacultyId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER, id: arg.id },\r\n        { type: LECTURER_LIST, id: arg.currentFacultyId },\r\n        { type: LECTURER_LIST, id: arg.newFacultyId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchLecturersMutation,\r\n  useGetLecturerMentorGroupsQuery,\r\n  useGetLecturerCoursesQuery,\r\n  useGetLecturerFacultyQuery,\r\n  useGetLecturerInfoQuery,\r\n  useAddNewLecturerMutation,\r\n  useRemoveLecturerMutation,\r\n  useChangeLecturerInfoMutation,\r\n  useChangeLecturerFacultyMutation,\r\n} = extendedApi\r\n","import { ErrorMessage } from 'formik'\r\nimport { Form } from 'react-bootstrap'\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nfunction AsyncSelectField(props) {\r\n  const { field, form, label, placeholder, disabled, loadOptions } = props\r\n  const { name, onBlur } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    }\r\n    field.onChange(changeEvent)\r\n  }\r\n\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\r\n      <AsyncSelect\r\n        id={name}\r\n        onChange={handleSelectedOptionChange}\r\n        onBlur={onBlur}\r\n        placeholder={placeholder}\r\n        loadOptions={loadOptions}\r\n        disabled={disabled}\r\n        className={showError ? 'is-invalid' : ''}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={(msg) => (\r\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\r\n        )}\r\n      />\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AsyncSelectField\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\n\r\nconst SearchCard = ({\r\n  label,\r\n  items = [],\r\n  selectedItemKey,\r\n  keySelector,\r\n  nameSelector,\r\n  showKey,\r\n  onSearch,\r\n  onAdd,\r\n  onSelect,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!selectedItemKey) {\r\n      // On mount, if no item selected, get something\r\n      onSearch(selectedItemKey)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [query, setQuery] = useState('')\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          active={itemKey === selectedItemKey}\r\n          action\r\n          onClick={() => onSelect(item)}\r\n          className=\"user-select-none\"\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            {showKey ? <div>{itemKey}</div> : null}\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between\">\r\n        <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n          <Form.Control\r\n            placeholder=\"placeholder\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n        </FloatingLabel>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          onClick={() => {\r\n            onSearch(query)\r\n            setQuery('')\r\n          }}\r\n        >\r\n          Find\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={onAdd}>\r\n          Add\r\n        </Button>\r\n      </Card.Header>\r\n      {listItems.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n      ) : null}\r\n      <Card.Footer className=\"text-muted text-center\">\r\n        {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SearchCard\r\n","import {\r\n  Card,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  NavLink,\r\n  ListGroup,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from 'react-bootstrap'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst DetailCard = (props) => {\r\n  const {\r\n    label,\r\n    buttons = [],\r\n    fields = [],\r\n    links = [],\r\n    listItems = [],\r\n    listItemLabel,\r\n    keySelector,\r\n    nameSelector,\r\n    linkSelector,\r\n  } = props\r\n  const navigate = useNavigate()\r\n  const itemList = listItems.map((item) => (\r\n    <ListGroup.Item key={keySelector(item)}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {nameSelector(item) ?? `[unnamed ${listItemLabel.toLowerCase()}]`}\r\n        <Link\r\n          to={linkSelector(item)}\r\n        >{`Go to ${listItemLabel.toLowerCase()}`}</Link>\r\n      </div>\r\n    </ListGroup.Item>\r\n  ))\r\n\r\n  return (\r\n    <Card border=\"secondary\">\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n        <h1 className=\"display-6 flex-grow-1\">{label} details</h1>\r\n        <DropdownButton variant=\"secondary\" title=\"Actions\">\r\n          {buttons.map(({ label, onClick }) => (\r\n            <Dropdown.Item key={label} onClick={onClick}>\r\n              {label}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {fields.map(({ label, content }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                className={content ? '' : 'text-muted'}\r\n                value={content ?? '[not available]'}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n        {links.map(({ label, content, destination }) => (\r\n          <Form.Group key={label} as={Row} className=\"mb-1\">\r\n            <Form.Label column sm=\"3\">\r\n              {label}:\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n              {content ? (\r\n                <NavLink className=\"px-0\" onClick={() => navigate(destination)}>\r\n                  {content}\r\n                </NavLink>\r\n              ) : (\r\n                <NavLink className=\"text-muted px-0\">[not available]</NavLink>\r\n              )}\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n      </Card.Body>\r\n      {itemList.length !== 0 ? (\r\n        <ListGroup variant=\"flush\">{itemList}</ListGroup>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DetailCard\r\n","import { Fragment, useState } from 'react'\r\nimport { Card, FloatingLabel, Form, ListGroup, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../modals/ConfirmationModal'\r\nimport SelectItemModal from '../modals/SelectItemModal'\r\n\r\nconst ListCard = ({\r\n  label,\r\n  items,\r\n  keySelector,\r\n  nameSelector,\r\n  linkSelector,\r\n  showButtons,\r\n  handleRemove,\r\n  handleAdd,\r\n  handleSearchItems,\r\n}) => {\r\n  const [query, setQuery] = useState('')\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [showSelectWarning, setShowSelectWarning] = useState(false)\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showAddModal, setShowAddModal] = useState()\r\n  const itemKeys = items.map((item) => keySelector(item))\r\n\r\n  const listItems = items\r\n    .filter(\r\n      (item) =>\r\n        keySelector(item).toUpperCase().includes(query.toUpperCase()) ||\r\n        nameSelector(item).toUpperCase().includes(query.toUpperCase()),\r\n    )\r\n    .map((item) => {\r\n      const itemKey = keySelector(item)\r\n      const itemName = nameSelector(item)\r\n      const isActive = itemKey === keySelector(selectedItem)\r\n      return (\r\n        <ListGroup.Item\r\n          key={itemKey}\r\n          action\r\n          className=\"user-select-none\"\r\n          onClick={() => setSelectedItem(item)}\r\n          active={isActive}\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            {itemName}\r\n            <Link\r\n              style={\r\n                isActive\r\n                  ? {\r\n                      color: '#fff',\r\n                    }\r\n                  : {}\r\n              }\r\n              to={linkSelector(item)}\r\n            >{`Go to ${label.toLowerCase()}`}</Link>\r\n          </div>\r\n        </ListGroup.Item>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card border=\"secondary\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <FloatingLabel className=\"flex-grow-1\" label={label}>\r\n            <Form.Control\r\n              placeholder=\"placeholder\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n          </FloatingLabel>\r\n          {showButtons ? (\r\n            <>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"mx-1\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  if (keySelector(selectedItem)) {\r\n                    setShowRemoveWarning(true)\r\n                  } else {\r\n                    setShowSelectWarning(true)\r\n                  }\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </Card.Header>\r\n        {listItems.length !== 0 ? (\r\n          <ListGroup variant=\"flush\">{listItems}</ListGroup>\r\n        ) : null}\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          {`Found ${listItems.length} ${label.toLowerCase()}`}\r\n        </Card.Footer>\r\n      </Card>\r\n      <ConfirmationModal\r\n        title=\"Warning\"\r\n        content={`Please select one ${label.toLowerCase()} from the list.`}\r\n        show={showSelectWarning}\r\n        handleClose={() => setShowSelectWarning(false)}\r\n      />\r\n      <ConfirmationModal\r\n        title={`Remove ${label.toLowerCase()}?`}\r\n        content=\"This action cannot be undone. List will be updated.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          await handleRemove(selectedItem)\r\n        }}\r\n      />\r\n      <SelectItemModal\r\n        title={`Add new ${label.toLowerCase()}`}\r\n        show={showAddModal}\r\n        handleClose={() => setShowAddModal(false)}\r\n        handleSubmit={handleAdd}\r\n        handleSearchItems={async (query) => {\r\n          const itemList = await handleSearchItems(query)\r\n          return itemList.filter((item) => !itemKeys.includes(item.value))\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListCard\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef()\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value]) // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current\r\n}\r\n\r\nexport default usePrevious\r\n","import { useEffect } from 'react'\r\nimport { useMatch, useNavigate } from 'react-router'\r\nimport usePrevious from './usePrevious'\r\n\r\nconst useItemParam = ({ selectedItemId, setSelectedItemId }) => {\r\n  const navigate = useNavigate()\r\n  const match = useMatch('/:resource/:itemId') // Can be customized\r\n  const itemIdParam = match?.params?.itemId\r\n  const resourceParam = match?.params?.resource\r\n  const prevSelectedId = usePrevious(selectedItemId)\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      if (itemIdParam) {\r\n        if (itemIdParam !== selectedItemId) {\r\n          if (prevSelectedId) {\r\n            if (itemIdParam === prevSelectedId) {\r\n              // Update url based on selected item\r\n              navigate(selectedItemId.toString())\r\n            } else {\r\n              // Weird?\r\n              console.log('Weird?', {\r\n                itemIdParam,\r\n                prevSelectedId,\r\n                selectedItemId,\r\n              })\r\n            }\r\n          } else {\r\n            // Link from another resource\r\n            setSelectedItemId(itemIdParam)\r\n          }\r\n        } else {\r\n          // In sync, nothing changes, good!\r\n        }\r\n      } else {\r\n        // First select\r\n        navigate(selectedItemId.toString())\r\n      }\r\n    } else {\r\n      if (prevSelectedId) {\r\n        if (prevSelectedId === itemIdParam) {\r\n          // Current item deleted, selected ID is null\r\n          navigate(`/${resourceParam}`) // Clear param\r\n        } else {\r\n          // Weird?\r\n          console.log('Weird?', {\r\n            itemIdParam,\r\n            prevSelectedId,\r\n            selectedItemId,\r\n          })\r\n        }\r\n      } else {\r\n        if (itemIdParam) {\r\n          // Fresh load selected item from entered url\r\n          setSelectedItemId(itemIdParam)\r\n        } else {\r\n          // Fresh load with no param\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedItemId, itemIdParam])\r\n}\r\n\r\nexport default useItemParam\r\n","import {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  MENTORGROUP,\r\n  STUDENT,\r\n  STUDENT_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchStudents: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/user',\r\n        method: 'GET',\r\n        params: { role: 'STUDENT', query: queryStr || '' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((student) => ({ type: STUDENT, id: student.id })),\r\n    }),\r\n\r\n    getStudentInfo: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/user/info',\r\n        method: 'GET',\r\n        params: { userId: studentId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: STUDENT, id: result.id },\r\n      ],\r\n    }),\r\n\r\n    getStudentMentorGroup: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/student/mentor',\r\n        method: 'GET',\r\n        params: { studentId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: MENTORGROUP, id: result.groupId },\r\n        { type: STUDENT, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getStudentFaculty: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/user/faculty',\r\n        method: 'GET',\r\n        params: { userId: studentId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n        { type: STUDENT, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getStudentCourses: builder.query({\r\n      query: (studentId) => ({\r\n        url: '/student/course',\r\n        method: 'GET',\r\n        params: { studentId },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((course) => ({\r\n            type: COURSE,\r\n            id: course.groupId,\r\n          }))\r\n          .concat([{ type: COURSE_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewStudent: builder.mutation({\r\n      query: ({ displayId, name, password, address, facultyId }) => ({\r\n        url: '/user',\r\n        method: 'POST',\r\n        body: {\r\n          displayId,\r\n          name,\r\n          password,\r\n          role: 'STUDENT',\r\n          address,\r\n          facultyId,\r\n        },\r\n      }),\r\n    }),\r\n\r\n    removeStudent: builder.mutation({\r\n      query: ({ userId }) => ({\r\n        url: '/user',\r\n        method: 'DELETE',\r\n        params: { userId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: STUDENT, id: arg.userId },\r\n      ],\r\n    }),\r\n\r\n    addStudentCourse: builder.mutation({\r\n      query: ({ userId, groupId }) => ({\r\n        url: '/group/user',\r\n        method: 'POST',\r\n        params: { userId, groupId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE_LIST, id: arg.userId },\r\n        { type: STUDENT_LIST, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    removeStudentCourse: builder.mutation({\r\n      query: ({ userId, groupId }) => ({\r\n        url: '/group/user',\r\n        method: 'DELETE',\r\n        params: { userId, groupId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE_LIST, id: arg.userId },\r\n        { type: STUDENT_LIST, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeUserPassword: builder.mutation({\r\n      query: ({ userId, password }) => ({\r\n        url: '/user/password',\r\n        method: 'PUT',\r\n        body: { userId, password },\r\n      }),\r\n    }),\r\n\r\n    changeStudentInfo: builder.mutation({\r\n      query: ({ id, name, address, displayId }) => ({\r\n        url: '/user',\r\n        method: 'PUT',\r\n        body: { id, name, address, displayId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        {\r\n          type: STUDENT,\r\n          id: arg.id,\r\n        },\r\n      ],\r\n    }),\r\n\r\n    changeStudentMentor: builder.mutation({\r\n      query: ({ id, currentMentorGroupId, newMentorGroupId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentMentorGroupId,\r\n          newGroupId: newMentorGroupId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: STUDENT, id: arg.id },\r\n        { type: STUDENT_LIST, id: arg.currentMentorGroupId },\r\n        { type: STUDENT_LIST, id: arg.newMentorGroupId },\r\n      ],\r\n    }),\r\n\r\n    changeStudentFaculty: builder.mutation({\r\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentFacultyId,\r\n          newGroupId: newFacultyId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [{ type: STUDENT, id: arg.id }],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchStudentsMutation,\r\n  useGetStudentMentorGroupQuery,\r\n  useGetStudentCoursesQuery,\r\n  useGetStudentFacultyQuery,\r\n  useGetStudentInfoQuery,\r\n  useAddNewStudentMutation,\r\n  useRemoveStudentMutation,\r\n  useAddStudentCourseMutation,\r\n  useRemoveStudentCourseMutation,\r\n  useChangeUserPasswordMutation,\r\n  useChangeStudentInfoMutation,\r\n  useChangeStudentMentorMutation,\r\n  useChangeStudentFacultyMutation,\r\n} = extendedApi\r\n","import { COURSE, COURSE_LIST, STUDENT, STUDENT_LIST } from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchCourses: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/group',\r\n        method: 'GET',\r\n        params: { query: queryStr || '', groupType: 'COURSE' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((course) => ({ type: COURSE, id: course.groupId })),\r\n    }),\r\n\r\n    getCourseInfo: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/course/info',\r\n        method: 'GET',\r\n        params: { groupId },\r\n      }),\r\n      providesTags: (result, error, arg) => [{ type: COURSE, id: arg }],\r\n    }),\r\n\r\n    getCourseStudents: builder.query({\r\n      query: (groupId) => ({\r\n        url: '/group/user',\r\n        method: 'GET',\r\n        params: { groupId, role: 'STUDENT' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((student) => ({ type: STUDENT, id: student.userId }))\r\n          .concat([{ type: STUDENT_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewCourse: builder.mutation({\r\n      query: ({ courseName, timeSlot, lecturerId, displayId }) => ({\r\n        url: '/course',\r\n        method: 'POST',\r\n        body: { courseName, timeSlot, lecturerId, displayId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: COURSE_LIST, id: arg.lecturerId },\r\n      ],\r\n    }),\r\n\r\n    removeCourse: builder.mutation({\r\n      query: ({ groupId }) => ({\r\n        url: '/group',\r\n        method: 'DELETE',\r\n        params: { groupId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: COURSE, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeCourseName: builder.mutation({\r\n      query: ({ groupId, groupName }) => ({\r\n        url: '/group/name',\r\n        method: 'PUT',\r\n        body: { groupId, groupName },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeCourseDisplayId: builder.mutation({\r\n      query: ({ groupId, displayId }) => ({\r\n        url: '/group/displayId',\r\n        method: 'PUT',\r\n        body: { groupId, displayId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeCourseTimeSlot: builder.mutation({\r\n      query: ({ groupId, timeSlot }) => ({\r\n        url: '/course/timeslot',\r\n        method: 'PUT',\r\n        body: { groupId, timeSlot },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE, id: arg.groupId },\r\n      ],\r\n    }),\r\n\r\n    changeCourseLecturer: builder.mutation({\r\n      query: ({ groupId, currentLecturerId, newLecturerId }) => ({\r\n        url: '/course/lecturer',\r\n        method: 'PUT',\r\n        body: { groupId, lecturerId: newLecturerId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: COURSE, id: arg.groupId },\r\n        { type: COURSE_LIST, id: arg.currentLecturerId },\r\n        { type: COURSE_LIST, id: arg.newLecturerId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchCoursesMutation,\r\n  useGetCourseInfoQuery,\r\n  useGetCourseStudentsQuery,\r\n  useAddNewCourseMutation,\r\n  useRemoveCourseMutation,\r\n  useChangeCourseNameMutation,\r\n  useChangeCourseTimeSlotMutation,\r\n  useChangeCourseLecturerMutation,\r\n  useChangeCourseDisplayIdMutation,\r\n} = extendedApi\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../custom-fields/InputField'\r\n\r\nconst EditFieldModal = ({\r\n  title,\r\n  show,\r\n  handleClose,\r\n  handleSubmit,\r\n  initialValues = '',\r\n  isNumber = false,\r\n}) => {\r\n  const validationSchema = Yup.object().shape({\r\n    singleField: isNumber\r\n      ? Yup.number().required('This field is required.')\r\n      : Yup.string().required('This field is required.'),\r\n  })\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      await handleSubmit(values.singleField)\r\n      handleClose()\r\n    } catch (e) {\r\n      console.log(e)\r\n      // actions.setFieldError('singleField', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          singleField: initialValues,\r\n        }}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"singleField\"\r\n                component={InputField}\r\n                type={isNumber ? 'number' : 'text'}\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditFieldModal\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../../../components/custom-fields/InputField'\r\nimport AsyncSelectField from '../../../../components/custom-fields/AsyncSelectField'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport { useAddNewCourseMutation } from '../../../../app/api/group/courseSlice'\r\nimport { setSelectedCourseId } from '../../../../app/pageSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  displayId: Yup.string().required('This field is required.'),\r\n  courseName: Yup.string().required('This field is required.'),\r\n  timeSlot: Yup.number().required('This field is required.'),\r\n  lecturerId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  displayId: '',\r\n  courseName: '',\r\n  timeSlot: 0,\r\n  lecturerId: '',\r\n}\r\n\r\nconst CourseAddModal = (props) => {\r\n  const { show, handleClose } = props\r\n  const [triggerSearch] = useSearchLecturersMutation()\r\n  const [triggerAdd] = useAddNewCourseMutation()\r\n  const dispatch = useDispatch()\r\n\r\n  const searchLecturers = async (inputValue) => {\r\n    const lecturers = await triggerSearch(inputValue).unwrap()\r\n    return lecturers.map((lecturer) => ({\r\n      value: lecturer.id,\r\n      label: lecturer.name,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      const { groupId } = await triggerAdd(values).unwrap()\r\n      handleClose()\r\n      dispatch(setSelectedCourseId(groupId))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new course</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"courseName\"\r\n                component={InputField}\r\n                label=\"New course name\"\r\n                placeholder=\"Intro to computing...\"\r\n              />\r\n              <FastField\r\n                name=\"displayId\"\r\n                component={InputField}\r\n                label=\"New course ID\"\r\n                placeholder=\"IT011IU\"\r\n              />\r\n              <FastField\r\n                name=\"timeSlot\"\r\n                component={InputField}\r\n                type=\"number\"\r\n                label=\"Time slot\"\r\n                placeholder=\"1-112...\"\r\n              />\r\n              <FastField\r\n                name=\"lecturerId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={searchLecturers}\r\n                label=\"Select lecturer\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CourseAddModal\r\n","import { Fragment, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useSearchCoursesMutation } from '../../../../app/api/group/courseSlice'\r\nimport {\r\n  selectedCourseIdSelector,\r\n  setSelectedCourseId,\r\n} from '../../../../app/pageSlice'\r\nimport SearchCard from '../../../../components/SearchCard'\r\nimport CourseAddModal from './CourseAddModal'\r\n\r\nconst CourseSearchCard = () => {\r\n  const dispatch = useDispatch()\r\n  const [trigger, query] = useSearchCoursesMutation()\r\n  const { data } = query\r\n  const selectedCourseId = useSelector(selectedCourseIdSelector)\r\n  const [addModal, setAddModal] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchCard\r\n        label=\"Course\"\r\n        items={data}\r\n        selectedItemKey={selectedCourseId}\r\n        keySelector={(course) => course.groupId}\r\n        nameSelector={(course) => course.groupName}\r\n        showKey={false}\r\n        onSearch={(query) => trigger(query)}\r\n        onAdd={() => setAddModal(true)}\r\n        onSelect={(course) => dispatch(setSelectedCourseId(course.groupId))}\r\n      />\r\n      <CourseAddModal show={addModal} handleClose={() => setAddModal(false)} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CourseSearchCard\r\n","import { Fragment, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  useChangeCourseDisplayIdMutation,\r\n  useChangeCourseLecturerMutation,\r\n  useChangeCourseNameMutation,\r\n  useChangeCourseTimeSlotMutation,\r\n  useGetCourseInfoQuery,\r\n  useRemoveCourseMutation,\r\n} from '../../../../app/api/group/courseSlice'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport {\r\n  selectedCourseIdSelector,\r\n  setSelectedCourseId,\r\n} from '../../../../app/pageSlice'\r\nimport DetailCard from '../../../../components/DetailCard'\r\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\r\nimport EditFieldModal from '../../../../components/modals/EditFieldModal'\r\nimport SelectItemModal from '../../../../components/modals/SelectItemModal'\r\n\r\nconst CourseDetailCard = () => {\r\n  const selectedCourseId = useSelector(selectedCourseIdSelector)\r\n  const { data: courseInfo, isFetching } =\r\n    useGetCourseInfoQuery(selectedCourseId)\r\n  const [triggerRemoveCourse] = useRemoveCourseMutation()\r\n  const [triggerRename] = useChangeCourseNameMutation()\r\n  const [triggerChangeLecturer] = useChangeCourseLecturerMutation()\r\n  const [triggerSearchLecturers] = useSearchLecturersMutation()\r\n  const [triggerChangeTimeSlot] = useChangeCourseTimeSlotMutation()\r\n  const [triggerChangeId] = useChangeCourseDisplayIdMutation()\r\n\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showRenameModal, setShowRenameModal] = useState(false)\r\n  const [showChangeIdModal, setShowChangeIdModal] = useState(false)\r\n  const [showChangeLecturerModal, setShowChangeLecturerModal] = useState(false)\r\n  const [showChangeTimeSlotModal, setShowChangeTimeSlotModal] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DetailCard\r\n        label=\"Course\"\r\n        fields={[\r\n          { label: 'Course name', content: courseInfo.courseName },\r\n          { label: 'Course ID', content: courseInfo.displayId },\r\n          { label: 'Timeslot', content: courseInfo.timeSlot },\r\n        ]}\r\n        links={[\r\n          {\r\n            label: 'Lecturer',\r\n            content: courseInfo.lecturerName,\r\n            destination: `/lecturer/${courseInfo.lecturerId || ''}`,\r\n          },\r\n        ]}\r\n        buttons={[\r\n          {\r\n            label: 'Rename course',\r\n            onClick: () => {\r\n              setShowRenameModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change course ID',\r\n            onClick: () => {\r\n              setShowChangeIdModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change timeslot',\r\n            onClick: () => {\r\n              setShowChangeTimeSlotModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change lecturer',\r\n            onClick: () => {\r\n              setShowChangeLecturerModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Remove course',\r\n            onClick: () => {\r\n              setShowRemoveWarning(true)\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change course name\"\r\n        show={showRenameModal}\r\n        handleClose={() => {\r\n          setShowRenameModal(false)\r\n        }}\r\n        handleSubmit={async (newGroupName) => {\r\n          await triggerRename({\r\n            groupId: courseInfo.groupId,\r\n            groupName: newGroupName,\r\n          })\r\n        }}\r\n        initialValues={courseInfo.courseName}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change course ID\"\r\n        show={showChangeIdModal}\r\n        handleClose={() => {\r\n          setShowChangeIdModal(false)\r\n        }}\r\n        handleSubmit={async (newCourseId) => {\r\n          await triggerChangeId({\r\n            groupId: courseInfo.groupId,\r\n            displayId: newCourseId,\r\n          })\r\n        }}\r\n        initialValues={courseInfo.displayId}\r\n      />\r\n      <EditFieldModal\r\n        title=\"Change course timeslot\"\r\n        show={showChangeTimeSlotModal}\r\n        handleClose={() => {\r\n          setShowChangeTimeSlotModal(false)\r\n        }}\r\n        handleSubmit={async (newTimeSlot) => {\r\n          await triggerChangeTimeSlot({\r\n            groupId: courseInfo.groupId,\r\n            timeSlot: newTimeSlot,\r\n          })\r\n        }}\r\n        initialValues={courseInfo.timeSlot}\r\n        isNumber\r\n      />\r\n      <SelectItemModal\r\n        title=\"Change lecturer\"\r\n        show={showChangeLecturerModal}\r\n        handleClose={() => {\r\n          setShowChangeLecturerModal(false)\r\n        }}\r\n        handleSubmit={async (newLecturerId) => {\r\n          await triggerChangeLecturer({\r\n            groupId: courseInfo.groupId,\r\n            currentLecturerId: courseInfo.lecturerId,\r\n            newLecturerId,\r\n          })\r\n        }}\r\n        handleSearchItems={async (query) => {\r\n          const lecturers = await triggerSearchLecturers(query).unwrap()\r\n          return lecturers.map((lecturer) => ({\r\n            value: lecturer.id,\r\n            label: lecturer.name,\r\n          }))\r\n        }}\r\n      />\r\n      <ConfirmationModal\r\n        title=\"Remove course?\"\r\n        content=\"All students will be removed from this course too.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          dispatch(setSelectedCourseId(null))\r\n          await triggerRemoveCourse({ groupId: courseInfo.groupId }).unwrap()\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CourseDetailCard\r\n","import { useGetCourseStudentsQuery } from '../../../../app/api/group/courseSlice'\r\nimport {\r\n  useAddStudentCourseMutation,\r\n  useRemoveStudentCourseMutation,\r\n  useSearchStudentsMutation,\r\n} from '../../../../app/api/user/studentSlice'\r\nimport ListCard from '../../../../components/ListCard'\r\n\r\nconst CourseListCard = ({ selectedCourseId }) => {\r\n  const { data: students, isFetching } =\r\n    useGetCourseStudentsQuery(selectedCourseId)\r\n  const [triggerRemoveStudent] = useRemoveStudentCourseMutation()\r\n  const [triggerAddStudent] = useAddStudentCourseMutation()\r\n  const [triggerSearchStudent] = useSearchStudentsMutation()\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <ListCard\r\n      label=\"Student\"\r\n      items={students}\r\n      keySelector={(student) => student.userId}\r\n      nameSelector={(student) => student.userName}\r\n      linkSelector={(student) => `/student/${student.userId}`}\r\n      showButtons={true}\r\n      handleRemove={async (student) => {\r\n        await triggerRemoveStudent({\r\n          userId: student.userId,\r\n          groupId: selectedCourseId,\r\n        }).unwrap()\r\n      }}\r\n      handleAdd={async (studentId) => {\r\n        await triggerAddStudent({\r\n          userId: studentId,\r\n          groupId: selectedCourseId,\r\n        }).unwrap()\r\n      }}\r\n      handleSearchItems={async (query) => {\r\n        const students = await triggerSearchStudent(query).unwrap()\r\n        return students.map((student) => ({\r\n          value: student.id,\r\n          label: student.name,\r\n        }))\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CourseListCard\r\n","import useItemParam from '../../hooks/useItemParam'\r\nimport {\r\n  selectedCourseIdSelector,\r\n  setSelectedCourseId,\r\n} from '../../app/pageSlice'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport CourseSearchCard from './components/CourseSearchCard'\r\nimport CourseDetailCard from './components/CourseDetailCard'\r\nimport CourseListCard from './components/CourseListCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst CoursePage = () => {\r\n  const dispatch = useDispatch()\r\n  const selectedCourseId = useSelector(selectedCourseIdSelector)\r\n\r\n  useItemParam({\r\n    selectedItemId: selectedCourseId,\r\n    setSelectedItemId: (courseId) => {\r\n      dispatch(setSelectedCourseId(courseId))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center my-3\">\r\n      <Col md=\"3\">\r\n        <CourseSearchCard />\r\n      </Col>\r\n      {selectedCourseId ? (\r\n        <>\r\n          <Col md=\"4\">\r\n            <CourseDetailCard selectedCourseId={selectedCourseId} />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <CourseListCard selectedCourseId={selectedCourseId} />\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Col md=\"4\"></Col>\r\n          <Col md=\"4\"></Col>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CoursePage\r\n"],"sourceRoot":""}