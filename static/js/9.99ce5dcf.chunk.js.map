{"version":3,"sources":["app/api/user/lecturerSlice.js","pages/Lecturer/components/LecturerSearchCard/LecturerAddModal.jsx","pages/Lecturer/components/LecturerSearchCard/index.jsx","pages/Lecturer/components/LecturerDetailCard/index.jsx","pages/Lecturer/components/LecturerListCard/index.jsx","pages/Lecturer/index.jsx"],"names":["extendedApi","apiSlice","injectEndpoints","endpoints","builder","searchLecturers","mutation","query","queryStr","url","method","params","role","providesTags","result","map","lecturer","type","LECTURER","id","getLecturerInfo","lecturerId","userId","error","arg","getLecturerMentorGroups","mentorGroup","MENTORGROUP","groupId","concat","MENTORGROUP_LIST","getLecturerFaculty","FACULTY","getLecturerCourses","course","COURSE","COURSE_LIST","addNewLecturer","body","name","password","address","facultyId","displayId","invalidatesTags","LECTURER_LIST","removeLecturer","changeLecturerInfo","changeLecturerFaculty","currentGroupId","currentFacultyId","newGroupId","newFacultyId","useSearchLecturersMutation","useGetLecturerMentorGroupsQuery","useGetLecturerCoursesQuery","useGetLecturerFacultyQuery","useGetLecturerInfoQuery","useAddNewLecturerMutation","useRemoveLecturerMutation","useChangeLecturerInfoMutation","useChangeLecturerFacultyMutation","validationSchema","Yup","shape","required","passwordConfirmation","test","value","this","parent","initialValues","LecturerAddModal","show","handleClose","dispatch","useDispatch","useSearchFacultiesMutation","triggerSearch","triggerAdd","searchFaculties","inputValue","a","unwrap","faculties","faculty","label","groupName","handleSubmit","values","actions","setSelectedLecturerId","console","log","Modal","onHide","Header","closeButton","Title","onSubmit","formikProps","Form","noValidate","onReset","handleReset","Body","component","InputField","placeholder","AsyncSelectField","loadOptions","Footer","Button","variant","onClick","isSubmitting","Spinner","animation","as","size","LecturerSearchCard","trigger","data","selectedLecturerId","useSelector","selectedLecturerIdSelector","useState","addModal","setAddModal","SearchCard","items","selectedItemKey","keySelector","nameSelector","onSearch","onAdd","onSelect","LecturerDetailCard","mentorGroups","mentorIsFetching","isFetching","facultyIsFetching","lecturerInfo","lecturerIsFetching","triggerRemoveLecturer","triggerChangeLecturerInfo","useChangeUserPasswordMutation","triggerChangePassword","triggerChangeFaculty","triggerSearchFaculty","showRemoveWarning","setShowRemoveWarning","showEditInfoModal","setShowEditInfoModal","showChangePasswordModal","setShowChangePasswordModal","showChangeFacultyModal","setShowChangeFacultyModal","DetailCard","fields","content","psid","links","facultyName","destination","buttons","listItems","listItemLabel","linkSelector","EditUserInfoModal","title","ChangePasswordModal","SelectItemModal","handleSearchItems","ConfirmationModal","LecturerListCard","courses","ListCard","courseName","showButtons","LecturerPage","useItemParam","selectedItemId","setSelectedItemId","Row","className","Col","md"],"mappings":"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","file":"static/js/9.99ce5dcf.chunk.js","sourcesContent":["import {\r\n  COURSE,\r\n  COURSE_LIST,\r\n  FACULTY,\r\n  LECTURER,\r\n  LECTURER_LIST,\r\n  MENTORGROUP,\r\n  MENTORGROUP_LIST,\r\n} from '../tagConstants'\r\nimport { apiSlice } from '../index'\r\n\r\nconst extendedApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    searchLecturers: builder.mutation({\r\n      query: (queryStr) => ({\r\n        url: '/user',\r\n        method: 'GET',\r\n        params: { role: 'LECTURER', query: queryStr || '' },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map((lecturer) => ({ type: LECTURER, id: lecturer.id })),\r\n    }),\r\n\r\n    getLecturerInfo: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/info',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result, error, arg) => [{ type: LECTURER, id: arg }],\r\n    }),\r\n\r\n    getLecturerMentorGroups: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/mentor',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) =>\r\n        result\r\n          .map((mentorGroup) => ({\r\n            type: MENTORGROUP,\r\n            id: mentorGroup.groupId,\r\n          }))\r\n          .concat([{ type: MENTORGROUP_LIST, id: arg }]),\r\n    }),\r\n\r\n    getLecturerFaculty: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/user/faculty',\r\n        method: 'GET',\r\n        params: { userId: lecturerId },\r\n      }),\r\n      providesTags: (result = {}, error, arg) => [\r\n        { type: FACULTY, id: result.groupId },\r\n        { type: LECTURER, id: arg },\r\n      ],\r\n    }),\r\n\r\n    getLecturerCourses: builder.query({\r\n      query: (lecturerId) => ({\r\n        url: '/lecturer/course',\r\n        method: 'GET',\r\n        params: { lecturerId },\r\n      }),\r\n      providesTags: (result = [], error, arg) =>\r\n        result\r\n          .map((course) => ({\r\n            type: COURSE,\r\n            id: course.groupId,\r\n          }))\r\n          .concat([{ type: COURSE_LIST, id: arg }]),\r\n    }),\r\n\r\n    addNewLecturer: builder.mutation({\r\n      query: ({ name, password, address, facultyId, displayId }) => ({\r\n        url: '/user',\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          password,\r\n          role: 'LECTURER',\r\n          address,\r\n          facultyId,\r\n          displayId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER_LIST, id: arg.facultyId },\r\n      ],\r\n    }),\r\n\r\n    removeLecturer: builder.mutation({\r\n      query: ({ userId }) => ({\r\n        url: '/user',\r\n        method: 'DELETE',\r\n        params: { userId },\r\n      }),\r\n      invalidatesTags: (result = [], error, arg) => [\r\n        { type: LECTURER, id: arg.userId },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerInfo: builder.mutation({\r\n      query: ({ id, name, address, displayId }) => ({\r\n        url: '/user',\r\n        method: 'PUT',\r\n        body: { id, name, address, displayId },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        {\r\n          type: LECTURER,\r\n          id: arg.id,\r\n        },\r\n      ],\r\n    }),\r\n\r\n    changeLecturerFaculty: builder.mutation({\r\n      query: ({ id, currentFacultyId, newFacultyId }) => ({\r\n        url: '/user/group',\r\n        method: 'PUT',\r\n        body: {\r\n          userId: id,\r\n          currentGroupId: currentFacultyId,\r\n          newGroupId: newFacultyId,\r\n        },\r\n      }),\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: LECTURER, id: arg.id },\r\n        { type: LECTURER_LIST, id: arg.currentFacultyId },\r\n        { type: LECTURER_LIST, id: arg.newFacultyId },\r\n      ],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useSearchLecturersMutation,\r\n  useGetLecturerMentorGroupsQuery,\r\n  useGetLecturerCoursesQuery,\r\n  useGetLecturerFacultyQuery,\r\n  useGetLecturerInfoQuery,\r\n  useAddNewLecturerMutation,\r\n  useRemoveLecturerMutation,\r\n  useChangeLecturerInfoMutation,\r\n  useChangeLecturerFacultyMutation,\r\n} = extendedApi\r\n","import * as Yup from 'yup'\r\nimport { FastField, Formik } from 'formik'\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap'\r\nimport InputField from '../../../../components/custom-fields/InputField'\r\nimport AsyncSelectField from '../../../../components/custom-fields/AsyncSelectField'\r\nimport { useSearchFacultiesMutation } from '../../../../app/api/group/facultySlice'\r\nimport { useAddNewLecturerMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport { setSelectedLecturerId } from '../../../../app/pageSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  displayId: Yup.string().required('This field is required.'),\r\n  name: Yup.string().required('This field is required.'),\r\n  password: Yup.string().required('This field is required.'),\r\n  passwordConfirmation: Yup.string().test(\r\n    'passwords-match',\r\n    'Passwords must match',\r\n    function (value) {\r\n      return this.parent.password === value\r\n    },\r\n  ),\r\n  address: Yup.string().required('This field is required.'),\r\n  facultyId: Yup.string().required('This field is required.'),\r\n})\r\n\r\nconst initialValues = {\r\n  displayId: '',\r\n  name: '',\r\n  password: '',\r\n  passwordConfirmation: '',\r\n  address: '',\r\n  facultyId: '',\r\n}\r\n\r\nconst LecturerAddModal = ({ show, handleClose }) => {\r\n  const dispatch = useDispatch()\r\n  const [triggerSearch] = useSearchFacultiesMutation()\r\n  const [triggerAdd] = useAddNewLecturerMutation()\r\n\r\n  const searchFaculties = async (inputValue) => {\r\n    const faculties = await triggerSearch(inputValue).unwrap()\r\n    return faculties.map((faculty) => ({\r\n      value: faculty.groupId,\r\n      label: faculty.groupName,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (values, actions) => {\r\n    try {\r\n      const { userId } = await triggerAdd(values).unwrap()\r\n      handleClose()\r\n      dispatch(setSelectedLecturerId(userId))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new lecturer</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikProps) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={formikProps.handleSubmit}\r\n            onReset={formikProps.handleReset}\r\n          >\r\n            <Modal.Body>\r\n              <FastField\r\n                name=\"displayId\"\r\n                component={InputField}\r\n                label=\"Lecturer ID\"\r\n                placeholder=\"lecturera...\"\r\n              />\r\n              <FastField\r\n                name=\"name\"\r\n                component={InputField}\r\n                label=\"Name\"\r\n                placeholder=\"Le Van A...\"\r\n              />\r\n              <FastField\r\n                name=\"address\"\r\n                component={InputField}\r\n                label=\"Address\"\r\n                placeholder=\"District 5, Ho Chi Minh City...\"\r\n              />\r\n              <FastField\r\n                name=\"password\"\r\n                component={InputField}\r\n                placeholder=\"New password...\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n              />\r\n              <FastField\r\n                name=\"passwordConfirmation\"\r\n                component={InputField}\r\n                placeholder=\"Type password again...\"\r\n                type=\"password\"\r\n                label=\"Password confirmation\"\r\n              />\r\n              <FastField\r\n                name=\"facultyId\"\r\n                component={AsyncSelectField}\r\n                loadOptions={searchFaculties}\r\n                label=\"Faculty\"\r\n              />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {formikProps.isSubmitting && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    as=\"span\"\r\n                    role=\"status\"\r\n                    size=\"sm\"\r\n                  />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LecturerAddModal\r\n","import { Fragment, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useSearchLecturersMutation } from '../../../../app/api/user/lecturerSlice'\r\nimport {\r\n  selectedLecturerIdSelector,\r\n  setSelectedLecturerId,\r\n} from '../../../../app/pageSlice'\r\nimport SearchCard from '../../../../components/SearchCard'\r\nimport LecturerAddModal from './LecturerAddModal'\r\n\r\nconst LecturerSearchCard = () => {\r\n  const dispatch = useDispatch()\r\n  const [trigger, query] = useSearchLecturersMutation()\r\n  const { data } = query\r\n  const selectedLecturerId = useSelector(selectedLecturerIdSelector)\r\n  const [addModal, setAddModal] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchCard\r\n        label=\"Lecturer\"\r\n        items={data}\r\n        selectedItemKey={selectedLecturerId}\r\n        keySelector={(lecturer) => lecturer.id}\r\n        nameSelector={(lecturer) => lecturer.name}\r\n        // showKey={true}\r\n        onSearch={(query) => trigger(query)}\r\n        onAdd={() => setAddModal(true)}\r\n        onSelect={(lecturer) => dispatch(setSelectedLecturerId(lecturer.id))}\r\n      />\r\n      <LecturerAddModal\r\n        show={addModal}\r\n        handleClose={() => setAddModal(false)}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LecturerSearchCard\r\n","import { Fragment, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSearchFacultiesMutation } from '../../../../app/api/group/facultySlice'\r\nimport {\r\n  useChangeLecturerFacultyMutation,\r\n  useChangeLecturerInfoMutation,\r\n  useGetLecturerFacultyQuery,\r\n  useGetLecturerInfoQuery,\r\n  useGetLecturerMentorGroupsQuery,\r\n  useRemoveLecturerMutation,\r\n} from '../../../../app/api/user/lecturerSlice'\r\nimport { useChangeUserPasswordMutation } from '../../../../app/api/user/studentSlice'\r\nimport { setSelectedLecturerId } from '../../../../app/pageSlice'\r\nimport DetailCard from '../../../../components/DetailCard'\r\nimport ChangePasswordModal from '../../../../components/modals/ChangePasswordModal'\r\nimport ConfirmationModal from '../../../../components/modals/ConfirmationModal'\r\nimport EditUserInfoModal from '../../../../components/modals/EditUserInfoModal'\r\nimport SelectItemModal from '../../../../components/modals/SelectItemModal'\r\n\r\nconst LecturerDetailCard = ({ selectedLecturerId }) => {\r\n  const { data: mentorGroups, isFetching: mentorIsFetching } =\r\n    useGetLecturerMentorGroupsQuery(selectedLecturerId)\r\n  const { data: faculty, isFetching: facultyIsFetching } =\r\n    useGetLecturerFacultyQuery(selectedLecturerId)\r\n  const { data: lecturerInfo, isFetching: lecturerIsFetching } =\r\n    useGetLecturerInfoQuery(selectedLecturerId)\r\n\r\n  const [triggerRemoveLecturer] = useRemoveLecturerMutation()\r\n  const [triggerChangeLecturerInfo] = useChangeLecturerInfoMutation()\r\n  const [triggerChangePassword] = useChangeUserPasswordMutation()\r\n  const [triggerChangeFaculty] = useChangeLecturerFacultyMutation()\r\n  const [triggerSearchFaculty] = useSearchFacultiesMutation()\r\n\r\n  const [showRemoveWarning, setShowRemoveWarning] = useState(false)\r\n  const [showEditInfoModal, setShowEditInfoModal] = useState(false)\r\n  const [showChangePasswordModal, setShowChangePasswordModal] = useState(false)\r\n  const [showChangeFacultyModal, setShowChangeFacultyModal] = useState(false)\r\n\r\n  const isFetching = mentorIsFetching || facultyIsFetching || lecturerIsFetching\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DetailCard\r\n        label=\"Lecturer\"\r\n        fields={[\r\n          { label: 'Name', content: lecturerInfo.name },\r\n          { label: 'ID', content: lecturerInfo.displayId },\r\n          { label: 'PSID', content: lecturerInfo.psid },\r\n          { label: 'Address', content: lecturerInfo.address },\r\n        ]}\r\n        links={[\r\n          {\r\n            label: 'Faculty',\r\n            content: faculty.facultyName,\r\n            destination: `/faculty/${faculty.groupId || ''}`,\r\n          },\r\n        ]}\r\n        buttons={[\r\n          {\r\n            label: 'Edit basic info',\r\n            onClick: () => {\r\n              setShowEditInfoModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change password',\r\n            onClick: () => {\r\n              setShowChangePasswordModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Change faculty',\r\n            onClick: () => {\r\n              setShowChangeFacultyModal(true)\r\n            },\r\n          },\r\n          {\r\n            label: 'Remove lecturer',\r\n            onClick: () => {\r\n              setShowRemoveWarning(true)\r\n            },\r\n          },\r\n        ]}\r\n        listItems={mentorGroups}\r\n        listItemLabel=\"mentor group\"\r\n        nameSelector={(mentorGroup) => mentorGroup.groupName}\r\n        keySelector={(mentorGroup) => mentorGroup.groupId}\r\n        linkSelector={(mentorGroup) => `/mentor/${mentorGroup.groupId}`}\r\n      />\r\n      <EditUserInfoModal\r\n        title=\"Edit lecturer info\"\r\n        show={showEditInfoModal}\r\n        handleClose={() => {\r\n          setShowEditInfoModal(false)\r\n        }}\r\n        handleSubmit={async ({ name, address, displayId }) => {\r\n          await triggerChangeLecturerInfo({\r\n            id: lecturerInfo.id,\r\n            name,\r\n            address,\r\n            displayId,\r\n          })\r\n        }}\r\n        initialValues={{\r\n          name: lecturerInfo.name,\r\n          address: lecturerInfo.address,\r\n          displayId: lecturerInfo.displayId,\r\n        }}\r\n      />\r\n      <ChangePasswordModal\r\n        title=\"Change lecturer password\"\r\n        show={showChangePasswordModal}\r\n        handleClose={() => {\r\n          setShowChangePasswordModal(false)\r\n        }}\r\n        handleSubmit={async (password) => {\r\n          await triggerChangePassword({\r\n            userId: lecturerInfo.id,\r\n            password,\r\n          })\r\n        }}\r\n      />\r\n      <SelectItemModal\r\n        title=\"Change lecturer faculty\"\r\n        show={showChangeFacultyModal}\r\n        handleClose={() => {\r\n          setShowChangeFacultyModal(false)\r\n        }}\r\n        handleSubmit={async (newFacultyId) => {\r\n          await triggerChangeFaculty({\r\n            id: lecturerInfo.id,\r\n            currentFacultyId: faculty.groupId,\r\n            newFacultyId,\r\n          })\r\n        }}\r\n        handleSearchItems={async (query) => {\r\n          const faculties = await triggerSearchFaculty(query).unwrap()\r\n          return faculties.map((faculty) => ({\r\n            value: faculty.groupId,\r\n            label: faculty.groupName,\r\n          }))\r\n        }}\r\n      />\r\n\r\n      <ConfirmationModal\r\n        title=\"Remove lecturer?\"\r\n        content=\"Information related to this lecturer cannot be recovered.\"\r\n        show={showRemoveWarning}\r\n        handleClose={() => setShowRemoveWarning(false)}\r\n        handleSubmit={async () => {\r\n          dispatch(setSelectedLecturerId(null))\r\n          await triggerRemoveLecturer({ userId: lecturerInfo.id }).unwrap()\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LecturerDetailCard\r\n","import { useGetLecturerCoursesQuery } from '../../../../app/api/user/lecturerSlice'\r\nimport ListCard from '../../../../components/ListCard'\r\n\r\nconst LecturerListCard = ({ selectedLecturerId }) => {\r\n  const { data: courses, isFetching } =\r\n    useGetLecturerCoursesQuery(selectedLecturerId)\r\n\r\n  if (isFetching) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <ListCard\r\n      label=\"Course\"\r\n      items={courses}\r\n      keySelector={(course) => course.groupId}\r\n      nameSelector={(course) => course.courseName}\r\n      linkSelector={(course) => `/course/${course.groupId}`}\r\n      showButtons={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LecturerListCard\r\n","import useItemParam from '../../hooks/useItemParam'\r\nimport {\r\n  selectedLecturerIdSelector,\r\n  setSelectedLecturerId,\r\n} from '../../app/pageSlice'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport LecturerSearchCard from './components/LecturerSearchCard'\r\nimport LecturerDetailCard from './components/LecturerDetailCard'\r\nimport LecturerListCard from './components/LecturerListCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst LecturerPage = () => {\r\n  const dispatch = useDispatch()\r\n  const selectedLecturerId = useSelector(selectedLecturerIdSelector)\r\n\r\n  useItemParam({\r\n    selectedItemId: selectedLecturerId,\r\n    setSelectedItemId: (lecturerId) => {\r\n      dispatch(setSelectedLecturerId(lecturerId))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center my-3\">\r\n      <Col md=\"3\">\r\n        <LecturerSearchCard />\r\n      </Col>\r\n      {selectedLecturerId ? (\r\n        <>\r\n          <Col md=\"4\">\r\n            <LecturerDetailCard selectedLecturerId={selectedLecturerId} />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <LecturerListCard selectedLecturerId={selectedLecturerId} />\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Col md=\"4\"></Col>\r\n          <Col md=\"4\"></Col>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default LecturerPage\r\n"],"sourceRoot":""}